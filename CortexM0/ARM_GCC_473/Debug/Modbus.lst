ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Modbus.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	holdingReg,200,4
  18              		.comm	coils,50,4
  19              		.comm	received,125,4
  20              		.comm	response,125,4
  21              		.global	newMessage
  22              		.data
  23              		.type	newMessage, %object
  24              		.size	newMessage, 1
  25              	newMessage:
  26 0000 01       		.byte	1
  27              		.global	middleOfMessage
  28              		.bss
  29              		.type	middleOfMessage, %object
  30              		.size	middleOfMessage, 1
  31              	middleOfMessage:
  32 0000 00       		.space	1
  33              		.global	z
  34              		.type	z, %object
  35              		.size	z, 1
  36              	z:
  37 0001 00       		.space	1
  38              		.global	messageLengthNotChanged
  39              		.type	messageLengthNotChanged, %object
  40              		.size	messageLengthNotChanged, 1
  41              	messageLengthNotChanged:
  42 0002 00       		.space	1
  43              		.global	messageLength
  44              		.type	messageLength, %object
  45              		.size	messageLength, 1
  46              	messageLength:
  47 0003 00       		.space	1
  48              		.global	oldMessageLength
  49              		.type	oldMessageLength, %object
  50              		.size	oldMessageLength, 1
  51              	oldMessageLength:
  52 0004 00       		.space	1
  53              		.global	timerCount
  54              		.type	timerCount, %object
  55              		.size	timerCount, 1
  56              	timerCount:
  57 0005 00       		.space	1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 2


  58              		.global	middleMessageCount
  59              		.type	middleMessageCount, %object
  60              		.size	middleMessageCount, 1
  61              	middleMessageCount:
  62 0006 00       		.space	1
  63              		.global	newMessageCount
  64              		.type	newMessageCount, %object
  65              		.size	newMessageCount, 1
  66              	newMessageCount:
  67 0007 00       		.space	1
  68              		.global	oldPin
  69              		.type	oldPin, %object
  70              		.size	oldPin, 1
  71              	oldPin:
  72 0008 00       		.space	1
  73              		.global	modbusMessage
  74              		.type	modbusMessage, %object
  75              		.size	modbusMessage, 1
  76              	modbusMessage:
  77 0009 00       		.space	1
  78              		.global	turnLineAround
  79              		.type	turnLineAround, %object
  80              		.size	turnLineAround, 1
  81              	turnLineAround:
  82 000a 00       		.space	1
  83              		.section	.text.decodeMessage,"ax",%progbits
  84              		.align	2
  85              		.global	decodeMessage
  86              		.code	16
  87              		.thumb_func
  88              		.type	decodeMessage, %function
  89              	decodeMessage:
  90              	.LFB33:
  91              		.file 1 ".\\Modbus.c"
   1:.\Modbus.c    **** /* ========================================
   2:.\Modbus.c    ****  *
   3:.\Modbus.c    ****  * Copyright Sam Walsh, 2014
   4:.\Modbus.c    ****  * All Rights Reserved.
   5:.\Modbus.c    ****  *
   6:.\Modbus.c    ****  * Modbus.c all of the modbus and communication functions
   7:.\Modbus.c    ****  *
   8:.\Modbus.c    ****  * ========================================
   9:.\Modbus.c    **** */
  10:.\Modbus.c    **** #include <project.h>
  11:.\Modbus.c    **** #include <cydevice_trm.h>
  12:.\Modbus.c    **** #include <CyLib.h>
  13:.\Modbus.c    **** #include <interrupts.h>
  14:.\Modbus.c    **** #include <ModbusUART.h>
  15:.\Modbus.c    **** #include <MessageTimer.h>
  16:.\Modbus.c    **** #include <Modbus.h>
  17:.\Modbus.c    **** 
  18:.\Modbus.c    **** #define SlaveAddress 2 //Change this to whatever you want
  19:.\Modbus.c    **** #define CHECK_BIT(var,pos) !!((var) & (1 << (pos)))
  20:.\Modbus.c    **** 
  21:.\Modbus.c    **** unsigned int  holdingReg[50];
  22:.\Modbus.c    **** unsigned char coils[50];
  23:.\Modbus.c    **** unsigned char received[125];
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 3


  24:.\Modbus.c    **** unsigned char response[125]; //Enough to return all holding-r's
  25:.\Modbus.c    **** 
  26:.\Modbus.c    **** //Global variables (going to definitely use these)//
  27:.\Modbus.c    **** volatile uint8 newMessage = 1;
  28:.\Modbus.c    **** volatile uint8 middleOfMessage = 0;
  29:.\Modbus.c    **** volatile uint8 z = 0;
  30:.\Modbus.c    **** volatile uint8 messageLengthNotChanged = 0;
  31:.\Modbus.c    **** volatile uint8 messageLength = 0;
  32:.\Modbus.c    **** volatile uint8 oldMessageLength = 0;
  33:.\Modbus.c    **** volatile uint8 timerCount = 0;
  34:.\Modbus.c    **** volatile uint8 middleMessageCount = 0;
  35:.\Modbus.c    **** volatile uint8 newMessageCount = 0;
  36:.\Modbus.c    **** volatile uint8 oldPin = 0;
  37:.\Modbus.c    **** volatile uint8 modbusMessage = 0;
  38:.\Modbus.c    **** volatile uint8 turnLineAround = 0;
  39:.\Modbus.c    **** 
  40:.\Modbus.c    **** void decodeMessage(void)
  41:.\Modbus.c    **** {
  92              		.loc 1 41 0
  93              		.cfi_startproc
  94 0000 98B5     		push	{r3, r4, r7, lr}
  95              	.LCFI0:
  96              		.cfi_def_cfa_offset 16
  97              		.cfi_offset 3, -16
  98              		.cfi_offset 4, -12
  99              		.cfi_offset 7, -8
 100              		.cfi_offset 14, -4
 101 0002 00AF     		add	r7, sp, #0
 102              	.LCFI1:
 103              		.cfi_def_cfa_register 7
  42:.\Modbus.c    ****     if(middleOfMessage)
 104              		.loc 1 42 0
 105 0004 2B4B     		ldr	r3, .L4
 106 0006 1B78     		ldrb	r3, [r3]
 107 0008 DBB2     		uxtb	r3, r3
 108 000a 002B     		cmp	r3, #0
 109 000c 1FD0     		beq	.L2
  43:.\Modbus.c    ****     {
  44:.\Modbus.c    ****         received[z] = ModbusUART_UartGetChar();
 110              		.loc 1 44 0
 111 000e 2A4B     		ldr	r3, .L4+4
 112 0010 1B78     		ldrb	r3, [r3]
 113 0012 DBB2     		uxtb	r3, r3
 114 0014 1C1C     		mov	r4, r3
 115 0016 FFF7FEFF 		bl	ModbusUART_UartGetChar
 116 001a 031C     		mov	r3, r0
 117 001c DAB2     		uxtb	r2, r3
 118 001e 274B     		ldr	r3, .L4+8
 119 0020 1A55     		strb	r2, [r3, r4]
  45:.\Modbus.c    ****         z++;
 120              		.loc 1 45 0
 121 0022 254B     		ldr	r3, .L4+4
 122 0024 1B78     		ldrb	r3, [r3]
 123 0026 DBB2     		uxtb	r3, r3
 124 0028 0133     		add	r3, r3, #1
 125 002a DAB2     		uxtb	r2, r3
 126 002c 224B     		ldr	r3, .L4+4
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 4


 127 002e 1A70     		strb	r2, [r3]
  46:.\Modbus.c    ****         middleMessageCount ++;
 128              		.loc 1 46 0
 129 0030 234B     		ldr	r3, .L4+12
 130 0032 1B78     		ldrb	r3, [r3]
 131 0034 DBB2     		uxtb	r3, r3
 132 0036 0133     		add	r3, r3, #1
 133 0038 DAB2     		uxtb	r2, r3
 134 003a 214B     		ldr	r3, .L4+12
 135 003c 1A70     		strb	r2, [r3]
  47:.\Modbus.c    ****         messageLengthNotChanged = 0;
 136              		.loc 1 47 0
 137 003e 214B     		ldr	r3, .L4+16
 138 0040 0022     		mov	r2, #0
 139 0042 1A70     		strb	r2, [r3]
  48:.\Modbus.c    ****         messageLength = z;
 140              		.loc 1 48 0
 141 0044 1C4B     		ldr	r3, .L4+4
 142 0046 1B78     		ldrb	r3, [r3]
 143 0048 DAB2     		uxtb	r2, r3
 144 004a 1F4B     		ldr	r3, .L4+20
 145 004c 1A70     		strb	r2, [r3]
 146              	.L2:
  49:.\Modbus.c    ****     }
  50:.\Modbus.c    ****     
  51:.\Modbus.c    ****     if(newMessage)
 147              		.loc 1 51 0
 148 004e 1F4B     		ldr	r3, .L4+24
 149 0050 1B78     		ldrb	r3, [r3]
 150 0052 DBB2     		uxtb	r3, r3
 151 0054 002B     		cmp	r3, #0
 152 0056 2BD0     		beq	.L1
  52:.\Modbus.c    ****     {
  53:.\Modbus.c    ****         received[z] = ModbusUART_UartGetChar();
 153              		.loc 1 53 0
 154 0058 174B     		ldr	r3, .L4+4
 155 005a 1B78     		ldrb	r3, [r3]
 156 005c DBB2     		uxtb	r3, r3
 157 005e 1C1C     		mov	r4, r3
 158 0060 FFF7FEFF 		bl	ModbusUART_UartGetChar
 159 0064 031C     		mov	r3, r0
 160 0066 DAB2     		uxtb	r2, r3
 161 0068 144B     		ldr	r3, .L4+8
 162 006a 1A55     		strb	r2, [r3, r4]
  54:.\Modbus.c    ****         z++;
 163              		.loc 1 54 0
 164 006c 124B     		ldr	r3, .L4+4
 165 006e 1B78     		ldrb	r3, [r3]
 166 0070 DBB2     		uxtb	r3, r3
 167 0072 0133     		add	r3, r3, #1
 168 0074 DAB2     		uxtb	r2, r3
 169 0076 104B     		ldr	r3, .L4+4
 170 0078 1A70     		strb	r2, [r3]
  55:.\Modbus.c    ****         messageLength = z;
 171              		.loc 1 55 0
 172 007a 0F4B     		ldr	r3, .L4+4
 173 007c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 5


 174 007e DAB2     		uxtb	r2, r3
 175 0080 114B     		ldr	r3, .L4+20
 176 0082 1A70     		strb	r2, [r3]
  56:.\Modbus.c    ****         middleOfMessage = 1;
 177              		.loc 1 56 0
 178 0084 0B4B     		ldr	r3, .L4
 179 0086 0122     		mov	r2, #1
 180 0088 1A70     		strb	r2, [r3]
  57:.\Modbus.c    ****         newMessage = 0;
 181              		.loc 1 57 0
 182 008a 104B     		ldr	r3, .L4+24
 183 008c 0022     		mov	r2, #0
 184 008e 1A70     		strb	r2, [r3]
  58:.\Modbus.c    ****         MessageTimer_Start();
 185              		.loc 1 58 0
 186 0090 FFF7FEFF 		bl	MessageTimer_Start
  59:.\Modbus.c    ****         EndOfMessage_StartEx(endOfMessage_isr);
 187              		.loc 1 59 0
 188 0094 0E4B     		ldr	r3, .L4+28
 189 0096 181C     		mov	r0, r3
 190 0098 FFF7FEFF 		bl	EndOfMessage_StartEx
  60:.\Modbus.c    ****         newMessageCount ++;
 191              		.loc 1 60 0
 192 009c 0D4B     		ldr	r3, .L4+32
 193 009e 1B78     		ldrb	r3, [r3]
 194 00a0 DBB2     		uxtb	r3, r3
 195 00a2 0133     		add	r3, r3, #1
 196 00a4 DAB2     		uxtb	r2, r3
 197 00a6 0B4B     		ldr	r3, .L4+32
 198 00a8 1A70     		strb	r2, [r3]
  61:.\Modbus.c    ****         messageLengthNotChanged = 0;
 199              		.loc 1 61 0
 200 00aa 064B     		ldr	r3, .L4+16
 201 00ac 0022     		mov	r2, #0
 202 00ae 1A70     		strb	r2, [r3]
 203              	.L1:
  62:.\Modbus.c    **** 
  63:.\Modbus.c    ****     }
  64:.\Modbus.c    **** }
 204              		.loc 1 64 0
 205 00b0 BD46     		mov	sp, r7
 206              		@ sp needed for prologue
 207 00b2 98BD     		pop	{r3, r4, r7, pc}
 208              	.L5:
 209              		.align	2
 210              	.L4:
 211 00b4 00000000 		.word	middleOfMessage
 212 00b8 00000000 		.word	z
 213 00bc 00000000 		.word	received
 214 00c0 00000000 		.word	middleMessageCount
 215 00c4 00000000 		.word	messageLengthNotChanged
 216 00c8 00000000 		.word	messageLength
 217 00cc 00000000 		.word	newMessage
 218 00d0 00000000 		.word	endOfMessage_isr
 219 00d4 00000000 		.word	newMessageCount
 220              		.cfi_endproc
 221              	.LFE33:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 6


 222              		.size	decodeMessage, .-decodeMessage
 223              		.section	.text.checkIfEndOfMessage,"ax",%progbits
 224              		.align	2
 225              		.global	checkIfEndOfMessage
 226              		.code	16
 227              		.thumb_func
 228              		.type	checkIfEndOfMessage, %function
 229              	checkIfEndOfMessage:
 230              	.LFB34:
  65:.\Modbus.c    **** 
  66:.\Modbus.c    **** void checkIfEndOfMessage(void)
  67:.\Modbus.c    **** {
 231              		.loc 1 67 0
 232              		.cfi_startproc
 233 0000 80B5     		push	{r7, lr}
 234              	.LCFI2:
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 7, -8
 237              		.cfi_offset 14, -4
 238 0002 00AF     		add	r7, sp, #0
 239              	.LCFI3:
 240              		.cfi_def_cfa_register 7
  68:.\Modbus.c    ****     if(turnLineAround > 0)
 241              		.loc 1 68 0
 242 0004 334B     		ldr	r3, .L12
 243 0006 1B78     		ldrb	r3, [r3]
 244 0008 DBB2     		uxtb	r3, r3
 245 000a 002B     		cmp	r3, #0
 246 000c 1CD0     		beq	.L7
  69:.\Modbus.c    ****     {
  70:.\Modbus.c    ****         turnLineAround -= 1;
 247              		.loc 1 70 0
 248 000e 314B     		ldr	r3, .L12
 249 0010 1B78     		ldrb	r3, [r3]
 250 0012 DBB2     		uxtb	r3, r3
 251 0014 013B     		sub	r3, r3, #1
 252 0016 DAB2     		uxtb	r2, r3
 253 0018 2E4B     		ldr	r3, .L12
 254 001a 1A70     		strb	r2, [r3]
  71:.\Modbus.c    ****         if(turnLineAround == 0)
 255              		.loc 1 71 0
 256 001c 2D4B     		ldr	r3, .L12
 257 001e 1B78     		ldrb	r3, [r3]
 258 0020 DBB2     		uxtb	r3, r3
 259 0022 002B     		cmp	r3, #0
 260 0024 0AD1     		bne	.L8
  72:.\Modbus.c    ****         {
  73:.\Modbus.c    ****           MessageTimer_Stop();
 261              		.loc 1 73 0
 262 0026 FFF7FEFF 		bl	MessageTimer_Stop
  74:.\Modbus.c    ****           EndOfMessage_Stop();
 263              		.loc 1 74 0
 264 002a FFF7FEFF 		bl	EndOfMessage_Stop
  75:.\Modbus.c    ****           writeEnable_Write(0); //turn line around
 265              		.loc 1 75 0
 266 002e 0020     		mov	r0, #0
 267 0030 FFF7FEFF 		bl	writeEnable_Write
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 7


  76:.\Modbus.c    ****           turnLineAround = 0;
 268              		.loc 1 76 0
 269 0034 274B     		ldr	r3, .L12
 270 0036 0022     		mov	r2, #0
 271 0038 1A70     		strb	r2, [r3]
 272 003a 05E0     		b	.L7
 273              	.L8:
  77:.\Modbus.c    ****         }
  78:.\Modbus.c    ****         else
  79:.\Modbus.c    ****         {
  80:.\Modbus.c    ****             MessageTimer_Start();
 274              		.loc 1 80 0
 275 003c FFF7FEFF 		bl	MessageTimer_Start
  81:.\Modbus.c    ****             EndOfMessage_StartEx(endOfMessage_isr);   
 276              		.loc 1 81 0
 277 0040 254B     		ldr	r3, .L12+4
 278 0042 181C     		mov	r0, r3
 279 0044 FFF7FEFF 		bl	EndOfMessage_StartEx
 280              	.L7:
  82:.\Modbus.c    ****         }      
  83:.\Modbus.c    ****     }
  84:.\Modbus.c    ****     if(turnLineAround == 0)
 281              		.loc 1 84 0
 282 0048 224B     		ldr	r3, .L12
 283 004a 1B78     		ldrb	r3, [r3]
 284 004c DBB2     		uxtb	r3, r3
 285 004e 002B     		cmp	r3, #0
 286 0050 32D1     		bne	.L9
  85:.\Modbus.c    ****     if(middleOfMessage)
 287              		.loc 1 85 0
 288 0052 224B     		ldr	r3, .L12+8
 289 0054 1B78     		ldrb	r3, [r3]
 290 0056 DBB2     		uxtb	r3, r3
 291 0058 002B     		cmp	r3, #0
 292 005a 2DD0     		beq	.L9
  86:.\Modbus.c    ****     {
  87:.\Modbus.c    ****         if(oldMessageLength == messageLength)
 293              		.loc 1 87 0
 294 005c 204B     		ldr	r3, .L12+12
 295 005e 1B78     		ldrb	r3, [r3]
 296 0060 DAB2     		uxtb	r2, r3
 297 0062 204B     		ldr	r3, .L12+16
 298 0064 1B78     		ldrb	r3, [r3]
 299 0066 DBB2     		uxtb	r3, r3
 300 0068 9A42     		cmp	r2, r3
 301 006a 06D1     		bne	.L10
  88:.\Modbus.c    ****         {
  89:.\Modbus.c    ****             messageLengthNotChanged++;
 302              		.loc 1 89 0
 303 006c 1E4B     		ldr	r3, .L12+20
 304 006e 1B78     		ldrb	r3, [r3]
 305 0070 DBB2     		uxtb	r3, r3
 306 0072 0133     		add	r3, r3, #1
 307 0074 DAB2     		uxtb	r2, r3
 308 0076 1C4B     		ldr	r3, .L12+20
 309 0078 1A70     		strb	r2, [r3]
 310              	.L10:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 8


  90:.\Modbus.c    ****         }
  91:.\Modbus.c    ****         if(messageLengthNotChanged == 5)
 311              		.loc 1 91 0
 312 007a 1B4B     		ldr	r3, .L12+20
 313 007c 1B78     		ldrb	r3, [r3]
 314 007e DBB2     		uxtb	r3, r3
 315 0080 052B     		cmp	r3, #5
 316 0082 13D1     		bne	.L11
  92:.\Modbus.c    ****         {
  93:.\Modbus.c    ****             //We are at the end of the message
  94:.\Modbus.c    ****             newMessage = 1;
 317              		.loc 1 94 0
 318 0084 194B     		ldr	r3, .L12+24
 319 0086 0122     		mov	r2, #1
 320 0088 1A70     		strb	r2, [r3]
  95:.\Modbus.c    ****             modbusMessage = 1; //for main loop
 321              		.loc 1 95 0
 322 008a 194B     		ldr	r3, .L12+28
 323 008c 0122     		mov	r2, #1
 324 008e 1A70     		strb	r2, [r3]
  96:.\Modbus.c    ****             middleOfMessage = 0;
 325              		.loc 1 96 0
 326 0090 124B     		ldr	r3, .L12+8
 327 0092 0022     		mov	r2, #0
 328 0094 1A70     		strb	r2, [r3]
  97:.\Modbus.c    ****             messageLengthNotChanged = 0;
 329              		.loc 1 97 0
 330 0096 144B     		ldr	r3, .L12+20
 331 0098 0022     		mov	r2, #0
 332 009a 1A70     		strb	r2, [r3]
  98:.\Modbus.c    ****             z=0;
 333              		.loc 1 98 0
 334 009c 154B     		ldr	r3, .L12+32
 335 009e 0022     		mov	r2, #0
 336 00a0 1A70     		strb	r2, [r3]
  99:.\Modbus.c    ****             MessageTimer_Stop();
 337              		.loc 1 99 0
 338 00a2 FFF7FEFF 		bl	MessageTimer_Stop
 100:.\Modbus.c    ****             EndOfMessage_Stop();
 339              		.loc 1 100 0
 340 00a6 FFF7FEFF 		bl	EndOfMessage_Stop
 341 00aa 05E0     		b	.L9
 342              	.L11:
 101:.\Modbus.c    ****             /*Clear received array */
 102:.\Modbus.c    ****             //memset(&received[0], 0, sizeof(received));
 103:.\Modbus.c    ****         }
 104:.\Modbus.c    ****         else
 105:.\Modbus.c    ****         {
 106:.\Modbus.c    ****             MessageTimer_Start();
 343              		.loc 1 106 0
 344 00ac FFF7FEFF 		bl	MessageTimer_Start
 107:.\Modbus.c    ****             EndOfMessage_StartEx(endOfMessage_isr); 
 345              		.loc 1 107 0
 346 00b0 094B     		ldr	r3, .L12+4
 347 00b2 181C     		mov	r0, r3
 348 00b4 FFF7FEFF 		bl	EndOfMessage_StartEx
 349              	.L9:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 9


 108:.\Modbus.c    ****         }
 109:.\Modbus.c    ****     }
 110:.\Modbus.c    ****         oldMessageLength = messageLength; 
 350              		.loc 1 110 0
 351 00b8 0A4B     		ldr	r3, .L12+16
 352 00ba 1B78     		ldrb	r3, [r3]
 353 00bc DAB2     		uxtb	r2, r3
 354 00be 084B     		ldr	r3, .L12+12
 355 00c0 1A70     		strb	r2, [r3]
 111:.\Modbus.c    ****         timerCount ++; //debugging counter to find out how many times the loop occurred.
 356              		.loc 1 111 0
 357 00c2 0D4B     		ldr	r3, .L12+36
 358 00c4 1B78     		ldrb	r3, [r3]
 359 00c6 DBB2     		uxtb	r3, r3
 360 00c8 0133     		add	r3, r3, #1
 361 00ca DAB2     		uxtb	r2, r3
 362 00cc 0A4B     		ldr	r3, .L12+36
 363 00ce 1A70     		strb	r2, [r3]
 112:.\Modbus.c    **** }
 364              		.loc 1 112 0
 365 00d0 BD46     		mov	sp, r7
 366              		@ sp needed for prologue
 367 00d2 80BD     		pop	{r7, pc}
 368              	.L13:
 369              		.align	2
 370              	.L12:
 371 00d4 00000000 		.word	turnLineAround
 372 00d8 00000000 		.word	endOfMessage_isr
 373 00dc 00000000 		.word	middleOfMessage
 374 00e0 00000000 		.word	oldMessageLength
 375 00e4 00000000 		.word	messageLength
 376 00e8 00000000 		.word	messageLengthNotChanged
 377 00ec 00000000 		.word	newMessage
 378 00f0 00000000 		.word	modbusMessage
 379 00f4 00000000 		.word	z
 380 00f8 00000000 		.word	timerCount
 381              		.cfi_endproc
 382              	.LFE34:
 383              		.size	checkIfEndOfMessage, .-checkIfEndOfMessage
 384              		.section	.text.processMessage,"ax",%progbits
 385              		.align	2
 386              		.global	processMessage
 387              		.code	16
 388              		.thumb_func
 389              		.type	processMessage, %function
 390              	processMessage:
 391              	.LFB35:
 113:.\Modbus.c    **** 
 114:.\Modbus.c    **** void processMessage(void)
 115:.\Modbus.c    **** {
 392              		.loc 1 115 0
 393              		.cfi_startproc
 394 0000 80B5     		push	{r7, lr}
 395              	.LCFI4:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 7, -8
 398              		.cfi_offset 14, -4
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 10


 399 0002 00AF     		add	r7, sp, #0
 400              	.LCFI5:
 401              		.cfi_def_cfa_register 7
 116:.\Modbus.c    ****     if(received[0] == SlaveAddress){
 402              		.loc 1 116 0
 403 0004 224B     		ldr	r3, .L23
 404 0006 1B78     		ldrb	r3, [r3]
 405 0008 022B     		cmp	r3, #2
 406 000a 3BD1     		bne	.L15
 117:.\Modbus.c    ****         if(checkCRC() == 1){        
 407              		.loc 1 117 0
 408 000c FFF7FEFF 		bl	checkCRC
 409 0010 031C     		mov	r3, r0
 410 0012 012B     		cmp	r3, #1
 411 0014 36D1     		bne	.L15
 118:.\Modbus.c    **** 		if(received[1] == 0x01){
 412              		.loc 1 118 0
 413 0016 1E4B     		ldr	r3, .L23
 414 0018 5B78     		ldrb	r3, [r3, #1]
 415 001a 012B     		cmp	r3, #1
 416 001c 02D1     		bne	.L16
 119:.\Modbus.c    ****             readCoil();
 417              		.loc 1 119 0
 418 001e FFF7FEFF 		bl	readCoil
 419 0022 2FE0     		b	.L15
 420              	.L16:
 120:.\Modbus.c    ****         }
 121:.\Modbus.c    ****         else if(received[1] == 0x02){
 421              		.loc 1 121 0
 422 0024 1A4B     		ldr	r3, .L23
 423 0026 5B78     		ldrb	r3, [r3, #1]
 424 0028 022B     		cmp	r3, #2
 425 002a 02D1     		bne	.L17
 122:.\Modbus.c    ****             readInputCoil();
 426              		.loc 1 122 0
 427 002c FFF7FEFF 		bl	readInputCoil
 428 0030 28E0     		b	.L15
 429              	.L17:
 123:.\Modbus.c    ****         }
 124:.\Modbus.c    ****         else if(received[1] == 0x03){
 430              		.loc 1 124 0
 431 0032 174B     		ldr	r3, .L23
 432 0034 5B78     		ldrb	r3, [r3, #1]
 433 0036 032B     		cmp	r3, #3
 434 0038 02D1     		bne	.L18
 125:.\Modbus.c    ****             readReg();
 435              		.loc 1 125 0
 436 003a FFF7FEFF 		bl	readReg
 437 003e 21E0     		b	.L15
 438              	.L18:
 126:.\Modbus.c    ****         }
 127:.\Modbus.c    ****         else if(received[1] == 0x04){
 439              		.loc 1 127 0
 440 0040 134B     		ldr	r3, .L23
 441 0042 5B78     		ldrb	r3, [r3, #1]
 442 0044 042B     		cmp	r3, #4
 443 0046 02D1     		bne	.L19
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 11


 128:.\Modbus.c    ****             readInputReg();
 444              		.loc 1 128 0
 445 0048 FFF7FEFF 		bl	readInputReg
 446 004c 1AE0     		b	.L15
 447              	.L19:
 129:.\Modbus.c    ****         }
 130:.\Modbus.c    ****         else if(received[1] == 0x05){
 448              		.loc 1 130 0
 449 004e 104B     		ldr	r3, .L23
 450 0050 5B78     		ldrb	r3, [r3, #1]
 451 0052 052B     		cmp	r3, #5
 452 0054 02D1     		bne	.L20
 131:.\Modbus.c    ****             writeCoil();
 453              		.loc 1 131 0
 454 0056 FFF7FEFF 		bl	writeCoil
 455 005a 13E0     		b	.L15
 456              	.L20:
 132:.\Modbus.c    ****         }	  
 133:.\Modbus.c    ****         else if(received[1] == 0x06){
 457              		.loc 1 133 0
 458 005c 0C4B     		ldr	r3, .L23
 459 005e 5B78     		ldrb	r3, [r3, #1]
 460 0060 062B     		cmp	r3, #6
 461 0062 02D1     		bne	.L21
 134:.\Modbus.c    ****             writeReg();
 462              		.loc 1 134 0
 463 0064 FFF7FEFF 		bl	writeReg
 464 0068 0CE0     		b	.L15
 465              	.L21:
 135:.\Modbus.c    ****         }
 136:.\Modbus.c    ****         else if(received[1] == 0x10){
 466              		.loc 1 136 0
 467 006a 094B     		ldr	r3, .L23
 468 006c 5B78     		ldrb	r3, [r3, #1]
 469 006e 102B     		cmp	r3, #16
 470 0070 02D1     		bne	.L22
 137:.\Modbus.c    ****             writeMultipleRegs();
 471              		.loc 1 137 0
 472 0072 FFF7FEFF 		bl	writeMultipleRegs
 473 0076 05E0     		b	.L15
 474              	.L22:
 138:.\Modbus.c    ****         }
 139:.\Modbus.c    ****         else if(received[1] == 0x0F){
 475              		.loc 1 139 0
 476 0078 054B     		ldr	r3, .L23
 477 007a 5B78     		ldrb	r3, [r3, #1]
 478 007c 0F2B     		cmp	r3, #15
 479 007e 01D1     		bne	.L15
 140:.\Modbus.c    ****             writeMultipleCoils();
 480              		.loc 1 140 0
 481 0080 FFF7FEFF 		bl	writeMultipleCoils
 482              	.L15:
 141:.\Modbus.c    ****         }
 142:.\Modbus.c    ****         else{
 143:.\Modbus.c    ****          //   response[0] = 0; //error this does nothing though..
 144:.\Modbus.c    ****         }
 145:.\Modbus.c    ****     }
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 12


 146:.\Modbus.c    ****   }
 147:.\Modbus.c    ****   modbusMessage = 0;
 483              		.loc 1 147 0
 484 0084 034B     		ldr	r3, .L23+4
 485 0086 0022     		mov	r2, #0
 486 0088 1A70     		strb	r2, [r3]
 148:.\Modbus.c    **** }
 487              		.loc 1 148 0
 488 008a BD46     		mov	sp, r7
 489              		@ sp needed for prologue
 490 008c 80BD     		pop	{r7, pc}
 491              	.L24:
 492 008e C046     		.align	2
 493              	.L23:
 494 0090 00000000 		.word	received
 495 0094 00000000 		.word	modbusMessage
 496              		.cfi_endproc
 497              	.LFE35:
 498              		.size	processMessage, .-processMessage
 499              		.section	.text.readCoil,"ax",%progbits
 500              		.align	2
 501              		.global	readCoil
 502              		.code	16
 503              		.thumb_func
 504              		.type	readCoil, %function
 505              	readCoil:
 506              	.LFB36:
 149:.\Modbus.c    **** 
 150:.\Modbus.c    **** void readCoil(void)
 151:.\Modbus.c    **** {
 507              		.loc 1 151 0
 508              		.cfi_startproc
 509 0000 90B5     		push	{r4, r7, lr}
 510              	.LCFI6:
 511              		.cfi_def_cfa_offset 12
 512              		.cfi_offset 4, -12
 513              		.cfi_offset 7, -8
 514              		.cfi_offset 14, -4
 515 0002 87B0     		sub	sp, sp, #28
 516              	.LCFI7:
 517              		.cfi_def_cfa_offset 40
 518 0004 00AF     		add	r7, sp, #0
 519              	.LCFI8:
 520              		.cfi_def_cfa_register 7
 152:.\Modbus.c    **** /******************************************************************************/
 153:.\Modbus.c    **** /* Reads a coil and then responds                                             */
 154:.\Modbus.c    **** /******************************************************************************/
 155:.\Modbus.c    ****   unsigned int rc_Address = 0;
 521              		.loc 1 155 0
 522 0006 0023     		mov	r3, #0
 523 0008 FB60     		str	r3, [r7, #12]
 156:.\Modbus.c    ****   unsigned int rc_numCoils = 0;
 524              		.loc 1 156 0
 525 000a 0023     		mov	r3, #0
 526 000c BB60     		str	r3, [r7, #8]
 157:.\Modbus.c    ****   unsigned int crc = 0;
 527              		.loc 1 157 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 13


 528 000e 0023     		mov	r3, #0
 529 0010 7B60     		str	r3, [r7, #4]
 158:.\Modbus.c    **** 
 159:.\Modbus.c    ****   unsigned char howManyBytes = 0;
 530              		.loc 1 159 0
 531 0012 3B1C     		mov	r3, r7
 532 0014 1733     		add	r3, r3, #23
 533 0016 0022     		mov	r2, #0
 534 0018 1A70     		strb	r2, [r3]
 160:.\Modbus.c    ****   unsigned char remainder = 0;
 535              		.loc 1 160 0
 536 001a FB1C     		add	r3, r7, #3
 537 001c 0022     		mov	r2, #0
 538 001e 1A70     		strb	r2, [r3]
 161:.\Modbus.c    ****   unsigned char lsb = 0;
 539              		.loc 1 161 0
 540 0020 3B1C     		mov	r3, r7
 541 0022 1633     		add	r3, r3, #22
 542 0024 0022     		mov	r2, #0
 543 0026 1A70     		strb	r2, [r3]
 162:.\Modbus.c    ****   unsigned char i,j,k,l = 0;
 544              		.loc 1 162 0
 545 0028 3B1C     		mov	r3, r7
 546 002a 1233     		add	r3, r3, #18
 547 002c 0022     		mov	r2, #0
 548 002e 1A70     		strb	r2, [r3]
 163:.\Modbus.c    **** 
 164:.\Modbus.c    ****   //Combine address bytes
 165:.\Modbus.c    ****   rc_Address = received[2];
 549              		.loc 1 165 0
 550 0030 964B     		ldr	r3, .L41
 551 0032 9B78     		ldrb	r3, [r3, #2]
 552 0034 FB60     		str	r3, [r7, #12]
 166:.\Modbus.c    ****   rc_Address <<=8;
 553              		.loc 1 166 0
 554 0036 FB68     		ldr	r3, [r7, #12]
 555 0038 1B02     		lsl	r3, r3, #8
 556 003a FB60     		str	r3, [r7, #12]
 167:.\Modbus.c    ****   rc_Address |= received[3];
 557              		.loc 1 167 0
 558 003c 934B     		ldr	r3, .L41
 559 003e DB78     		ldrb	r3, [r3, #3]
 560 0040 FA68     		ldr	r2, [r7, #12]
 561 0042 1343     		orr	r3, r2
 562 0044 FB60     		str	r3, [r7, #12]
 168:.\Modbus.c    **** 
 169:.\Modbus.c    ****   //Combine number of coils bytes
 170:.\Modbus.c    ****   rc_numCoils = received[4];
 563              		.loc 1 170 0
 564 0046 914B     		ldr	r3, .L41
 565 0048 1B79     		ldrb	r3, [r3, #4]
 566 004a BB60     		str	r3, [r7, #8]
 171:.\Modbus.c    ****   rc_numCoils <<= 8;
 567              		.loc 1 171 0
 568 004c BB68     		ldr	r3, [r7, #8]
 569 004e 1B02     		lsl	r3, r3, #8
 570 0050 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 14


 172:.\Modbus.c    ****   rc_numCoils |= received[5];
 571              		.loc 1 172 0
 572 0052 8E4B     		ldr	r3, .L41
 573 0054 5B79     		ldrb	r3, [r3, #5]
 574 0056 BA68     		ldr	r2, [r7, #8]
 575 0058 1343     		orr	r3, r2
 576 005a BB60     		str	r3, [r7, #8]
 173:.\Modbus.c    **** 
 174:.\Modbus.c    ****   response[0] = SlaveAddress;
 577              		.loc 1 174 0
 578 005c 8C4B     		ldr	r3, .L41+4
 579 005e 0222     		mov	r2, #2
 580 0060 1A70     		strb	r2, [r3]
 175:.\Modbus.c    ****   response[1] = 0x01;
 581              		.loc 1 175 0
 582 0062 8B4B     		ldr	r3, .L41+4
 583 0064 0122     		mov	r2, #1
 584 0066 5A70     		strb	r2, [r3, #1]
 176:.\Modbus.c    **** 
 177:.\Modbus.c    ****   howManyBytes = rc_numCoils/8;
 585              		.loc 1 177 0
 586 0068 BB68     		ldr	r3, [r7, #8]
 587 006a DA08     		lsr	r2, r3, #3
 588 006c 3B1C     		mov	r3, r7
 589 006e 1733     		add	r3, r3, #23
 590 0070 1A70     		strb	r2, [r3]
 178:.\Modbus.c    ****   remainder = rc_numCoils % 8;
 591              		.loc 1 178 0
 592 0072 BB68     		ldr	r3, [r7, #8]
 593 0074 D9B2     		uxtb	r1, r3
 594 0076 FB1C     		add	r3, r7, #3
 595 0078 0722     		mov	r2, #7
 596 007a 0A40     		and	r2, r1
 597 007c 1A70     		strb	r2, [r3]
 179:.\Modbus.c    **** 
 180:.\Modbus.c    ****   if(remainder){
 598              		.loc 1 180 0
 599 007e FB1C     		add	r3, r7, #3
 600 0080 1B78     		ldrb	r3, [r3]
 601 0082 002B     		cmp	r3, #0
 602 0084 06D0     		beq	.L26
 181:.\Modbus.c    ****     howManyBytes += 1;
 603              		.loc 1 181 0
 604 0086 3B1C     		mov	r3, r7
 605 0088 1733     		add	r3, r3, #23
 606 008a 3A1C     		mov	r2, r7
 607 008c 1732     		add	r2, r2, #23
 608 008e 1278     		ldrb	r2, [r2]
 609 0090 0132     		add	r2, r2, #1
 610 0092 1A70     		strb	r2, [r3]
 611              	.L26:
 182:.\Modbus.c    ****   }
 183:.\Modbus.c    ****   response[2] = howManyBytes;
 612              		.loc 1 183 0
 613 0094 7E4B     		ldr	r3, .L41+4
 614 0096 3A1C     		mov	r2, r7
 615 0098 1732     		add	r2, r2, #23
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 15


 616 009a 1278     		ldrb	r2, [r2]
 617 009c 9A70     		strb	r2, [r3, #2]
 184:.\Modbus.c    **** 
 185:.\Modbus.c    ****   l = rc_Address;
 618              		.loc 1 185 0
 619 009e 3B1C     		mov	r3, r7
 620 00a0 1233     		add	r3, r3, #18
 621 00a2 FA68     		ldr	r2, [r7, #12]
 622 00a4 1A70     		strb	r2, [r3]
 186:.\Modbus.c    ****   k = 3; //start at response 3
 623              		.loc 1 186 0
 624 00a6 3B1C     		mov	r3, r7
 625 00a8 1333     		add	r3, r3, #19
 626 00aa 0322     		mov	r2, #3
 627 00ac 1A70     		strb	r2, [r3]
 187:.\Modbus.c    **** 
 188:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 628              		.loc 1 188 0
 629 00ae 3B1C     		mov	r3, r7
 630 00b0 1533     		add	r3, r3, #21
 631 00b2 3A1C     		mov	r2, r7
 632 00b4 1732     		add	r2, r2, #23
 633 00b6 1278     		ldrb	r2, [r2]
 634 00b8 1A70     		strb	r2, [r3]
 635 00ba 9CE0     		b	.L27
 636              	.L38:
 189:.\Modbus.c    ****     if(i>1){
 637              		.loc 1 189 0
 638 00bc 3B1C     		mov	r3, r7
 639 00be 1533     		add	r3, r3, #21
 640 00c0 1B78     		ldrb	r3, [r3]
 641 00c2 012B     		cmp	r3, #1
 642 00c4 47D9     		bls	.L28
 190:.\Modbus.c    ****       for(j=0;j!=8;j++){
 643              		.loc 1 190 0
 644 00c6 3B1C     		mov	r3, r7
 645 00c8 1433     		add	r3, r3, #20
 646 00ca 0022     		mov	r2, #0
 647 00cc 1A70     		strb	r2, [r3]
 648 00ce 35E0     		b	.L29
 649              	.L32:
 191:.\Modbus.c    **** 	if(coils[l]){
 650              		.loc 1 191 0
 651 00d0 3B1C     		mov	r3, r7
 652 00d2 1233     		add	r3, r3, #18
 653 00d4 1B78     		ldrb	r3, [r3]
 654 00d6 6F4A     		ldr	r2, .L41+8
 655 00d8 D35C     		ldrb	r3, [r2, r3]
 656 00da 002B     		cmp	r3, #0
 657 00dc 04D0     		beq	.L30
 192:.\Modbus.c    ****           lsb = 1;
 658              		.loc 1 192 0
 659 00de 3B1C     		mov	r3, r7
 660 00e0 1633     		add	r3, r3, #22
 661 00e2 0122     		mov	r2, #1
 662 00e4 1A70     		strb	r2, [r3]
 663 00e6 03E0     		b	.L31
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 16


 664              	.L30:
 193:.\Modbus.c    **** 	}
 194:.\Modbus.c    **** 	else{
 195:.\Modbus.c    ****           lsb = 0;
 665              		.loc 1 195 0
 666 00e8 3B1C     		mov	r3, r7
 667 00ea 1633     		add	r3, r3, #22
 668 00ec 0022     		mov	r2, #0
 669 00ee 1A70     		strb	r2, [r3]
 670              	.L31:
 196:.\Modbus.c    **** 	}
 197:.\Modbus.c    **** 	response[k] ^= (lsb << j);
 671              		.loc 1 197 0
 672 00f0 3B1C     		mov	r3, r7
 673 00f2 1333     		add	r3, r3, #19
 674 00f4 1B78     		ldrb	r3, [r3]
 675 00f6 3A1C     		mov	r2, r7
 676 00f8 1332     		add	r2, r2, #19
 677 00fa 1278     		ldrb	r2, [r2]
 678 00fc 6449     		ldr	r1, .L41+4
 679 00fe 8A5C     		ldrb	r2, [r1, r2]
 680 0100 D1B2     		uxtb	r1, r2
 681 0102 3A1C     		mov	r2, r7
 682 0104 1632     		add	r2, r2, #22
 683 0106 1078     		ldrb	r0, [r2]
 684 0108 3A1C     		mov	r2, r7
 685 010a 1432     		add	r2, r2, #20
 686 010c 1278     		ldrb	r2, [r2]
 687 010e 041C     		mov	r4, r0
 688 0110 9440     		lsl	r4, r4, r2
 689 0112 221C     		mov	r2, r4
 690 0114 D2B2     		uxtb	r2, r2
 691 0116 4A40     		eor	r2, r1
 692 0118 D2B2     		uxtb	r2, r2
 693 011a D1B2     		uxtb	r1, r2
 694 011c 5C4A     		ldr	r2, .L41+4
 695 011e D154     		strb	r1, [r2, r3]
 198:.\Modbus.c    **** 	l++;
 696              		.loc 1 198 0
 697 0120 3B1C     		mov	r3, r7
 698 0122 1233     		add	r3, r3, #18
 699 0124 3A1C     		mov	r2, r7
 700 0126 1232     		add	r2, r2, #18
 701 0128 1278     		ldrb	r2, [r2]
 702 012a 0132     		add	r2, r2, #1
 703 012c 1A70     		strb	r2, [r3]
 190:.\Modbus.c    ****       for(j=0;j!=8;j++){
 704              		.loc 1 190 0
 705 012e 3B1C     		mov	r3, r7
 706 0130 1433     		add	r3, r3, #20
 707 0132 3A1C     		mov	r2, r7
 708 0134 1432     		add	r2, r2, #20
 709 0136 1278     		ldrb	r2, [r2]
 710 0138 0132     		add	r2, r2, #1
 711 013a 1A70     		strb	r2, [r3]
 712              	.L29:
 190:.\Modbus.c    ****       for(j=0;j!=8;j++){
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 17


 713              		.loc 1 190 0 is_stmt 0 discriminator 1
 714 013c 3B1C     		mov	r3, r7
 715 013e 1433     		add	r3, r3, #20
 716 0140 1B78     		ldrb	r3, [r3]
 717 0142 082B     		cmp	r3, #8
 718 0144 C4D1     		bne	.L32
 199:.\Modbus.c    ****       }
 200:.\Modbus.c    ****       k++;
 719              		.loc 1 200 0 is_stmt 1
 720 0146 3B1C     		mov	r3, r7
 721 0148 1333     		add	r3, r3, #19
 722 014a 3A1C     		mov	r2, r7
 723 014c 1332     		add	r2, r2, #19
 724 014e 1278     		ldrb	r2, [r2]
 725 0150 0132     		add	r2, r2, #1
 726 0152 1A70     		strb	r2, [r3]
 727 0154 48E0     		b	.L33
 728              	.L28:
 201:.\Modbus.c    ****     }
 202:.\Modbus.c    ****     else{
 203:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 729              		.loc 1 203 0
 730 0156 3B1C     		mov	r3, r7
 731 0158 1433     		add	r3, r3, #20
 732 015a 0022     		mov	r2, #0
 733 015c 1A70     		strb	r2, [r3]
 734 015e 35E0     		b	.L34
 735              	.L37:
 204:.\Modbus.c    ****       if(coils[l]){
 736              		.loc 1 204 0
 737 0160 3B1C     		mov	r3, r7
 738 0162 1233     		add	r3, r3, #18
 739 0164 1B78     		ldrb	r3, [r3]
 740 0166 4B4A     		ldr	r2, .L41+8
 741 0168 D35C     		ldrb	r3, [r2, r3]
 742 016a 002B     		cmp	r3, #0
 743 016c 04D0     		beq	.L35
 205:.\Modbus.c    ****         lsb = 1;
 744              		.loc 1 205 0
 745 016e 3B1C     		mov	r3, r7
 746 0170 1633     		add	r3, r3, #22
 747 0172 0122     		mov	r2, #1
 748 0174 1A70     		strb	r2, [r3]
 749 0176 03E0     		b	.L36
 750              	.L35:
 206:.\Modbus.c    ****       }
 207:.\Modbus.c    ****       else{
 208:.\Modbus.c    ****         lsb = 0;
 751              		.loc 1 208 0
 752 0178 3B1C     		mov	r3, r7
 753 017a 1633     		add	r3, r3, #22
 754 017c 0022     		mov	r2, #0
 755 017e 1A70     		strb	r2, [r3]
 756              	.L36:
 209:.\Modbus.c    ****       }
 210:.\Modbus.c    ****       response[k] ^= (lsb << j);
 757              		.loc 1 210 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 18


 758 0180 3B1C     		mov	r3, r7
 759 0182 1333     		add	r3, r3, #19
 760 0184 1B78     		ldrb	r3, [r3]
 761 0186 3A1C     		mov	r2, r7
 762 0188 1332     		add	r2, r2, #19
 763 018a 1278     		ldrb	r2, [r2]
 764 018c 4049     		ldr	r1, .L41+4
 765 018e 8A5C     		ldrb	r2, [r1, r2]
 766 0190 D1B2     		uxtb	r1, r2
 767 0192 3A1C     		mov	r2, r7
 768 0194 1632     		add	r2, r2, #22
 769 0196 1078     		ldrb	r0, [r2]
 770 0198 3A1C     		mov	r2, r7
 771 019a 1432     		add	r2, r2, #20
 772 019c 1278     		ldrb	r2, [r2]
 773 019e 041C     		mov	r4, r0
 774 01a0 9440     		lsl	r4, r4, r2
 775 01a2 221C     		mov	r2, r4
 776 01a4 D2B2     		uxtb	r2, r2
 777 01a6 4A40     		eor	r2, r1
 778 01a8 D2B2     		uxtb	r2, r2
 779 01aa D1B2     		uxtb	r1, r2
 780 01ac 384A     		ldr	r2, .L41+4
 781 01ae D154     		strb	r1, [r2, r3]
 211:.\Modbus.c    ****       l++;
 782              		.loc 1 211 0
 783 01b0 3B1C     		mov	r3, r7
 784 01b2 1233     		add	r3, r3, #18
 785 01b4 3A1C     		mov	r2, r7
 786 01b6 1232     		add	r2, r2, #18
 787 01b8 1278     		ldrb	r2, [r2]
 788 01ba 0132     		add	r2, r2, #1
 789 01bc 1A70     		strb	r2, [r3]
 203:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 790              		.loc 1 203 0
 791 01be 3B1C     		mov	r3, r7
 792 01c0 1433     		add	r3, r3, #20
 793 01c2 3A1C     		mov	r2, r7
 794 01c4 1432     		add	r2, r2, #20
 795 01c6 1278     		ldrb	r2, [r2]
 796 01c8 0132     		add	r2, r2, #1
 797 01ca 1A70     		strb	r2, [r3]
 798              	.L34:
 203:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 799              		.loc 1 203 0 is_stmt 0 discriminator 1
 800 01cc 3A1C     		mov	r2, r7
 801 01ce 1432     		add	r2, r2, #20
 802 01d0 FB1C     		add	r3, r7, #3
 803 01d2 1278     		ldrb	r2, [r2]
 804 01d4 1B78     		ldrb	r3, [r3]
 805 01d6 9A42     		cmp	r2, r3
 806 01d8 C2D1     		bne	.L37
 212:.\Modbus.c    ****       }
 213:.\Modbus.c    ****       k++;
 807              		.loc 1 213 0 is_stmt 1
 808 01da 3B1C     		mov	r3, r7
 809 01dc 1333     		add	r3, r3, #19
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 19


 810 01de 3A1C     		mov	r2, r7
 811 01e0 1332     		add	r2, r2, #19
 812 01e2 1278     		ldrb	r2, [r2]
 813 01e4 0132     		add	r2, r2, #1
 814 01e6 1A70     		strb	r2, [r3]
 815              	.L33:
 188:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 816              		.loc 1 188 0
 817 01e8 3B1C     		mov	r3, r7
 818 01ea 1533     		add	r3, r3, #21
 819 01ec 3A1C     		mov	r2, r7
 820 01ee 1532     		add	r2, r2, #21
 821 01f0 1278     		ldrb	r2, [r2]
 822 01f2 013A     		sub	r2, r2, #1
 823 01f4 1A70     		strb	r2, [r3]
 824              	.L27:
 188:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 825              		.loc 1 188 0 is_stmt 0 discriminator 1
 826 01f6 3B1C     		mov	r3, r7
 827 01f8 1533     		add	r3, r3, #21
 828 01fa 1B78     		ldrb	r3, [r3]
 829 01fc 002B     		cmp	r3, #0
 830 01fe 00D0     		beq	.LCB668
 831 0200 5CE7     		b	.L38	@long jump
 832              	.LCB668:
 214:.\Modbus.c    ****     }
 215:.\Modbus.c    ****   }
 216:.\Modbus.c    ****   crc = generateCRC(k+2);
 833              		.loc 1 216 0 is_stmt 1
 834 0202 3B1C     		mov	r3, r7
 835 0204 1333     		add	r3, r3, #19
 836 0206 1B78     		ldrb	r3, [r3]
 837 0208 0233     		add	r3, r3, #2
 838 020a DBB2     		uxtb	r3, r3
 839 020c 181C     		mov	r0, r3
 840 020e FFF7FEFF 		bl	generateCRC
 841 0212 031C     		mov	r3, r0
 842 0214 7B60     		str	r3, [r7, #4]
 217:.\Modbus.c    **** 
 218:.\Modbus.c    ****   response[k] = crc >> 8;
 843              		.loc 1 218 0
 844 0216 3B1C     		mov	r3, r7
 845 0218 1333     		add	r3, r3, #19
 846 021a 1B78     		ldrb	r3, [r3]
 847 021c 7A68     		ldr	r2, [r7, #4]
 848 021e 120A     		lsr	r2, r2, #8
 849 0220 D1B2     		uxtb	r1, r2
 850 0222 1B4A     		ldr	r2, .L41+4
 851 0224 D154     		strb	r1, [r2, r3]
 219:.\Modbus.c    ****   response[k+1] = crc;
 852              		.loc 1 219 0
 853 0226 3B1C     		mov	r3, r7
 854 0228 1333     		add	r3, r3, #19
 855 022a 1B78     		ldrb	r3, [r3]
 856 022c 0133     		add	r3, r3, #1
 857 022e 7A68     		ldr	r2, [r7, #4]
 858 0230 D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 20


 859 0232 174A     		ldr	r2, .L41+4
 860 0234 D154     		strb	r1, [r2, r3]
 220:.\Modbus.c    **** 
 221:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 861              		.loc 1 221 0
 862 0236 0120     		mov	r0, #1
 863 0238 FFF7FEFF 		bl	writeEnable_Write
 222:.\Modbus.c    **** 
 223:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 864              		.loc 1 223 0
 865 023c 3B1C     		mov	r3, r7
 866 023e 1533     		add	r3, r3, #21
 867 0240 0022     		mov	r2, #0
 868 0242 1A70     		strb	r2, [r3]
 869 0244 0EE0     		b	.L39
 870              	.L40:
 224:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 871              		.loc 1 224 0 discriminator 2
 872 0246 3B1C     		mov	r3, r7
 873 0248 1533     		add	r3, r3, #21
 874 024a 1B78     		ldrb	r3, [r3]
 875 024c 104A     		ldr	r2, .L41+4
 876 024e D35C     		ldrb	r3, [r2, r3]
 877 0250 181C     		mov	r0, r3
 878 0252 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 223:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 879              		.loc 1 223 0 discriminator 2
 880 0256 3B1C     		mov	r3, r7
 881 0258 1533     		add	r3, r3, #21
 882 025a 3A1C     		mov	r2, r7
 883 025c 1532     		add	r2, r2, #21
 884 025e 1278     		ldrb	r2, [r2]
 885 0260 0132     		add	r2, r2, #1
 886 0262 1A70     		strb	r2, [r3]
 887              	.L39:
 223:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 888              		.loc 1 223 0 is_stmt 0 discriminator 1
 889 0264 3B1C     		mov	r3, r7
 890 0266 1533     		add	r3, r3, #21
 891 0268 1A78     		ldrb	r2, [r3]
 892 026a 3B1C     		mov	r3, r7
 893 026c 1333     		add	r3, r3, #19
 894 026e 1B78     		ldrb	r3, [r3]
 895 0270 0333     		add	r3, r3, #3
 896 0272 9A42     		cmp	r2, r3
 897 0274 E7D1     		bne	.L40
 225:.\Modbus.c    ****   }
 226:.\Modbus.c    ****   responseFinished(k+3);
 898              		.loc 1 226 0 is_stmt 1
 899 0276 3B1C     		mov	r3, r7
 900 0278 1333     		add	r3, r3, #19
 901 027a 1B78     		ldrb	r3, [r3]
 902 027c 0333     		add	r3, r3, #3
 903 027e 181C     		mov	r0, r3
 904 0280 FFF7FEFF 		bl	responseFinished
 227:.\Modbus.c    **** }
 905              		.loc 1 227 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 21


 906 0284 BD46     		mov	sp, r7
 907 0286 07B0     		add	sp, sp, #28
 908              		@ sp needed for prologue
 909 0288 90BD     		pop	{r4, r7, pc}
 910              	.L42:
 911 028a C046     		.align	2
 912              	.L41:
 913 028c 00000000 		.word	received
 914 0290 00000000 		.word	response
 915 0294 00000000 		.word	coils
 916              		.cfi_endproc
 917              	.LFE36:
 918              		.size	readCoil, .-readCoil
 919              		.section	.text.readInputCoil,"ax",%progbits
 920              		.align	2
 921              		.global	readInputCoil
 922              		.code	16
 923              		.thumb_func
 924              		.type	readInputCoil, %function
 925              	readInputCoil:
 926              	.LFB37:
 228:.\Modbus.c    **** 
 229:.\Modbus.c    **** void readInputCoil(void)
 230:.\Modbus.c    **** {
 927              		.loc 1 230 0
 928              		.cfi_startproc
 929 0000 90B5     		push	{r4, r7, lr}
 930              	.LCFI9:
 931              		.cfi_def_cfa_offset 12
 932              		.cfi_offset 4, -12
 933              		.cfi_offset 7, -8
 934              		.cfi_offset 14, -4
 935 0002 87B0     		sub	sp, sp, #28
 936              	.LCFI10:
 937              		.cfi_def_cfa_offset 40
 938 0004 00AF     		add	r7, sp, #0
 939              	.LCFI11:
 940              		.cfi_def_cfa_register 7
 231:.\Modbus.c    **** /******************************************************************************/
 232:.\Modbus.c    **** /* Reads a coil and then responds                                             */
 233:.\Modbus.c    **** /******************************************************************************/
 234:.\Modbus.c    ****   unsigned int rc_Address = 0;
 941              		.loc 1 234 0
 942 0006 0023     		mov	r3, #0
 943 0008 FB60     		str	r3, [r7, #12]
 235:.\Modbus.c    ****   unsigned int rc_numCoils = 0;
 944              		.loc 1 235 0
 945 000a 0023     		mov	r3, #0
 946 000c BB60     		str	r3, [r7, #8]
 236:.\Modbus.c    ****   unsigned int crc = 0;
 947              		.loc 1 236 0
 948 000e 0023     		mov	r3, #0
 949 0010 7B60     		str	r3, [r7, #4]
 237:.\Modbus.c    **** 
 238:.\Modbus.c    ****   unsigned char howManyBytes = 0;
 950              		.loc 1 238 0
 951 0012 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 22


 952 0014 1733     		add	r3, r3, #23
 953 0016 0022     		mov	r2, #0
 954 0018 1A70     		strb	r2, [r3]
 239:.\Modbus.c    ****   unsigned char remainder = 0;
 955              		.loc 1 239 0
 956 001a FB1C     		add	r3, r7, #3
 957 001c 0022     		mov	r2, #0
 958 001e 1A70     		strb	r2, [r3]
 240:.\Modbus.c    ****   unsigned char lsb = 0;
 959              		.loc 1 240 0
 960 0020 3B1C     		mov	r3, r7
 961 0022 1633     		add	r3, r3, #22
 962 0024 0022     		mov	r2, #0
 963 0026 1A70     		strb	r2, [r3]
 241:.\Modbus.c    ****   unsigned char i,j,k,l = 0;
 964              		.loc 1 241 0
 965 0028 3B1C     		mov	r3, r7
 966 002a 1233     		add	r3, r3, #18
 967 002c 0022     		mov	r2, #0
 968 002e 1A70     		strb	r2, [r3]
 242:.\Modbus.c    **** 
 243:.\Modbus.c    ****   //Combine address bytes
 244:.\Modbus.c    ****   rc_Address = received[2];
 969              		.loc 1 244 0
 970 0030 964B     		ldr	r3, .L59
 971 0032 9B78     		ldrb	r3, [r3, #2]
 972 0034 FB60     		str	r3, [r7, #12]
 245:.\Modbus.c    ****   rc_Address <<=8;
 973              		.loc 1 245 0
 974 0036 FB68     		ldr	r3, [r7, #12]
 975 0038 1B02     		lsl	r3, r3, #8
 976 003a FB60     		str	r3, [r7, #12]
 246:.\Modbus.c    ****   rc_Address |= received[3];
 977              		.loc 1 246 0
 978 003c 934B     		ldr	r3, .L59
 979 003e DB78     		ldrb	r3, [r3, #3]
 980 0040 FA68     		ldr	r2, [r7, #12]
 981 0042 1343     		orr	r3, r2
 982 0044 FB60     		str	r3, [r7, #12]
 247:.\Modbus.c    **** 
 248:.\Modbus.c    ****   //Combine number of coils bytes
 249:.\Modbus.c    ****   rc_numCoils = received[4];
 983              		.loc 1 249 0
 984 0046 914B     		ldr	r3, .L59
 985 0048 1B79     		ldrb	r3, [r3, #4]
 986 004a BB60     		str	r3, [r7, #8]
 250:.\Modbus.c    ****   rc_numCoils <<= 8;
 987              		.loc 1 250 0
 988 004c BB68     		ldr	r3, [r7, #8]
 989 004e 1B02     		lsl	r3, r3, #8
 990 0050 BB60     		str	r3, [r7, #8]
 251:.\Modbus.c    ****   rc_numCoils |= received[5];
 991              		.loc 1 251 0
 992 0052 8E4B     		ldr	r3, .L59
 993 0054 5B79     		ldrb	r3, [r3, #5]
 994 0056 BA68     		ldr	r2, [r7, #8]
 995 0058 1343     		orr	r3, r2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 23


 996 005a BB60     		str	r3, [r7, #8]
 252:.\Modbus.c    **** 
 253:.\Modbus.c    ****   response[0] = SlaveAddress;
 997              		.loc 1 253 0
 998 005c 8C4B     		ldr	r3, .L59+4
 999 005e 0222     		mov	r2, #2
 1000 0060 1A70     		strb	r2, [r3]
 254:.\Modbus.c    ****   response[1] = 0x02;
 1001              		.loc 1 254 0
 1002 0062 8B4B     		ldr	r3, .L59+4
 1003 0064 0222     		mov	r2, #2
 1004 0066 5A70     		strb	r2, [r3, #1]
 255:.\Modbus.c    **** 
 256:.\Modbus.c    ****   howManyBytes = rc_numCoils/8;
 1005              		.loc 1 256 0
 1006 0068 BB68     		ldr	r3, [r7, #8]
 1007 006a DA08     		lsr	r2, r3, #3
 1008 006c 3B1C     		mov	r3, r7
 1009 006e 1733     		add	r3, r3, #23
 1010 0070 1A70     		strb	r2, [r3]
 257:.\Modbus.c    ****   remainder = rc_numCoils % 8;
 1011              		.loc 1 257 0
 1012 0072 BB68     		ldr	r3, [r7, #8]
 1013 0074 D9B2     		uxtb	r1, r3
 1014 0076 FB1C     		add	r3, r7, #3
 1015 0078 0722     		mov	r2, #7
 1016 007a 0A40     		and	r2, r1
 1017 007c 1A70     		strb	r2, [r3]
 258:.\Modbus.c    **** 
 259:.\Modbus.c    ****   if(remainder){
 1018              		.loc 1 259 0
 1019 007e FB1C     		add	r3, r7, #3
 1020 0080 1B78     		ldrb	r3, [r3]
 1021 0082 002B     		cmp	r3, #0
 1022 0084 06D0     		beq	.L44
 260:.\Modbus.c    ****     howManyBytes += 1;
 1023              		.loc 1 260 0
 1024 0086 3B1C     		mov	r3, r7
 1025 0088 1733     		add	r3, r3, #23
 1026 008a 3A1C     		mov	r2, r7
 1027 008c 1732     		add	r2, r2, #23
 1028 008e 1278     		ldrb	r2, [r2]
 1029 0090 0132     		add	r2, r2, #1
 1030 0092 1A70     		strb	r2, [r3]
 1031              	.L44:
 261:.\Modbus.c    ****   }
 262:.\Modbus.c    ****   response[2] = howManyBytes;
 1032              		.loc 1 262 0
 1033 0094 7E4B     		ldr	r3, .L59+4
 1034 0096 3A1C     		mov	r2, r7
 1035 0098 1732     		add	r2, r2, #23
 1036 009a 1278     		ldrb	r2, [r2]
 1037 009c 9A70     		strb	r2, [r3, #2]
 263:.\Modbus.c    **** 
 264:.\Modbus.c    ****   l = rc_Address;
 1038              		.loc 1 264 0
 1039 009e 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 24


 1040 00a0 1233     		add	r3, r3, #18
 1041 00a2 FA68     		ldr	r2, [r7, #12]
 1042 00a4 1A70     		strb	r2, [r3]
 265:.\Modbus.c    ****   k = 3; //start at response 3
 1043              		.loc 1 265 0
 1044 00a6 3B1C     		mov	r3, r7
 1045 00a8 1333     		add	r3, r3, #19
 1046 00aa 0322     		mov	r2, #3
 1047 00ac 1A70     		strb	r2, [r3]
 266:.\Modbus.c    **** 
 267:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 1048              		.loc 1 267 0
 1049 00ae 3B1C     		mov	r3, r7
 1050 00b0 1533     		add	r3, r3, #21
 1051 00b2 3A1C     		mov	r2, r7
 1052 00b4 1732     		add	r2, r2, #23
 1053 00b6 1278     		ldrb	r2, [r2]
 1054 00b8 1A70     		strb	r2, [r3]
 1055 00ba 9CE0     		b	.L45
 1056              	.L56:
 268:.\Modbus.c    **** 		if(i>1){
 1057              		.loc 1 268 0
 1058 00bc 3B1C     		mov	r3, r7
 1059 00be 1533     		add	r3, r3, #21
 1060 00c0 1B78     		ldrb	r3, [r3]
 1061 00c2 012B     		cmp	r3, #1
 1062 00c4 47D9     		bls	.L46
 269:.\Modbus.c    ****       for(j=0;j!=8;j++){
 1063              		.loc 1 269 0
 1064 00c6 3B1C     		mov	r3, r7
 1065 00c8 1433     		add	r3, r3, #20
 1066 00ca 0022     		mov	r2, #0
 1067 00cc 1A70     		strb	r2, [r3]
 1068 00ce 35E0     		b	.L47
 1069              	.L50:
 270:.\Modbus.c    **** 				if(coils[l]){
 1070              		.loc 1 270 0
 1071 00d0 3B1C     		mov	r3, r7
 1072 00d2 1233     		add	r3, r3, #18
 1073 00d4 1B78     		ldrb	r3, [r3]
 1074 00d6 6F4A     		ldr	r2, .L59+8
 1075 00d8 D35C     		ldrb	r3, [r2, r3]
 1076 00da 002B     		cmp	r3, #0
 1077 00dc 04D0     		beq	.L48
 271:.\Modbus.c    **** 					lsb = 1;
 1078              		.loc 1 271 0
 1079 00de 3B1C     		mov	r3, r7
 1080 00e0 1633     		add	r3, r3, #22
 1081 00e2 0122     		mov	r2, #1
 1082 00e4 1A70     		strb	r2, [r3]
 1083 00e6 03E0     		b	.L49
 1084              	.L48:
 272:.\Modbus.c    **** 				}
 273:.\Modbus.c    **** 				else{
 274:.\Modbus.c    ****           lsb = 0;
 1085              		.loc 1 274 0
 1086 00e8 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 25


 1087 00ea 1633     		add	r3, r3, #22
 1088 00ec 0022     		mov	r2, #0
 1089 00ee 1A70     		strb	r2, [r3]
 1090              	.L49:
 275:.\Modbus.c    **** 				}
 276:.\Modbus.c    **** 				response[k] ^= (lsb << j);
 1091              		.loc 1 276 0
 1092 00f0 3B1C     		mov	r3, r7
 1093 00f2 1333     		add	r3, r3, #19
 1094 00f4 1B78     		ldrb	r3, [r3]
 1095 00f6 3A1C     		mov	r2, r7
 1096 00f8 1332     		add	r2, r2, #19
 1097 00fa 1278     		ldrb	r2, [r2]
 1098 00fc 6449     		ldr	r1, .L59+4
 1099 00fe 8A5C     		ldrb	r2, [r1, r2]
 1100 0100 D1B2     		uxtb	r1, r2
 1101 0102 3A1C     		mov	r2, r7
 1102 0104 1632     		add	r2, r2, #22
 1103 0106 1078     		ldrb	r0, [r2]
 1104 0108 3A1C     		mov	r2, r7
 1105 010a 1432     		add	r2, r2, #20
 1106 010c 1278     		ldrb	r2, [r2]
 1107 010e 041C     		mov	r4, r0
 1108 0110 9440     		lsl	r4, r4, r2
 1109 0112 221C     		mov	r2, r4
 1110 0114 D2B2     		uxtb	r2, r2
 1111 0116 4A40     		eor	r2, r1
 1112 0118 D2B2     		uxtb	r2, r2
 1113 011a D1B2     		uxtb	r1, r2
 1114 011c 5C4A     		ldr	r2, .L59+4
 1115 011e D154     		strb	r1, [r2, r3]
 277:.\Modbus.c    **** 				l++;
 1116              		.loc 1 277 0
 1117 0120 3B1C     		mov	r3, r7
 1118 0122 1233     		add	r3, r3, #18
 1119 0124 3A1C     		mov	r2, r7
 1120 0126 1232     		add	r2, r2, #18
 1121 0128 1278     		ldrb	r2, [r2]
 1122 012a 0132     		add	r2, r2, #1
 1123 012c 1A70     		strb	r2, [r3]
 269:.\Modbus.c    ****       for(j=0;j!=8;j++){
 1124              		.loc 1 269 0
 1125 012e 3B1C     		mov	r3, r7
 1126 0130 1433     		add	r3, r3, #20
 1127 0132 3A1C     		mov	r2, r7
 1128 0134 1432     		add	r2, r2, #20
 1129 0136 1278     		ldrb	r2, [r2]
 1130 0138 0132     		add	r2, r2, #1
 1131 013a 1A70     		strb	r2, [r3]
 1132              	.L47:
 269:.\Modbus.c    ****       for(j=0;j!=8;j++){
 1133              		.loc 1 269 0 is_stmt 0 discriminator 1
 1134 013c 3B1C     		mov	r3, r7
 1135 013e 1433     		add	r3, r3, #20
 1136 0140 1B78     		ldrb	r3, [r3]
 1137 0142 082B     		cmp	r3, #8
 1138 0144 C4D1     		bne	.L50
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 26


 278:.\Modbus.c    **** 	    }
 279:.\Modbus.c    **** 			k++;
 1139              		.loc 1 279 0 is_stmt 1
 1140 0146 3B1C     		mov	r3, r7
 1141 0148 1333     		add	r3, r3, #19
 1142 014a 3A1C     		mov	r2, r7
 1143 014c 1332     		add	r2, r2, #19
 1144 014e 1278     		ldrb	r2, [r2]
 1145 0150 0132     		add	r2, r2, #1
 1146 0152 1A70     		strb	r2, [r3]
 1147 0154 48E0     		b	.L51
 1148              	.L46:
 280:.\Modbus.c    **** 	  }
 281:.\Modbus.c    **** 		else{
 282:.\Modbus.c    **** 			for(j=0;j!=remainder;j++){
 1149              		.loc 1 282 0
 1150 0156 3B1C     		mov	r3, r7
 1151 0158 1433     		add	r3, r3, #20
 1152 015a 0022     		mov	r2, #0
 1153 015c 1A70     		strb	r2, [r3]
 1154 015e 35E0     		b	.L52
 1155              	.L55:
 283:.\Modbus.c    **** 				if(coils[l]){
 1156              		.loc 1 283 0
 1157 0160 3B1C     		mov	r3, r7
 1158 0162 1233     		add	r3, r3, #18
 1159 0164 1B78     		ldrb	r3, [r3]
 1160 0166 4B4A     		ldr	r2, .L59+8
 1161 0168 D35C     		ldrb	r3, [r2, r3]
 1162 016a 002B     		cmp	r3, #0
 1163 016c 04D0     		beq	.L53
 284:.\Modbus.c    **** 					lsb = 1;
 1164              		.loc 1 284 0
 1165 016e 3B1C     		mov	r3, r7
 1166 0170 1633     		add	r3, r3, #22
 1167 0172 0122     		mov	r2, #1
 1168 0174 1A70     		strb	r2, [r3]
 1169 0176 03E0     		b	.L54
 1170              	.L53:
 285:.\Modbus.c    **** 				}
 286:.\Modbus.c    **** 				else{
 287:.\Modbus.c    ****           lsb = 0;
 1171              		.loc 1 287 0
 1172 0178 3B1C     		mov	r3, r7
 1173 017a 1633     		add	r3, r3, #22
 1174 017c 0022     		mov	r2, #0
 1175 017e 1A70     		strb	r2, [r3]
 1176              	.L54:
 288:.\Modbus.c    **** 				}
 289:.\Modbus.c    ****         response[k] ^= (lsb << j);
 1177              		.loc 1 289 0
 1178 0180 3B1C     		mov	r3, r7
 1179 0182 1333     		add	r3, r3, #19
 1180 0184 1B78     		ldrb	r3, [r3]
 1181 0186 3A1C     		mov	r2, r7
 1182 0188 1332     		add	r2, r2, #19
 1183 018a 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 27


 1184 018c 4049     		ldr	r1, .L59+4
 1185 018e 8A5C     		ldrb	r2, [r1, r2]
 1186 0190 D1B2     		uxtb	r1, r2
 1187 0192 3A1C     		mov	r2, r7
 1188 0194 1632     		add	r2, r2, #22
 1189 0196 1078     		ldrb	r0, [r2]
 1190 0198 3A1C     		mov	r2, r7
 1191 019a 1432     		add	r2, r2, #20
 1192 019c 1278     		ldrb	r2, [r2]
 1193 019e 041C     		mov	r4, r0
 1194 01a0 9440     		lsl	r4, r4, r2
 1195 01a2 221C     		mov	r2, r4
 1196 01a4 D2B2     		uxtb	r2, r2
 1197 01a6 4A40     		eor	r2, r1
 1198 01a8 D2B2     		uxtb	r2, r2
 1199 01aa D1B2     		uxtb	r1, r2
 1200 01ac 384A     		ldr	r2, .L59+4
 1201 01ae D154     		strb	r1, [r2, r3]
 290:.\Modbus.c    **** 				l++;
 1202              		.loc 1 290 0
 1203 01b0 3B1C     		mov	r3, r7
 1204 01b2 1233     		add	r3, r3, #18
 1205 01b4 3A1C     		mov	r2, r7
 1206 01b6 1232     		add	r2, r2, #18
 1207 01b8 1278     		ldrb	r2, [r2]
 1208 01ba 0132     		add	r2, r2, #1
 1209 01bc 1A70     		strb	r2, [r3]
 282:.\Modbus.c    **** 			for(j=0;j!=remainder;j++){
 1210              		.loc 1 282 0
 1211 01be 3B1C     		mov	r3, r7
 1212 01c0 1433     		add	r3, r3, #20
 1213 01c2 3A1C     		mov	r2, r7
 1214 01c4 1432     		add	r2, r2, #20
 1215 01c6 1278     		ldrb	r2, [r2]
 1216 01c8 0132     		add	r2, r2, #1
 1217 01ca 1A70     		strb	r2, [r3]
 1218              	.L52:
 282:.\Modbus.c    **** 			for(j=0;j!=remainder;j++){
 1219              		.loc 1 282 0 is_stmt 0 discriminator 1
 1220 01cc 3A1C     		mov	r2, r7
 1221 01ce 1432     		add	r2, r2, #20
 1222 01d0 FB1C     		add	r3, r7, #3
 1223 01d2 1278     		ldrb	r2, [r2]
 1224 01d4 1B78     		ldrb	r3, [r3]
 1225 01d6 9A42     		cmp	r2, r3
 1226 01d8 C2D1     		bne	.L55
 291:.\Modbus.c    **** 			}
 292:.\Modbus.c    **** 			k++;
 1227              		.loc 1 292 0 is_stmt 1
 1228 01da 3B1C     		mov	r3, r7
 1229 01dc 1333     		add	r3, r3, #19
 1230 01de 3A1C     		mov	r2, r7
 1231 01e0 1332     		add	r2, r2, #19
 1232 01e2 1278     		ldrb	r2, [r2]
 1233 01e4 0132     		add	r2, r2, #1
 1234 01e6 1A70     		strb	r2, [r3]
 1235              	.L51:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 28


 267:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 1236              		.loc 1 267 0
 1237 01e8 3B1C     		mov	r3, r7
 1238 01ea 1533     		add	r3, r3, #21
 1239 01ec 3A1C     		mov	r2, r7
 1240 01ee 1532     		add	r2, r2, #21
 1241 01f0 1278     		ldrb	r2, [r2]
 1242 01f2 013A     		sub	r2, r2, #1
 1243 01f4 1A70     		strb	r2, [r3]
 1244              	.L45:
 267:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 1245              		.loc 1 267 0 is_stmt 0 discriminator 1
 1246 01f6 3B1C     		mov	r3, r7
 1247 01f8 1533     		add	r3, r3, #21
 1248 01fa 1B78     		ldrb	r3, [r3]
 1249 01fc 002B     		cmp	r3, #0
 1250 01fe 00D0     		beq	.LCB1053
 1251 0200 5CE7     		b	.L56	@long jump
 1252              	.LCB1053:
 293:.\Modbus.c    **** 		}
 294:.\Modbus.c    ****   }
 295:.\Modbus.c    ****   crc = generateCRC(k+2);
 1253              		.loc 1 295 0 is_stmt 1
 1254 0202 3B1C     		mov	r3, r7
 1255 0204 1333     		add	r3, r3, #19
 1256 0206 1B78     		ldrb	r3, [r3]
 1257 0208 0233     		add	r3, r3, #2
 1258 020a DBB2     		uxtb	r3, r3
 1259 020c 181C     		mov	r0, r3
 1260 020e FFF7FEFF 		bl	generateCRC
 1261 0212 031C     		mov	r3, r0
 1262 0214 7B60     		str	r3, [r7, #4]
 296:.\Modbus.c    **** 
 297:.\Modbus.c    ****   response[k] = crc >> 8;
 1263              		.loc 1 297 0
 1264 0216 3B1C     		mov	r3, r7
 1265 0218 1333     		add	r3, r3, #19
 1266 021a 1B78     		ldrb	r3, [r3]
 1267 021c 7A68     		ldr	r2, [r7, #4]
 1268 021e 120A     		lsr	r2, r2, #8
 1269 0220 D1B2     		uxtb	r1, r2
 1270 0222 1B4A     		ldr	r2, .L59+4
 1271 0224 D154     		strb	r1, [r2, r3]
 298:.\Modbus.c    ****   response[k+1] = crc;
 1272              		.loc 1 298 0
 1273 0226 3B1C     		mov	r3, r7
 1274 0228 1333     		add	r3, r3, #19
 1275 022a 1B78     		ldrb	r3, [r3]
 1276 022c 0133     		add	r3, r3, #1
 1277 022e 7A68     		ldr	r2, [r7, #4]
 1278 0230 D1B2     		uxtb	r1, r2
 1279 0232 174A     		ldr	r2, .L59+4
 1280 0234 D154     		strb	r1, [r2, r3]
 299:.\Modbus.c    **** 
 300:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 1281              		.loc 1 300 0
 1282 0236 0120     		mov	r0, #1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 29


 1283 0238 FFF7FEFF 		bl	writeEnable_Write
 301:.\Modbus.c    **** 
 302:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 1284              		.loc 1 302 0
 1285 023c 3B1C     		mov	r3, r7
 1286 023e 1533     		add	r3, r3, #21
 1287 0240 0022     		mov	r2, #0
 1288 0242 1A70     		strb	r2, [r3]
 1289 0244 0EE0     		b	.L57
 1290              	.L58:
 303:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 1291              		.loc 1 303 0 discriminator 2
 1292 0246 3B1C     		mov	r3, r7
 1293 0248 1533     		add	r3, r3, #21
 1294 024a 1B78     		ldrb	r3, [r3]
 1295 024c 104A     		ldr	r2, .L59+4
 1296 024e D35C     		ldrb	r3, [r2, r3]
 1297 0250 181C     		mov	r0, r3
 1298 0252 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 302:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 1299              		.loc 1 302 0 discriminator 2
 1300 0256 3B1C     		mov	r3, r7
 1301 0258 1533     		add	r3, r3, #21
 1302 025a 3A1C     		mov	r2, r7
 1303 025c 1532     		add	r2, r2, #21
 1304 025e 1278     		ldrb	r2, [r2]
 1305 0260 0132     		add	r2, r2, #1
 1306 0262 1A70     		strb	r2, [r3]
 1307              	.L57:
 302:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 1308              		.loc 1 302 0 is_stmt 0 discriminator 1
 1309 0264 3B1C     		mov	r3, r7
 1310 0266 1533     		add	r3, r3, #21
 1311 0268 1A78     		ldrb	r2, [r3]
 1312 026a 3B1C     		mov	r3, r7
 1313 026c 1333     		add	r3, r3, #19
 1314 026e 1B78     		ldrb	r3, [r3]
 1315 0270 0333     		add	r3, r3, #3
 1316 0272 9A42     		cmp	r2, r3
 1317 0274 E7D1     		bne	.L58
 304:.\Modbus.c    ****   }
 305:.\Modbus.c    ****   responseFinished(k+3);
 1318              		.loc 1 305 0 is_stmt 1
 1319 0276 3B1C     		mov	r3, r7
 1320 0278 1333     		add	r3, r3, #19
 1321 027a 1B78     		ldrb	r3, [r3]
 1322 027c 0333     		add	r3, r3, #3
 1323 027e 181C     		mov	r0, r3
 1324 0280 FFF7FEFF 		bl	responseFinished
 306:.\Modbus.c    **** 
 307:.\Modbus.c    **** }
 1325              		.loc 1 307 0
 1326 0284 BD46     		mov	sp, r7
 1327 0286 07B0     		add	sp, sp, #28
 1328              		@ sp needed for prologue
 1329 0288 90BD     		pop	{r4, r7, pc}
 1330              	.L60:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 30


 1331 028a C046     		.align	2
 1332              	.L59:
 1333 028c 00000000 		.word	received
 1334 0290 00000000 		.word	response
 1335 0294 00000000 		.word	coils
 1336              		.cfi_endproc
 1337              	.LFE37:
 1338              		.size	readInputCoil, .-readInputCoil
 1339              		.section	.text.readInputReg,"ax",%progbits
 1340              		.align	2
 1341              		.global	readInputReg
 1342              		.code	16
 1343              		.thumb_func
 1344              		.type	readInputReg, %function
 1345              	readInputReg:
 1346              	.LFB38:
 308:.\Modbus.c    **** 
 309:.\Modbus.c    **** void readInputReg(void)
 310:.\Modbus.c    **** {
 1347              		.loc 1 310 0
 1348              		.cfi_startproc
 1349 0000 80B5     		push	{r7, lr}
 1350              	.LCFI12:
 1351              		.cfi_def_cfa_offset 8
 1352              		.cfi_offset 7, -8
 1353              		.cfi_offset 14, -4
 1354 0002 86B0     		sub	sp, sp, #24
 1355              	.LCFI13:
 1356              		.cfi_def_cfa_offset 32
 1357 0004 00AF     		add	r7, sp, #0
 1358              	.LCFI14:
 1359              		.cfi_def_cfa_register 7
 311:.\Modbus.c    ****   unsigned int rr_Address = 0;
 1360              		.loc 1 311 0
 1361 0006 0023     		mov	r3, #0
 1362 0008 FB60     		str	r3, [r7, #12]
 312:.\Modbus.c    ****   unsigned int rr_numRegs = 0;
 1363              		.loc 1 312 0
 1364 000a 0023     		mov	r3, #0
 1365 000c BB60     		str	r3, [r7, #8]
 313:.\Modbus.c    ****   unsigned char j = 3;
 1366              		.loc 1 313 0
 1367 000e 3B1C     		mov	r3, r7
 1368 0010 1733     		add	r3, r3, #23
 1369 0012 0322     		mov	r2, #3
 1370 0014 1A70     		strb	r2, [r3]
 314:.\Modbus.c    ****   unsigned int crc = 0;
 1371              		.loc 1 314 0
 1372 0016 0023     		mov	r3, #0
 1373 0018 7B60     		str	r3, [r7, #4]
 315:.\Modbus.c    ****   unsigned int i = 0;
 1374              		.loc 1 315 0
 1375 001a 0023     		mov	r3, #0
 1376 001c 3B61     		str	r3, [r7, #16]
 316:.\Modbus.c    **** 
 317:.\Modbus.c    ****   //Combine address bytes
 318:.\Modbus.c    ****   rr_Address = received[2];
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 31


 1377              		.loc 1 318 0
 1378 001e 5F4B     		ldr	r3, .L68
 1379 0020 9B78     		ldrb	r3, [r3, #2]
 1380 0022 FB60     		str	r3, [r7, #12]
 319:.\Modbus.c    ****   rr_Address <<= 8;
 1381              		.loc 1 319 0
 1382 0024 FB68     		ldr	r3, [r7, #12]
 1383 0026 1B02     		lsl	r3, r3, #8
 1384 0028 FB60     		str	r3, [r7, #12]
 320:.\Modbus.c    ****   rr_Address |= received[3];
 1385              		.loc 1 320 0
 1386 002a 5C4B     		ldr	r3, .L68
 1387 002c DB78     		ldrb	r3, [r3, #3]
 1388 002e FA68     		ldr	r2, [r7, #12]
 1389 0030 1343     		orr	r3, r2
 1390 0032 FB60     		str	r3, [r7, #12]
 321:.\Modbus.c    **** 
 322:.\Modbus.c    ****   //Combine number of regs bytes
 323:.\Modbus.c    ****   rr_numRegs = received[4];
 1391              		.loc 1 323 0
 1392 0034 594B     		ldr	r3, .L68
 1393 0036 1B79     		ldrb	r3, [r3, #4]
 1394 0038 BB60     		str	r3, [r7, #8]
 324:.\Modbus.c    ****   rr_numRegs <<= 8;
 1395              		.loc 1 324 0
 1396 003a BB68     		ldr	r3, [r7, #8]
 1397 003c 1B02     		lsl	r3, r3, #8
 1398 003e BB60     		str	r3, [r7, #8]
 325:.\Modbus.c    ****   rr_numRegs |= received[5];
 1399              		.loc 1 325 0
 1400 0040 564B     		ldr	r3, .L68
 1401 0042 5B79     		ldrb	r3, [r3, #5]
 1402 0044 BA68     		ldr	r2, [r7, #8]
 1403 0046 1343     		orr	r3, r2
 1404 0048 BB60     		str	r3, [r7, #8]
 326:.\Modbus.c    **** 
 327:.\Modbus.c    ****   response[0] = SlaveAddress;
 1405              		.loc 1 327 0
 1406 004a 554B     		ldr	r3, .L68+4
 1407 004c 0222     		mov	r2, #2
 1408 004e 1A70     		strb	r2, [r3]
 328:.\Modbus.c    ****   response[1] = 0x04;
 1409              		.loc 1 328 0
 1410 0050 534B     		ldr	r3, .L68+4
 1411 0052 0422     		mov	r2, #4
 1412 0054 5A70     		strb	r2, [r3, #1]
 329:.\Modbus.c    ****   response[2] = rr_numRegs*2; //2 bytes per reg
 1413              		.loc 1 329 0
 1414 0056 BB68     		ldr	r3, [r7, #8]
 1415 0058 DBB2     		uxtb	r3, r3
 1416 005a 5B00     		lsl	r3, r3, #1
 1417 005c DAB2     		uxtb	r2, r3
 1418 005e 504B     		ldr	r3, .L68+4
 1419 0060 9A70     		strb	r2, [r3, #2]
 330:.\Modbus.c    **** 
 331:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1420              		.loc 1 331 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 32


 1421 0062 FB68     		ldr	r3, [r7, #12]
 1422 0064 3B61     		str	r3, [r7, #16]
 1423 0066 4AE0     		b	.L62
 1424              	.L65:
 332:.\Modbus.c    ****     if(holdingReg[i] > 255){
 1425              		.loc 1 332 0
 1426 0068 4E4B     		ldr	r3, .L68+8
 1427 006a 3A69     		ldr	r2, [r7, #16]
 1428 006c 9200     		lsl	r2, r2, #2
 1429 006e D358     		ldr	r3, [r2, r3]
 1430 0070 FF2B     		cmp	r3, #255
 1431 0072 23D9     		bls	.L63
 333:.\Modbus.c    ****       //Need to split it up into 2 bytes
 334:.\Modbus.c    ****       response[j] = holdingReg[i] >> 8;
 1432              		.loc 1 334 0
 1433 0074 3B1C     		mov	r3, r7
 1434 0076 1733     		add	r3, r3, #23
 1435 0078 1B78     		ldrb	r3, [r3]
 1436 007a 4A4A     		ldr	r2, .L68+8
 1437 007c 3969     		ldr	r1, [r7, #16]
 1438 007e 8900     		lsl	r1, r1, #2
 1439 0080 8A58     		ldr	r2, [r1, r2]
 1440 0082 120A     		lsr	r2, r2, #8
 1441 0084 D1B2     		uxtb	r1, r2
 1442 0086 464A     		ldr	r2, .L68+4
 1443 0088 D154     		strb	r1, [r2, r3]
 335:.\Modbus.c    ****       j++;
 1444              		.loc 1 335 0
 1445 008a 3B1C     		mov	r3, r7
 1446 008c 1733     		add	r3, r3, #23
 1447 008e 3A1C     		mov	r2, r7
 1448 0090 1732     		add	r2, r2, #23
 1449 0092 1278     		ldrb	r2, [r2]
 1450 0094 0132     		add	r2, r2, #1
 1451 0096 1A70     		strb	r2, [r3]
 336:.\Modbus.c    ****       response[j] = holdingReg[i];
 1452              		.loc 1 336 0
 1453 0098 3B1C     		mov	r3, r7
 1454 009a 1733     		add	r3, r3, #23
 1455 009c 1B78     		ldrb	r3, [r3]
 1456 009e 414A     		ldr	r2, .L68+8
 1457 00a0 3969     		ldr	r1, [r7, #16]
 1458 00a2 8900     		lsl	r1, r1, #2
 1459 00a4 8A58     		ldr	r2, [r1, r2]
 1460 00a6 D1B2     		uxtb	r1, r2
 1461 00a8 3D4A     		ldr	r2, .L68+4
 1462 00aa D154     		strb	r1, [r2, r3]
 337:.\Modbus.c    ****       j++;
 1463              		.loc 1 337 0
 1464 00ac 3B1C     		mov	r3, r7
 1465 00ae 1733     		add	r3, r3, #23
 1466 00b0 3A1C     		mov	r2, r7
 1467 00b2 1732     		add	r2, r2, #23
 1468 00b4 1278     		ldrb	r2, [r2]
 1469 00b6 0132     		add	r2, r2, #1
 1470 00b8 1A70     		strb	r2, [r3]
 1471 00ba 1DE0     		b	.L64
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 33


 1472              	.L63:
 338:.\Modbus.c    ****     }
 339:.\Modbus.c    ****     else{
 340:.\Modbus.c    ****       response[j] = 0x00;
 1473              		.loc 1 340 0
 1474 00bc 3B1C     		mov	r3, r7
 1475 00be 1733     		add	r3, r3, #23
 1476 00c0 1B78     		ldrb	r3, [r3]
 1477 00c2 374A     		ldr	r2, .L68+4
 1478 00c4 0021     		mov	r1, #0
 1479 00c6 D154     		strb	r1, [r2, r3]
 341:.\Modbus.c    ****       j++;
 1480              		.loc 1 341 0
 1481 00c8 3B1C     		mov	r3, r7
 1482 00ca 1733     		add	r3, r3, #23
 1483 00cc 3A1C     		mov	r2, r7
 1484 00ce 1732     		add	r2, r2, #23
 1485 00d0 1278     		ldrb	r2, [r2]
 1486 00d2 0132     		add	r2, r2, #1
 1487 00d4 1A70     		strb	r2, [r3]
 342:.\Modbus.c    ****       response[j] = holdingReg[i];
 1488              		.loc 1 342 0
 1489 00d6 3B1C     		mov	r3, r7
 1490 00d8 1733     		add	r3, r3, #23
 1491 00da 1B78     		ldrb	r3, [r3]
 1492 00dc 314A     		ldr	r2, .L68+8
 1493 00de 3969     		ldr	r1, [r7, #16]
 1494 00e0 8900     		lsl	r1, r1, #2
 1495 00e2 8A58     		ldr	r2, [r1, r2]
 1496 00e4 D1B2     		uxtb	r1, r2
 1497 00e6 2E4A     		ldr	r2, .L68+4
 1498 00e8 D154     		strb	r1, [r2, r3]
 343:.\Modbus.c    ****       j++;
 1499              		.loc 1 343 0
 1500 00ea 3B1C     		mov	r3, r7
 1501 00ec 1733     		add	r3, r3, #23
 1502 00ee 3A1C     		mov	r2, r7
 1503 00f0 1732     		add	r2, r2, #23
 1504 00f2 1278     		ldrb	r2, [r2]
 1505 00f4 0132     		add	r2, r2, #1
 1506 00f6 1A70     		strb	r2, [r3]
 1507              	.L64:
 331:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1508              		.loc 1 331 0
 1509 00f8 3B69     		ldr	r3, [r7, #16]
 1510 00fa 0133     		add	r3, r3, #1
 1511 00fc 3B61     		str	r3, [r7, #16]
 1512              	.L62:
 331:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1513              		.loc 1 331 0 is_stmt 0 discriminator 1
 1514 00fe FA68     		ldr	r2, [r7, #12]
 1515 0100 BB68     		ldr	r3, [r7, #8]
 1516 0102 D218     		add	r2, r2, r3
 1517 0104 3B69     		ldr	r3, [r7, #16]
 1518 0106 9A42     		cmp	r2, r3
 1519 0108 AED8     		bhi	.L65
 344:.\Modbus.c    ****     }
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 34


 345:.\Modbus.c    ****   }
 346:.\Modbus.c    ****   crc = generateCRC(j+2);
 1520              		.loc 1 346 0 is_stmt 1
 1521 010a 3B1C     		mov	r3, r7
 1522 010c 1733     		add	r3, r3, #23
 1523 010e 1B78     		ldrb	r3, [r3]
 1524 0110 0233     		add	r3, r3, #2
 1525 0112 DBB2     		uxtb	r3, r3
 1526 0114 181C     		mov	r0, r3
 1527 0116 FFF7FEFF 		bl	generateCRC
 1528 011a 031C     		mov	r3, r0
 1529 011c 7B60     		str	r3, [r7, #4]
 347:.\Modbus.c    ****   response[j] = crc >> 8;
 1530              		.loc 1 347 0
 1531 011e 3B1C     		mov	r3, r7
 1532 0120 1733     		add	r3, r3, #23
 1533 0122 1B78     		ldrb	r3, [r3]
 1534 0124 7A68     		ldr	r2, [r7, #4]
 1535 0126 120A     		lsr	r2, r2, #8
 1536 0128 D1B2     		uxtb	r1, r2
 1537 012a 1D4A     		ldr	r2, .L68+4
 1538 012c D154     		strb	r1, [r2, r3]
 348:.\Modbus.c    ****   j++;
 1539              		.loc 1 348 0
 1540 012e 3B1C     		mov	r3, r7
 1541 0130 1733     		add	r3, r3, #23
 1542 0132 3A1C     		mov	r2, r7
 1543 0134 1732     		add	r2, r2, #23
 1544 0136 1278     		ldrb	r2, [r2]
 1545 0138 0132     		add	r2, r2, #1
 1546 013a 1A70     		strb	r2, [r3]
 349:.\Modbus.c    ****   response[j] = crc;
 1547              		.loc 1 349 0
 1548 013c 3B1C     		mov	r3, r7
 1549 013e 1733     		add	r3, r3, #23
 1550 0140 1B78     		ldrb	r3, [r3]
 1551 0142 7A68     		ldr	r2, [r7, #4]
 1552 0144 D1B2     		uxtb	r1, r2
 1553 0146 164A     		ldr	r2, .L68+4
 1554 0148 D154     		strb	r1, [r2, r3]
 350:.\Modbus.c    ****   j+=2;
 1555              		.loc 1 350 0
 1556 014a 3B1C     		mov	r3, r7
 1557 014c 1733     		add	r3, r3, #23
 1558 014e 3A1C     		mov	r2, r7
 1559 0150 1732     		add	r2, r2, #23
 1560 0152 1278     		ldrb	r2, [r2]
 1561 0154 0232     		add	r2, r2, #2
 1562 0156 1A70     		strb	r2, [r3]
 351:.\Modbus.c    **** 
 352:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 1563              		.loc 1 352 0
 1564 0158 0120     		mov	r0, #1
 1565 015a FFF7FEFF 		bl	writeEnable_Write
 353:.\Modbus.c    **** 
 354:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1566              		.loc 1 354 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 35


 1567 015e 0023     		mov	r3, #0
 1568 0160 3B61     		str	r3, [r7, #16]
 1569 0162 09E0     		b	.L66
 1570              	.L67:
 355:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 1571              		.loc 1 355 0 discriminator 2
 1572 0164 0E4A     		ldr	r2, .L68+4
 1573 0166 3B69     		ldr	r3, [r7, #16]
 1574 0168 D318     		add	r3, r2, r3
 1575 016a 1B78     		ldrb	r3, [r3]
 1576 016c 181C     		mov	r0, r3
 1577 016e FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 354:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1578              		.loc 1 354 0 discriminator 2
 1579 0172 3B69     		ldr	r3, [r7, #16]
 1580 0174 0133     		add	r3, r3, #1
 1581 0176 3B61     		str	r3, [r7, #16]
 1582              	.L66:
 354:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1583              		.loc 1 354 0 is_stmt 0 discriminator 1
 1584 0178 3B1C     		mov	r3, r7
 1585 017a 1733     		add	r3, r3, #23
 1586 017c 1A78     		ldrb	r2, [r3]
 1587 017e 3B69     		ldr	r3, [r7, #16]
 1588 0180 9A42     		cmp	r2, r3
 1589 0182 EFD1     		bne	.L67
 356:.\Modbus.c    ****   }
 357:.\Modbus.c    ****   responseFinished(9);
 1590              		.loc 1 357 0 is_stmt 1
 1591 0184 0920     		mov	r0, #9
 1592 0186 FFF7FEFF 		bl	responseFinished
 358:.\Modbus.c    ****   i=0;  
 1593              		.loc 1 358 0
 1594 018a 0023     		mov	r3, #0
 1595 018c 3B61     		str	r3, [r7, #16]
 359:.\Modbus.c    ****   j=0;
 1596              		.loc 1 359 0
 1597 018e 3B1C     		mov	r3, r7
 1598 0190 1733     		add	r3, r3, #23
 1599 0192 0022     		mov	r2, #0
 1600 0194 1A70     		strb	r2, [r3]
 360:.\Modbus.c    **** }
 1601              		.loc 1 360 0
 1602 0196 BD46     		mov	sp, r7
 1603 0198 06B0     		add	sp, sp, #24
 1604              		@ sp needed for prologue
 1605 019a 80BD     		pop	{r7, pc}
 1606              	.L69:
 1607              		.align	2
 1608              	.L68:
 1609 019c 00000000 		.word	received
 1610 01a0 00000000 		.word	response
 1611 01a4 00000000 		.word	holdingReg
 1612              		.cfi_endproc
 1613              	.LFE38:
 1614              		.size	readInputReg, .-readInputReg
 1615              		.section	.text.readReg,"ax",%progbits
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 36


 1616              		.align	2
 1617              		.global	readReg
 1618              		.code	16
 1619              		.thumb_func
 1620              		.type	readReg, %function
 1621              	readReg:
 1622              	.LFB39:
 361:.\Modbus.c    **** 
 362:.\Modbus.c    **** 
 363:.\Modbus.c    **** void readReg(void)
 364:.\Modbus.c    **** {
 1623              		.loc 1 364 0
 1624              		.cfi_startproc
 1625 0000 80B5     		push	{r7, lr}
 1626              	.LCFI15:
 1627              		.cfi_def_cfa_offset 8
 1628              		.cfi_offset 7, -8
 1629              		.cfi_offset 14, -4
 1630 0002 86B0     		sub	sp, sp, #24
 1631              	.LCFI16:
 1632              		.cfi_def_cfa_offset 32
 1633 0004 00AF     		add	r7, sp, #0
 1634              	.LCFI17:
 1635              		.cfi_def_cfa_register 7
 365:.\Modbus.c    ****   unsigned int rr_Address = 0;
 1636              		.loc 1 365 0
 1637 0006 0023     		mov	r3, #0
 1638 0008 FB60     		str	r3, [r7, #12]
 366:.\Modbus.c    ****   unsigned int rr_numRegs = 0;
 1639              		.loc 1 366 0
 1640 000a 0023     		mov	r3, #0
 1641 000c BB60     		str	r3, [r7, #8]
 367:.\Modbus.c    ****   unsigned char j = 3;
 1642              		.loc 1 367 0
 1643 000e 3B1C     		mov	r3, r7
 1644 0010 1733     		add	r3, r3, #23
 1645 0012 0322     		mov	r2, #3
 1646 0014 1A70     		strb	r2, [r3]
 368:.\Modbus.c    ****   unsigned int crc = 0;
 1647              		.loc 1 368 0
 1648 0016 0023     		mov	r3, #0
 1649 0018 7B60     		str	r3, [r7, #4]
 369:.\Modbus.c    ****   unsigned int i = 0;
 1650              		.loc 1 369 0
 1651 001a 0023     		mov	r3, #0
 1652 001c 3B61     		str	r3, [r7, #16]
 370:.\Modbus.c    **** 
 371:.\Modbus.c    ****   //Combine address bytes
 372:.\Modbus.c    ****   rr_Address = received[2];
 1653              		.loc 1 372 0
 1654 001e 604B     		ldr	r3, .L77
 1655 0020 9B78     		ldrb	r3, [r3, #2]
 1656 0022 FB60     		str	r3, [r7, #12]
 373:.\Modbus.c    ****   rr_Address <<= 8;
 1657              		.loc 1 373 0
 1658 0024 FB68     		ldr	r3, [r7, #12]
 1659 0026 1B02     		lsl	r3, r3, #8
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 37


 1660 0028 FB60     		str	r3, [r7, #12]
 374:.\Modbus.c    ****   rr_Address |= received[3];
 1661              		.loc 1 374 0
 1662 002a 5D4B     		ldr	r3, .L77
 1663 002c DB78     		ldrb	r3, [r3, #3]
 1664 002e FA68     		ldr	r2, [r7, #12]
 1665 0030 1343     		orr	r3, r2
 1666 0032 FB60     		str	r3, [r7, #12]
 375:.\Modbus.c    **** 
 376:.\Modbus.c    ****   //Combine number of regs bytes
 377:.\Modbus.c    ****   rr_numRegs = received[4];
 1667              		.loc 1 377 0
 1668 0034 5A4B     		ldr	r3, .L77
 1669 0036 1B79     		ldrb	r3, [r3, #4]
 1670 0038 BB60     		str	r3, [r7, #8]
 378:.\Modbus.c    ****   rr_numRegs <<= 8;
 1671              		.loc 1 378 0
 1672 003a BB68     		ldr	r3, [r7, #8]
 1673 003c 1B02     		lsl	r3, r3, #8
 1674 003e BB60     		str	r3, [r7, #8]
 379:.\Modbus.c    ****   rr_numRegs |= received[5];
 1675              		.loc 1 379 0
 1676 0040 574B     		ldr	r3, .L77
 1677 0042 5B79     		ldrb	r3, [r3, #5]
 1678 0044 BA68     		ldr	r2, [r7, #8]
 1679 0046 1343     		orr	r3, r2
 1680 0048 BB60     		str	r3, [r7, #8]
 380:.\Modbus.c    **** 
 381:.\Modbus.c    ****   response[0] = SlaveAddress;
 1681              		.loc 1 381 0
 1682 004a 564B     		ldr	r3, .L77+4
 1683 004c 0222     		mov	r2, #2
 1684 004e 1A70     		strb	r2, [r3]
 382:.\Modbus.c    ****   response[1] = 0x03;
 1685              		.loc 1 382 0
 1686 0050 544B     		ldr	r3, .L77+4
 1687 0052 0322     		mov	r2, #3
 1688 0054 5A70     		strb	r2, [r3, #1]
 383:.\Modbus.c    ****   response[2] = rr_numRegs*2; //2 bytes per reg
 1689              		.loc 1 383 0
 1690 0056 BB68     		ldr	r3, [r7, #8]
 1691 0058 DBB2     		uxtb	r3, r3
 1692 005a 5B00     		lsl	r3, r3, #1
 1693 005c DAB2     		uxtb	r2, r3
 1694 005e 514B     		ldr	r3, .L77+4
 1695 0060 9A70     		strb	r2, [r3, #2]
 384:.\Modbus.c    **** 
 385:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1696              		.loc 1 385 0
 1697 0062 FB68     		ldr	r3, [r7, #12]
 1698 0064 3B61     		str	r3, [r7, #16]
 1699 0066 4AE0     		b	.L71
 1700              	.L74:
 386:.\Modbus.c    ****     if(holdingReg[i] > 255){
 1701              		.loc 1 386 0
 1702 0068 4F4B     		ldr	r3, .L77+8
 1703 006a 3A69     		ldr	r2, [r7, #16]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 38


 1704 006c 9200     		lsl	r2, r2, #2
 1705 006e D358     		ldr	r3, [r2, r3]
 1706 0070 FF2B     		cmp	r3, #255
 1707 0072 23D9     		bls	.L72
 387:.\Modbus.c    ****       //Need to split it up into 2 bytes
 388:.\Modbus.c    ****       response[j] = holdingReg[i] >> 8;
 1708              		.loc 1 388 0
 1709 0074 3B1C     		mov	r3, r7
 1710 0076 1733     		add	r3, r3, #23
 1711 0078 1B78     		ldrb	r3, [r3]
 1712 007a 4B4A     		ldr	r2, .L77+8
 1713 007c 3969     		ldr	r1, [r7, #16]
 1714 007e 8900     		lsl	r1, r1, #2
 1715 0080 8A58     		ldr	r2, [r1, r2]
 1716 0082 120A     		lsr	r2, r2, #8
 1717 0084 D1B2     		uxtb	r1, r2
 1718 0086 474A     		ldr	r2, .L77+4
 1719 0088 D154     		strb	r1, [r2, r3]
 389:.\Modbus.c    ****       j++;
 1720              		.loc 1 389 0
 1721 008a 3B1C     		mov	r3, r7
 1722 008c 1733     		add	r3, r3, #23
 1723 008e 3A1C     		mov	r2, r7
 1724 0090 1732     		add	r2, r2, #23
 1725 0092 1278     		ldrb	r2, [r2]
 1726 0094 0132     		add	r2, r2, #1
 1727 0096 1A70     		strb	r2, [r3]
 390:.\Modbus.c    ****       response[j] = holdingReg[i];
 1728              		.loc 1 390 0
 1729 0098 3B1C     		mov	r3, r7
 1730 009a 1733     		add	r3, r3, #23
 1731 009c 1B78     		ldrb	r3, [r3]
 1732 009e 424A     		ldr	r2, .L77+8
 1733 00a0 3969     		ldr	r1, [r7, #16]
 1734 00a2 8900     		lsl	r1, r1, #2
 1735 00a4 8A58     		ldr	r2, [r1, r2]
 1736 00a6 D1B2     		uxtb	r1, r2
 1737 00a8 3E4A     		ldr	r2, .L77+4
 1738 00aa D154     		strb	r1, [r2, r3]
 391:.\Modbus.c    ****       j++;
 1739              		.loc 1 391 0
 1740 00ac 3B1C     		mov	r3, r7
 1741 00ae 1733     		add	r3, r3, #23
 1742 00b0 3A1C     		mov	r2, r7
 1743 00b2 1732     		add	r2, r2, #23
 1744 00b4 1278     		ldrb	r2, [r2]
 1745 00b6 0132     		add	r2, r2, #1
 1746 00b8 1A70     		strb	r2, [r3]
 1747 00ba 1DE0     		b	.L73
 1748              	.L72:
 392:.\Modbus.c    ****     }
 393:.\Modbus.c    ****     else{
 394:.\Modbus.c    ****       response[j] = 0x00;
 1749              		.loc 1 394 0
 1750 00bc 3B1C     		mov	r3, r7
 1751 00be 1733     		add	r3, r3, #23
 1752 00c0 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 39


 1753 00c2 384A     		ldr	r2, .L77+4
 1754 00c4 0021     		mov	r1, #0
 1755 00c6 D154     		strb	r1, [r2, r3]
 395:.\Modbus.c    ****       j++;
 1756              		.loc 1 395 0
 1757 00c8 3B1C     		mov	r3, r7
 1758 00ca 1733     		add	r3, r3, #23
 1759 00cc 3A1C     		mov	r2, r7
 1760 00ce 1732     		add	r2, r2, #23
 1761 00d0 1278     		ldrb	r2, [r2]
 1762 00d2 0132     		add	r2, r2, #1
 1763 00d4 1A70     		strb	r2, [r3]
 396:.\Modbus.c    ****       response[j] = holdingReg[i];
 1764              		.loc 1 396 0
 1765 00d6 3B1C     		mov	r3, r7
 1766 00d8 1733     		add	r3, r3, #23
 1767 00da 1B78     		ldrb	r3, [r3]
 1768 00dc 324A     		ldr	r2, .L77+8
 1769 00de 3969     		ldr	r1, [r7, #16]
 1770 00e0 8900     		lsl	r1, r1, #2
 1771 00e2 8A58     		ldr	r2, [r1, r2]
 1772 00e4 D1B2     		uxtb	r1, r2
 1773 00e6 2F4A     		ldr	r2, .L77+4
 1774 00e8 D154     		strb	r1, [r2, r3]
 397:.\Modbus.c    ****       j++;
 1775              		.loc 1 397 0
 1776 00ea 3B1C     		mov	r3, r7
 1777 00ec 1733     		add	r3, r3, #23
 1778 00ee 3A1C     		mov	r2, r7
 1779 00f0 1732     		add	r2, r2, #23
 1780 00f2 1278     		ldrb	r2, [r2]
 1781 00f4 0132     		add	r2, r2, #1
 1782 00f6 1A70     		strb	r2, [r3]
 1783              	.L73:
 385:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1784              		.loc 1 385 0
 1785 00f8 3B69     		ldr	r3, [r7, #16]
 1786 00fa 0133     		add	r3, r3, #1
 1787 00fc 3B61     		str	r3, [r7, #16]
 1788              	.L71:
 385:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1789              		.loc 1 385 0 is_stmt 0 discriminator 1
 1790 00fe FA68     		ldr	r2, [r7, #12]
 1791 0100 BB68     		ldr	r3, [r7, #8]
 1792 0102 D218     		add	r2, r2, r3
 1793 0104 3B69     		ldr	r3, [r7, #16]
 1794 0106 9A42     		cmp	r2, r3
 1795 0108 AED8     		bhi	.L74
 398:.\Modbus.c    ****     }
 399:.\Modbus.c    ****   }
 400:.\Modbus.c    ****   crc = generateCRC(j+2);
 1796              		.loc 1 400 0 is_stmt 1
 1797 010a 3B1C     		mov	r3, r7
 1798 010c 1733     		add	r3, r3, #23
 1799 010e 1B78     		ldrb	r3, [r3]
 1800 0110 0233     		add	r3, r3, #2
 1801 0112 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 40


 1802 0114 181C     		mov	r0, r3
 1803 0116 FFF7FEFF 		bl	generateCRC
 1804 011a 031C     		mov	r3, r0
 1805 011c 7B60     		str	r3, [r7, #4]
 401:.\Modbus.c    ****   response[j] = crc >> 8;
 1806              		.loc 1 401 0
 1807 011e 3B1C     		mov	r3, r7
 1808 0120 1733     		add	r3, r3, #23
 1809 0122 1B78     		ldrb	r3, [r3]
 1810 0124 7A68     		ldr	r2, [r7, #4]
 1811 0126 120A     		lsr	r2, r2, #8
 1812 0128 D1B2     		uxtb	r1, r2
 1813 012a 1E4A     		ldr	r2, .L77+4
 1814 012c D154     		strb	r1, [r2, r3]
 402:.\Modbus.c    ****   j++;
 1815              		.loc 1 402 0
 1816 012e 3B1C     		mov	r3, r7
 1817 0130 1733     		add	r3, r3, #23
 1818 0132 3A1C     		mov	r2, r7
 1819 0134 1732     		add	r2, r2, #23
 1820 0136 1278     		ldrb	r2, [r2]
 1821 0138 0132     		add	r2, r2, #1
 1822 013a 1A70     		strb	r2, [r3]
 403:.\Modbus.c    ****   response[j] = crc;
 1823              		.loc 1 403 0
 1824 013c 3B1C     		mov	r3, r7
 1825 013e 1733     		add	r3, r3, #23
 1826 0140 1B78     		ldrb	r3, [r3]
 1827 0142 7A68     		ldr	r2, [r7, #4]
 1828 0144 D1B2     		uxtb	r1, r2
 1829 0146 174A     		ldr	r2, .L77+4
 1830 0148 D154     		strb	r1, [r2, r3]
 404:.\Modbus.c    ****   j+=2;
 1831              		.loc 1 404 0
 1832 014a 3B1C     		mov	r3, r7
 1833 014c 1733     		add	r3, r3, #23
 1834 014e 3A1C     		mov	r2, r7
 1835 0150 1732     		add	r2, r2, #23
 1836 0152 1278     		ldrb	r2, [r2]
 1837 0154 0232     		add	r2, r2, #2
 1838 0156 1A70     		strb	r2, [r3]
 405:.\Modbus.c    **** 
 406:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 1839              		.loc 1 406 0
 1840 0158 0120     		mov	r0, #1
 1841 015a FFF7FEFF 		bl	writeEnable_Write
 407:.\Modbus.c    **** 
 408:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1842              		.loc 1 408 0
 1843 015e 0023     		mov	r3, #0
 1844 0160 3B61     		str	r3, [r7, #16]
 1845 0162 09E0     		b	.L75
 1846              	.L76:
 409:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 1847              		.loc 1 409 0 discriminator 2
 1848 0164 0F4A     		ldr	r2, .L77+4
 1849 0166 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 41


 1850 0168 D318     		add	r3, r2, r3
 1851 016a 1B78     		ldrb	r3, [r3]
 1852 016c 181C     		mov	r0, r3
 1853 016e FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 408:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1854              		.loc 1 408 0 discriminator 2
 1855 0172 3B69     		ldr	r3, [r7, #16]
 1856 0174 0133     		add	r3, r3, #1
 1857 0176 3B61     		str	r3, [r7, #16]
 1858              	.L75:
 408:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1859              		.loc 1 408 0 is_stmt 0 discriminator 1
 1860 0178 3B1C     		mov	r3, r7
 1861 017a 1733     		add	r3, r3, #23
 1862 017c 1A78     		ldrb	r2, [r3]
 1863 017e 3B69     		ldr	r3, [r7, #16]
 1864 0180 9A42     		cmp	r2, r3
 1865 0182 EFD1     		bne	.L76
 410:.\Modbus.c    ****   }
 411:.\Modbus.c    ****   responseFinished(j);
 1866              		.loc 1 411 0 is_stmt 1
 1867 0184 3B1C     		mov	r3, r7
 1868 0186 1733     		add	r3, r3, #23
 1869 0188 1B78     		ldrb	r3, [r3]
 1870 018a 181C     		mov	r0, r3
 1871 018c FFF7FEFF 		bl	responseFinished
 412:.\Modbus.c    ****   j=0;  
 1872              		.loc 1 412 0
 1873 0190 3B1C     		mov	r3, r7
 1874 0192 1733     		add	r3, r3, #23
 1875 0194 0022     		mov	r2, #0
 1876 0196 1A70     		strb	r2, [r3]
 413:.\Modbus.c    **** }
 1877              		.loc 1 413 0
 1878 0198 BD46     		mov	sp, r7
 1879 019a 06B0     		add	sp, sp, #24
 1880              		@ sp needed for prologue
 1881 019c 80BD     		pop	{r7, pc}
 1882              	.L78:
 1883 019e C046     		.align	2
 1884              	.L77:
 1885 01a0 00000000 		.word	received
 1886 01a4 00000000 		.word	response
 1887 01a8 00000000 		.word	holdingReg
 1888              		.cfi_endproc
 1889              	.LFE39:
 1890              		.size	readReg, .-readReg
 1891              		.section	.text.writeReg,"ax",%progbits
 1892              		.align	2
 1893              		.global	writeReg
 1894              		.code	16
 1895              		.thumb_func
 1896              		.type	writeReg, %function
 1897              	writeReg:
 1898              	.LFB40:
 414:.\Modbus.c    **** 
 415:.\Modbus.c    **** void writeReg(void)
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 42


 416:.\Modbus.c    **** {
 1899              		.loc 1 416 0
 1900              		.cfi_startproc
 1901 0000 80B5     		push	{r7, lr}
 1902              	.LCFI18:
 1903              		.cfi_def_cfa_offset 8
 1904              		.cfi_offset 7, -8
 1905              		.cfi_offset 14, -4
 1906 0002 88B0     		sub	sp, sp, #32
 1907              	.LCFI19:
 1908              		.cfi_def_cfa_offset 40
 1909 0004 00AF     		add	r7, sp, #0
 1910              	.LCFI20:
 1911              		.cfi_def_cfa_register 7
 417:.\Modbus.c    **** /******************************************************************************/
 418:.\Modbus.c    **** /* Works out which reg to write and then responds                             */
 419:.\Modbus.c    **** /******************************************************************************/
 420:.\Modbus.c    ****   unsigned int wr_AddressLow = 0;
 1912              		.loc 1 420 0
 1913 0006 0023     		mov	r3, #0
 1914 0008 BB61     		str	r3, [r7, #24]
 421:.\Modbus.c    ****   unsigned int wr_AddressHigh = 0;
 1915              		.loc 1 421 0
 1916 000a 0023     		mov	r3, #0
 1917 000c 7B61     		str	r3, [r7, #20]
 422:.\Modbus.c    ****   unsigned int wr_Address = 0;
 1918              		.loc 1 422 0
 1919 000e 0023     		mov	r3, #0
 1920 0010 3B61     		str	r3, [r7, #16]
 423:.\Modbus.c    **** 
 424:.\Modbus.c    ****   unsigned int wr_valToWrite = 0;
 1921              		.loc 1 424 0
 1922 0012 0023     		mov	r3, #0
 1923 0014 FB60     		str	r3, [r7, #12]
 425:.\Modbus.c    ****   unsigned int wr_valToWriteLow = 0;
 1924              		.loc 1 425 0
 1925 0016 0023     		mov	r3, #0
 1926 0018 BB60     		str	r3, [r7, #8]
 426:.\Modbus.c    ****   unsigned int wr_valToWriteHigh = 0;
 1927              		.loc 1 426 0
 1928 001a 0023     		mov	r3, #0
 1929 001c 7B60     		str	r3, [r7, #4]
 427:.\Modbus.c    **** 
 428:.\Modbus.c    ****   unsigned int crc = 0;
 1930              		.loc 1 428 0
 1931 001e 0023     		mov	r3, #0
 1932 0020 3B60     		str	r3, [r7]
 429:.\Modbus.c    ****   unsigned int i = 0;
 1933              		.loc 1 429 0
 1934 0022 0023     		mov	r3, #0
 1935 0024 FB61     		str	r3, [r7, #28]
 430:.\Modbus.c    **** 
 431:.\Modbus.c    ****   //Combine address bytes
 432:.\Modbus.c    ****   wr_Address = received[2];
 1936              		.loc 1 432 0
 1937 0026 334B     		ldr	r3, .L82
 1938 0028 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 43


 1939 002a 3B61     		str	r3, [r7, #16]
 433:.\Modbus.c    ****   wr_Address <<= 8;
 1940              		.loc 1 433 0
 1941 002c 3B69     		ldr	r3, [r7, #16]
 1942 002e 1B02     		lsl	r3, r3, #8
 1943 0030 3B61     		str	r3, [r7, #16]
 434:.\Modbus.c    ****   wr_Address |= received[3];
 1944              		.loc 1 434 0
 1945 0032 304B     		ldr	r3, .L82
 1946 0034 DB78     		ldrb	r3, [r3, #3]
 1947 0036 3A69     		ldr	r2, [r7, #16]
 1948 0038 1343     		orr	r3, r2
 1949 003a 3B61     		str	r3, [r7, #16]
 435:.\Modbus.c    **** 
 436:.\Modbus.c    ****   wr_AddressLow = received[3]; //useful to store
 1950              		.loc 1 436 0
 1951 003c 2D4B     		ldr	r3, .L82
 1952 003e DB78     		ldrb	r3, [r3, #3]
 1953 0040 BB61     		str	r3, [r7, #24]
 437:.\Modbus.c    ****   wr_AddressHigh = received[2];
 1954              		.loc 1 437 0
 1955 0042 2C4B     		ldr	r3, .L82
 1956 0044 9B78     		ldrb	r3, [r3, #2]
 1957 0046 7B61     		str	r3, [r7, #20]
 438:.\Modbus.c    **** 
 439:.\Modbus.c    ****   //Combine value to write regs
 440:.\Modbus.c    ****   wr_valToWrite = received[4];
 1958              		.loc 1 440 0
 1959 0048 2A4B     		ldr	r3, .L82
 1960 004a 1B79     		ldrb	r3, [r3, #4]
 1961 004c FB60     		str	r3, [r7, #12]
 441:.\Modbus.c    ****   wr_valToWrite <<= 8;
 1962              		.loc 1 441 0
 1963 004e FB68     		ldr	r3, [r7, #12]
 1964 0050 1B02     		lsl	r3, r3, #8
 1965 0052 FB60     		str	r3, [r7, #12]
 442:.\Modbus.c    ****   wr_valToWrite |= received[5];
 1966              		.loc 1 442 0
 1967 0054 274B     		ldr	r3, .L82
 1968 0056 5B79     		ldrb	r3, [r3, #5]
 1969 0058 FA68     		ldr	r2, [r7, #12]
 1970 005a 1343     		orr	r3, r2
 1971 005c FB60     		str	r3, [r7, #12]
 443:.\Modbus.c    **** 
 444:.\Modbus.c    ****   wr_valToWriteLow = received[5];
 1972              		.loc 1 444 0
 1973 005e 254B     		ldr	r3, .L82
 1974 0060 5B79     		ldrb	r3, [r3, #5]
 1975 0062 BB60     		str	r3, [r7, #8]
 445:.\Modbus.c    ****   wr_valToWriteHigh = received[4];
 1976              		.loc 1 445 0
 1977 0064 234B     		ldr	r3, .L82
 1978 0066 1B79     		ldrb	r3, [r3, #4]
 1979 0068 7B60     		str	r3, [r7, #4]
 446:.\Modbus.c    **** 
 447:.\Modbus.c    ****   holdingReg[wr_Address] = wr_valToWrite;
 1980              		.loc 1 447 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 44


 1981 006a 234B     		ldr	r3, .L82+4
 1982 006c 3A69     		ldr	r2, [r7, #16]
 1983 006e 9200     		lsl	r2, r2, #2
 1984 0070 F968     		ldr	r1, [r7, #12]
 1985 0072 D150     		str	r1, [r2, r3]
 448:.\Modbus.c    **** 
 449:.\Modbus.c    ****   response[0] = SlaveAddress;
 1986              		.loc 1 449 0
 1987 0074 214B     		ldr	r3, .L82+8
 1988 0076 0222     		mov	r2, #2
 1989 0078 1A70     		strb	r2, [r3]
 450:.\Modbus.c    ****   response[1] = 0x06;
 1990              		.loc 1 450 0
 1991 007a 204B     		ldr	r3, .L82+8
 1992 007c 0622     		mov	r2, #6
 1993 007e 5A70     		strb	r2, [r3, #1]
 451:.\Modbus.c    ****   response[3] = wr_AddressLow; //2 bytes per reg
 1994              		.loc 1 451 0
 1995 0080 BB69     		ldr	r3, [r7, #24]
 1996 0082 DAB2     		uxtb	r2, r3
 1997 0084 1D4B     		ldr	r3, .L82+8
 1998 0086 DA70     		strb	r2, [r3, #3]
 452:.\Modbus.c    ****   response[2] = wr_AddressHigh;
 1999              		.loc 1 452 0
 2000 0088 7B69     		ldr	r3, [r7, #20]
 2001 008a DAB2     		uxtb	r2, r3
 2002 008c 1B4B     		ldr	r3, .L82+8
 2003 008e 9A70     		strb	r2, [r3, #2]
 453:.\Modbus.c    **** 
 454:.\Modbus.c    **** //TO DO CHECK VALUE IS ACTUALLY WRITTEN//
 455:.\Modbus.c    ****   response[4] = wr_valToWriteHigh;
 2004              		.loc 1 455 0
 2005 0090 7B68     		ldr	r3, [r7, #4]
 2006 0092 DAB2     		uxtb	r2, r3
 2007 0094 194B     		ldr	r3, .L82+8
 2008 0096 1A71     		strb	r2, [r3, #4]
 456:.\Modbus.c    ****   response[5] = wr_valToWriteLow;
 2009              		.loc 1 456 0
 2010 0098 BB68     		ldr	r3, [r7, #8]
 2011 009a DAB2     		uxtb	r2, r3
 2012 009c 174B     		ldr	r3, .L82+8
 2013 009e 5A71     		strb	r2, [r3, #5]
 457:.\Modbus.c    **** 
 458:.\Modbus.c    ****   crc = generateCRC(8);
 2014              		.loc 1 458 0
 2015 00a0 0820     		mov	r0, #8
 2016 00a2 FFF7FEFF 		bl	generateCRC
 2017 00a6 031C     		mov	r3, r0
 2018 00a8 3B60     		str	r3, [r7]
 459:.\Modbus.c    **** 
 460:.\Modbus.c    ****   response[6] = crc >> 8;
 2019              		.loc 1 460 0
 2020 00aa 3B68     		ldr	r3, [r7]
 2021 00ac 1B0A     		lsr	r3, r3, #8
 2022 00ae DAB2     		uxtb	r2, r3
 2023 00b0 124B     		ldr	r3, .L82+8
 2024 00b2 9A71     		strb	r2, [r3, #6]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 45


 461:.\Modbus.c    ****   response[7] = crc;
 2025              		.loc 1 461 0
 2026 00b4 3B68     		ldr	r3, [r7]
 2027 00b6 DAB2     		uxtb	r2, r3
 2028 00b8 104B     		ldr	r3, .L82+8
 2029 00ba DA71     		strb	r2, [r3, #7]
 462:.\Modbus.c    **** 
 463:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 2030              		.loc 1 463 0
 2031 00bc 0120     		mov	r0, #1
 2032 00be FFF7FEFF 		bl	writeEnable_Write
 464:.\Modbus.c    **** 
 465:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2033              		.loc 1 465 0
 2034 00c2 0023     		mov	r3, #0
 2035 00c4 FB61     		str	r3, [r7, #28]
 2036 00c6 09E0     		b	.L80
 2037              	.L81:
 466:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 2038              		.loc 1 466 0 discriminator 2
 2039 00c8 0C4A     		ldr	r2, .L82+8
 2040 00ca FB69     		ldr	r3, [r7, #28]
 2041 00cc D318     		add	r3, r2, r3
 2042 00ce 1B78     		ldrb	r3, [r3]
 2043 00d0 181C     		mov	r0, r3
 2044 00d2 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 465:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2045              		.loc 1 465 0 discriminator 2
 2046 00d6 FB69     		ldr	r3, [r7, #28]
 2047 00d8 0133     		add	r3, r3, #1
 2048 00da FB61     		str	r3, [r7, #28]
 2049              	.L80:
 465:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2050              		.loc 1 465 0 is_stmt 0 discriminator 1
 2051 00dc FB69     		ldr	r3, [r7, #28]
 2052 00de 092B     		cmp	r3, #9
 2053 00e0 F2D1     		bne	.L81
 467:.\Modbus.c    ****   }
 468:.\Modbus.c    ****   responseFinished(9);
 2054              		.loc 1 468 0 is_stmt 1
 2055 00e2 0920     		mov	r0, #9
 2056 00e4 FFF7FEFF 		bl	responseFinished
 469:.\Modbus.c    ****   i=0;  
 2057              		.loc 1 469 0
 2058 00e8 0023     		mov	r3, #0
 2059 00ea FB61     		str	r3, [r7, #28]
 470:.\Modbus.c    **** }
 2060              		.loc 1 470 0
 2061 00ec BD46     		mov	sp, r7
 2062 00ee 08B0     		add	sp, sp, #32
 2063              		@ sp needed for prologue
 2064 00f0 80BD     		pop	{r7, pc}
 2065              	.L83:
 2066 00f2 C046     		.align	2
 2067              	.L82:
 2068 00f4 00000000 		.word	received
 2069 00f8 00000000 		.word	holdingReg
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 46


 2070 00fc 00000000 		.word	response
 2071              		.cfi_endproc
 2072              	.LFE40:
 2073              		.size	writeReg, .-writeReg
 2074              		.section	.text.writeMultipleRegs,"ax",%progbits
 2075              		.align	2
 2076              		.global	writeMultipleRegs
 2077              		.code	16
 2078              		.thumb_func
 2079              		.type	writeMultipleRegs, %function
 2080              	writeMultipleRegs:
 2081              	.LFB41:
 471:.\Modbus.c    **** 
 472:.\Modbus.c    **** void writeMultipleRegs(void)
 473:.\Modbus.c    **** {
 2082              		.loc 1 473 0
 2083              		.cfi_startproc
 2084 0000 80B5     		push	{r7, lr}
 2085              	.LCFI21:
 2086              		.cfi_def_cfa_offset 8
 2087              		.cfi_offset 7, -8
 2088              		.cfi_offset 14, -4
 2089 0002 8CB0     		sub	sp, sp, #48
 2090              	.LCFI22:
 2091              		.cfi_def_cfa_offset 56
 2092 0004 00AF     		add	r7, sp, #0
 2093              	.LCFI23:
 2094              		.cfi_def_cfa_register 7
 474:.\Modbus.c    **** /******************************************************************************/
 475:.\Modbus.c    **** /* Works out which reg to write and then responds                             */
 476:.\Modbus.c    **** /******************************************************************************/
 477:.\Modbus.c    ****   unsigned int wmr_Address = 0;
 2095              		.loc 1 477 0
 2096 0006 0023     		mov	r3, #0
 2097 0008 7B62     		str	r3, [r7, #36]
 478:.\Modbus.c    ****   unsigned int wmr_AddressHigh = 0;
 2098              		.loc 1 478 0
 2099 000a 0023     		mov	r3, #0
 2100 000c 3B62     		str	r3, [r7, #32]
 479:.\Modbus.c    ****   unsigned int wmr_AddressLow = 0;
 2101              		.loc 1 479 0
 2102 000e 0023     		mov	r3, #0
 2103 0010 FB61     		str	r3, [r7, #28]
 480:.\Modbus.c    ****   unsigned int wmr_numRegs = 0;
 2104              		.loc 1 480 0
 2105 0012 0023     		mov	r3, #0
 2106 0014 BB61     		str	r3, [r7, #24]
 481:.\Modbus.c    ****   unsigned int wmr_numRegsHigh = 0;
 2107              		.loc 1 481 0
 2108 0016 0023     		mov	r3, #0
 2109 0018 7B61     		str	r3, [r7, #20]
 482:.\Modbus.c    ****   unsigned int wmr_numRegsLow = 0;
 2110              		.loc 1 482 0
 2111 001a 0023     		mov	r3, #0
 2112 001c 3B61     		str	r3, [r7, #16]
 483:.\Modbus.c    ****   unsigned int wmr_numBytes = 0;
 2113              		.loc 1 483 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 47


 2114 001e 0023     		mov	r3, #0
 2115 0020 FB60     		str	r3, [r7, #12]
 484:.\Modbus.c    ****   unsigned int wmr_numBytesTST = 0;
 2116              		.loc 1 484 0
 2117 0022 0023     		mov	r3, #0
 2118 0024 BB60     		str	r3, [r7, #8]
 485:.\Modbus.c    ****   unsigned int valToWrite = 0;
 2119              		.loc 1 485 0
 2120 0026 0023     		mov	r3, #0
 2121 0028 7B60     		str	r3, [r7, #4]
 486:.\Modbus.c    **** //  unsigned int valToWriteHigh = 0;
 487:.\Modbus.c    **** //  unsigned int valToWriteLow = 0;
 488:.\Modbus.c    **** 
 489:.\Modbus.c    ****   unsigned char j = 0;
 2122              		.loc 1 489 0
 2123 002a 3B1C     		mov	r3, r7
 2124 002c 2F33     		add	r3, r3, #47
 2125 002e 0022     		mov	r2, #0
 2126 0030 1A70     		strb	r2, [r3]
 490:.\Modbus.c    ****   unsigned int crc = 0;
 2127              		.loc 1 490 0
 2128 0032 0023     		mov	r3, #0
 2129 0034 3B60     		str	r3, [r7]
 491:.\Modbus.c    ****   unsigned int i = 0;
 2130              		.loc 1 491 0
 2131 0036 0023     		mov	r3, #0
 2132 0038 BB62     		str	r3, [r7, #40]
 492:.\Modbus.c    **** 
 493:.\Modbus.c    ****   //Combine address bytes
 494:.\Modbus.c    ****   wmr_Address = received[2];
 2133              		.loc 1 494 0
 2134 003a 4F4B     		ldr	r3, .L89
 2135 003c 9B78     		ldrb	r3, [r3, #2]
 2136 003e 7B62     		str	r3, [r7, #36]
 495:.\Modbus.c    ****   wmr_Address <<= 8;
 2137              		.loc 1 495 0
 2138 0040 7B6A     		ldr	r3, [r7, #36]
 2139 0042 1B02     		lsl	r3, r3, #8
 2140 0044 7B62     		str	r3, [r7, #36]
 496:.\Modbus.c    ****   //add address high and low bits
 497:.\Modbus.c    ****   wmr_Address |= received[3];
 2141              		.loc 1 497 0
 2142 0046 4C4B     		ldr	r3, .L89
 2143 0048 DB78     		ldrb	r3, [r3, #3]
 2144 004a 7A6A     		ldr	r2, [r7, #36]
 2145 004c 1343     		orr	r3, r2
 2146 004e 7B62     		str	r3, [r7, #36]
 498:.\Modbus.c    ****   wmr_AddressHigh = received[2];
 2147              		.loc 1 498 0
 2148 0050 494B     		ldr	r3, .L89
 2149 0052 9B78     		ldrb	r3, [r3, #2]
 2150 0054 3B62     		str	r3, [r7, #32]
 499:.\Modbus.c    ****   wmr_AddressLow = received[3];
 2151              		.loc 1 499 0
 2152 0056 484B     		ldr	r3, .L89
 2153 0058 DB78     		ldrb	r3, [r3, #3]
 2154 005a FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 48


 500:.\Modbus.c    **** 
 501:.\Modbus.c    **** 
 502:.\Modbus.c    ****   //Combine number of regs bytes
 503:.\Modbus.c    ****   wmr_numRegs = received[4];
 2155              		.loc 1 503 0
 2156 005c 464B     		ldr	r3, .L89
 2157 005e 1B79     		ldrb	r3, [r3, #4]
 2158 0060 BB61     		str	r3, [r7, #24]
 504:.\Modbus.c    ****   wmr_numRegs <<= 8;
 2159              		.loc 1 504 0
 2160 0062 BB69     		ldr	r3, [r7, #24]
 2161 0064 1B02     		lsl	r3, r3, #8
 2162 0066 BB61     		str	r3, [r7, #24]
 505:.\Modbus.c    ****   wmr_numRegs |= received[5];
 2163              		.loc 1 505 0
 2164 0068 434B     		ldr	r3, .L89
 2165 006a 5B79     		ldrb	r3, [r3, #5]
 2166 006c BA69     		ldr	r2, [r7, #24]
 2167 006e 1343     		orr	r3, r2
 2168 0070 BB61     		str	r3, [r7, #24]
 506:.\Modbus.c    ****   wmr_numRegsHigh = received[4];
 2169              		.loc 1 506 0
 2170 0072 414B     		ldr	r3, .L89
 2171 0074 1B79     		ldrb	r3, [r3, #4]
 2172 0076 7B61     		str	r3, [r7, #20]
 507:.\Modbus.c    ****   wmr_numRegsLow = received[5];
 2173              		.loc 1 507 0
 2174 0078 3F4B     		ldr	r3, .L89
 2175 007a 5B79     		ldrb	r3, [r3, #5]
 2176 007c 3B61     		str	r3, [r7, #16]
 508:.\Modbus.c    **** 
 509:.\Modbus.c    ****   wmr_numBytes = received[6];
 2177              		.loc 1 509 0
 2178 007e 3E4B     		ldr	r3, .L89
 2179 0080 9B79     		ldrb	r3, [r3, #6]
 2180 0082 FB60     		str	r3, [r7, #12]
 510:.\Modbus.c    **** 
 511:.\Modbus.c    ****   j = 7;
 2181              		.loc 1 511 0
 2182 0084 3B1C     		mov	r3, r7
 2183 0086 2F33     		add	r3, r3, #47
 2184 0088 0722     		mov	r2, #7
 2185 008a 1A70     		strb	r2, [r3]
 512:.\Modbus.c    **** 
 513:.\Modbus.c    ****   //the following lines haven't been tested yet but were suggested
 514:.\Modbus.c    ****   //in a pull request, If you have any problems revert back to wmr_numBytes 
 515:.\Modbus.c    ****   //in the for loop from TST (the lines commented below)
 516:.\Modbus.c    **** 
 517:.\Modbus.c    ****   wmr_numBytesTST = wmr_numBytes /2;   
 2186              		.loc 1 517 0
 2187 008c FB68     		ldr	r3, [r7, #12]
 2188 008e 5B08     		lsr	r3, r3, #1
 2189 0090 BB60     		str	r3, [r7, #8]
 518:.\Modbus.c    **** 
 519:.\Modbus.c    ****   for(i=0;i<wmr_numBytesTST;i++)
 2190              		.loc 1 519 0
 2191 0092 0023     		mov	r3, #0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 49


 2192 0094 BB62     		str	r3, [r7, #40]
 2193 0096 28E0     		b	.L85
 2194              	.L86:
 520:.\Modbus.c    ****   {
 521:.\Modbus.c    ****     valToWrite = received[j];
 2195              		.loc 1 521 0 discriminator 2
 2196 0098 3B1C     		mov	r3, r7
 2197 009a 2F33     		add	r3, r3, #47
 2198 009c 1B78     		ldrb	r3, [r3]
 2199 009e 364A     		ldr	r2, .L89
 2200 00a0 D35C     		ldrb	r3, [r2, r3]
 2201 00a2 7B60     		str	r3, [r7, #4]
 522:.\Modbus.c    ****     valToWrite <<= 8;
 2202              		.loc 1 522 0 discriminator 2
 2203 00a4 7B68     		ldr	r3, [r7, #4]
 2204 00a6 1B02     		lsl	r3, r3, #8
 2205 00a8 7B60     		str	r3, [r7, #4]
 523:.\Modbus.c    ****     j++;
 2206              		.loc 1 523 0 discriminator 2
 2207 00aa 3B1C     		mov	r3, r7
 2208 00ac 2F33     		add	r3, r3, #47
 2209 00ae 3A1C     		mov	r2, r7
 2210 00b0 2F32     		add	r2, r2, #47
 2211 00b2 1278     		ldrb	r2, [r2]
 2212 00b4 0132     		add	r2, r2, #1
 2213 00b6 1A70     		strb	r2, [r3]
 524:.\Modbus.c    ****     valToWrite |= received[j];
 2214              		.loc 1 524 0 discriminator 2
 2215 00b8 3B1C     		mov	r3, r7
 2216 00ba 2F33     		add	r3, r3, #47
 2217 00bc 1B78     		ldrb	r3, [r3]
 2218 00be 2E4A     		ldr	r2, .L89
 2219 00c0 D35C     		ldrb	r3, [r2, r3]
 2220 00c2 7A68     		ldr	r2, [r7, #4]
 2221 00c4 1343     		orr	r3, r2
 2222 00c6 7B60     		str	r3, [r7, #4]
 525:.\Modbus.c    ****     j++;
 2223              		.loc 1 525 0 discriminator 2
 2224 00c8 3B1C     		mov	r3, r7
 2225 00ca 2F33     		add	r3, r3, #47
 2226 00cc 3A1C     		mov	r2, r7
 2227 00ce 2F32     		add	r2, r2, #47
 2228 00d0 1278     		ldrb	r2, [r2]
 2229 00d2 0132     		add	r2, r2, #1
 2230 00d4 1A70     		strb	r2, [r3]
 526:.\Modbus.c    **** 
 527:.\Modbus.c    ****     holdingReg[wmr_Address + i] = valToWrite;
 2231              		.loc 1 527 0 discriminator 2
 2232 00d6 7A6A     		ldr	r2, [r7, #36]
 2233 00d8 BB6A     		ldr	r3, [r7, #40]
 2234 00da D218     		add	r2, r2, r3
 2235 00dc 274B     		ldr	r3, .L89+4
 2236 00de 9200     		lsl	r2, r2, #2
 2237 00e0 7968     		ldr	r1, [r7, #4]
 2238 00e2 D150     		str	r1, [r2, r3]
 519:.\Modbus.c    ****   for(i=0;i<wmr_numBytesTST;i++)
 2239              		.loc 1 519 0 discriminator 2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 50


 2240 00e4 BB6A     		ldr	r3, [r7, #40]
 2241 00e6 0133     		add	r3, r3, #1
 2242 00e8 BB62     		str	r3, [r7, #40]
 2243              	.L85:
 519:.\Modbus.c    ****   for(i=0;i<wmr_numBytesTST;i++)
 2244              		.loc 1 519 0 is_stmt 0 discriminator 1
 2245 00ea BA6A     		ldr	r2, [r7, #40]
 2246 00ec BB68     		ldr	r3, [r7, #8]
 2247 00ee 9A42     		cmp	r2, r3
 2248 00f0 D2D3     		bcc	.L86
 528:.\Modbus.c    ****   }
 529:.\Modbus.c    **** 
 530:.\Modbus.c    ****   //for(i=0;i<wmr_numBytes;i++)
 531:.\Modbus.c    ****   //{
 532:.\Modbus.c    ****   // valToWrite = received[j];
 533:.\Modbus.c    ****   //  valToWrite <<= 8;
 534:.\Modbus.c    ****   //  j++;
 535:.\Modbus.c    ****   //  valToWrite |= received[j];
 536:.\Modbus.c    ****   //  j++;
 537:.\Modbus.c    **** 
 538:.\Modbus.c    ****   //  holdingReg[wmr_Address + i] = valToWrite;
 539:.\Modbus.c    ****   //}
 540:.\Modbus.c    **** 
 541:.\Modbus.c    **** 
 542:.\Modbus.c    ****   response[0] = SlaveAddress;
 2249              		.loc 1 542 0 is_stmt 1
 2250 00f2 234B     		ldr	r3, .L89+8
 2251 00f4 0222     		mov	r2, #2
 2252 00f6 1A70     		strb	r2, [r3]
 543:.\Modbus.c    ****   response[1] = 0x10;
 2253              		.loc 1 543 0
 2254 00f8 214B     		ldr	r3, .L89+8
 2255 00fa 1022     		mov	r2, #16
 2256 00fc 5A70     		strb	r2, [r3, #1]
 544:.\Modbus.c    ****   response[2] = wmr_AddressHigh;
 2257              		.loc 1 544 0
 2258 00fe 3B6A     		ldr	r3, [r7, #32]
 2259 0100 DAB2     		uxtb	r2, r3
 2260 0102 1F4B     		ldr	r3, .L89+8
 2261 0104 9A70     		strb	r2, [r3, #2]
 545:.\Modbus.c    ****   response[3] = wmr_AddressLow;
 2262              		.loc 1 545 0
 2263 0106 FB69     		ldr	r3, [r7, #28]
 2264 0108 DAB2     		uxtb	r2, r3
 2265 010a 1D4B     		ldr	r3, .L89+8
 2266 010c DA70     		strb	r2, [r3, #3]
 546:.\Modbus.c    ****   response[4] = wmr_numRegsHigh;
 2267              		.loc 1 546 0
 2268 010e 7B69     		ldr	r3, [r7, #20]
 2269 0110 DAB2     		uxtb	r2, r3
 2270 0112 1B4B     		ldr	r3, .L89+8
 2271 0114 1A71     		strb	r2, [r3, #4]
 547:.\Modbus.c    ****   response[5] = wmr_numRegsLow;
 2272              		.loc 1 547 0
 2273 0116 3B69     		ldr	r3, [r7, #16]
 2274 0118 DAB2     		uxtb	r2, r3
 2275 011a 194B     		ldr	r3, .L89+8
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 51


 2276 011c 5A71     		strb	r2, [r3, #5]
 548:.\Modbus.c    **** 
 549:.\Modbus.c    ****   crc = generateCRC(8);
 2277              		.loc 1 549 0
 2278 011e 0820     		mov	r0, #8
 2279 0120 FFF7FEFF 		bl	generateCRC
 2280 0124 031C     		mov	r3, r0
 2281 0126 3B60     		str	r3, [r7]
 550:.\Modbus.c    **** 
 551:.\Modbus.c    ****   response[6] = crc >> 8;
 2282              		.loc 1 551 0
 2283 0128 3B68     		ldr	r3, [r7]
 2284 012a 1B0A     		lsr	r3, r3, #8
 2285 012c DAB2     		uxtb	r2, r3
 2286 012e 144B     		ldr	r3, .L89+8
 2287 0130 9A71     		strb	r2, [r3, #6]
 552:.\Modbus.c    ****   response[7] = crc;
 2288              		.loc 1 552 0
 2289 0132 3B68     		ldr	r3, [r7]
 2290 0134 DAB2     		uxtb	r2, r3
 2291 0136 124B     		ldr	r3, .L89+8
 2292 0138 DA71     		strb	r2, [r3, #7]
 553:.\Modbus.c    **** 
 554:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 2293              		.loc 1 554 0
 2294 013a 0120     		mov	r0, #1
 2295 013c FFF7FEFF 		bl	writeEnable_Write
 555:.\Modbus.c    **** 
 556:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2296              		.loc 1 556 0
 2297 0140 0023     		mov	r3, #0
 2298 0142 BB62     		str	r3, [r7, #40]
 2299 0144 09E0     		b	.L87
 2300              	.L88:
 557:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 2301              		.loc 1 557 0 discriminator 2
 2302 0146 0E4A     		ldr	r2, .L89+8
 2303 0148 BB6A     		ldr	r3, [r7, #40]
 2304 014a D318     		add	r3, r2, r3
 2305 014c 1B78     		ldrb	r3, [r3]
 2306 014e 181C     		mov	r0, r3
 2307 0150 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 556:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2308              		.loc 1 556 0 discriminator 2
 2309 0154 BB6A     		ldr	r3, [r7, #40]
 2310 0156 0133     		add	r3, r3, #1
 2311 0158 BB62     		str	r3, [r7, #40]
 2312              	.L87:
 556:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2313              		.loc 1 556 0 is_stmt 0 discriminator 1
 2314 015a BB6A     		ldr	r3, [r7, #40]
 2315 015c 092B     		cmp	r3, #9
 2316 015e F2D1     		bne	.L88
 558:.\Modbus.c    ****   }
 559:.\Modbus.c    ****   responseFinished(9);
 2317              		.loc 1 559 0 is_stmt 1
 2318 0160 0920     		mov	r0, #9
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 52


 2319 0162 FFF7FEFF 		bl	responseFinished
 560:.\Modbus.c    ****   i=0;  
 2320              		.loc 1 560 0
 2321 0166 0023     		mov	r3, #0
 2322 0168 BB62     		str	r3, [r7, #40]
 561:.\Modbus.c    **** 
 562:.\Modbus.c    ****   j=0;
 2323              		.loc 1 562 0
 2324 016a 3B1C     		mov	r3, r7
 2325 016c 2F33     		add	r3, r3, #47
 2326 016e 0022     		mov	r2, #0
 2327 0170 1A70     		strb	r2, [r3]
 563:.\Modbus.c    ****   
 564:.\Modbus.c    **** }
 2328              		.loc 1 564 0
 2329 0172 BD46     		mov	sp, r7
 2330 0174 0CB0     		add	sp, sp, #48
 2331              		@ sp needed for prologue
 2332 0176 80BD     		pop	{r7, pc}
 2333              	.L90:
 2334              		.align	2
 2335              	.L89:
 2336 0178 00000000 		.word	received
 2337 017c 00000000 		.word	holdingReg
 2338 0180 00000000 		.word	response
 2339              		.cfi_endproc
 2340              	.LFE41:
 2341              		.size	writeMultipleRegs, .-writeMultipleRegs
 2342              		.section	.text.writeCoil,"ax",%progbits
 2343              		.align	2
 2344              		.global	writeCoil
 2345              		.code	16
 2346              		.thumb_func
 2347              		.type	writeCoil, %function
 2348              	writeCoil:
 2349              	.LFB42:
 565:.\Modbus.c    **** 
 566:.\Modbus.c    **** 
 567:.\Modbus.c    **** void writeCoil(void)
 568:.\Modbus.c    **** {
 2350              		.loc 1 568 0
 2351              		.cfi_startproc
 2352 0000 80B5     		push	{r7, lr}
 2353              	.LCFI24:
 2354              		.cfi_def_cfa_offset 8
 2355              		.cfi_offset 7, -8
 2356              		.cfi_offset 14, -4
 2357 0002 88B0     		sub	sp, sp, #32
 2358              	.LCFI25:
 2359              		.cfi_def_cfa_offset 40
 2360 0004 00AF     		add	r7, sp, #0
 2361              	.LCFI26:
 2362              		.cfi_def_cfa_register 7
 569:.\Modbus.c    **** /******************************************************************************/
 570:.\Modbus.c    **** /* Writes to a coil and then responds                                         */
 571:.\Modbus.c    **** /******************************************************************************/
 572:.\Modbus.c    ****   unsigned int wc_AddressLow = 0;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 53


 2363              		.loc 1 572 0
 2364 0006 0023     		mov	r3, #0
 2365 0008 BB61     		str	r3, [r7, #24]
 573:.\Modbus.c    ****   unsigned int wc_AddressHigh = 0;
 2366              		.loc 1 573 0
 2367 000a 0023     		mov	r3, #0
 2368 000c 7B61     		str	r3, [r7, #20]
 574:.\Modbus.c    ****   unsigned int wc_Address = 0;
 2369              		.loc 1 574 0
 2370 000e 0023     		mov	r3, #0
 2371 0010 3B61     		str	r3, [r7, #16]
 575:.\Modbus.c    **** 
 576:.\Modbus.c    ****   unsigned int wc_valToWrite = 0;
 2372              		.loc 1 576 0
 2373 0012 0023     		mov	r3, #0
 2374 0014 FB60     		str	r3, [r7, #12]
 577:.\Modbus.c    ****   unsigned int wc_valToWriteLow = 0;
 2375              		.loc 1 577 0
 2376 0016 0023     		mov	r3, #0
 2377 0018 BB60     		str	r3, [r7, #8]
 578:.\Modbus.c    ****   unsigned int wc_valToWriteHigh = 0;
 2378              		.loc 1 578 0
 2379 001a 0023     		mov	r3, #0
 2380 001c 7B60     		str	r3, [r7, #4]
 579:.\Modbus.c    ****   int i = 0;
 2381              		.loc 1 579 0
 2382 001e 0023     		mov	r3, #0
 2383 0020 FB61     		str	r3, [r7, #28]
 580:.\Modbus.c    ****   unsigned int crc = 0;
 2384              		.loc 1 580 0
 2385 0022 0023     		mov	r3, #0
 2386 0024 3B60     		str	r3, [r7]
 581:.\Modbus.c    **** 
 582:.\Modbus.c    ****   //Combine address bytes
 583:.\Modbus.c    ****   wc_Address = received[2];
 2387              		.loc 1 583 0
 2388 0026 374B     		ldr	r3, .L96
 2389 0028 9B78     		ldrb	r3, [r3, #2]
 2390 002a 3B61     		str	r3, [r7, #16]
 584:.\Modbus.c    ****   wc_Address <<= 8;
 2391              		.loc 1 584 0
 2392 002c 3B69     		ldr	r3, [r7, #16]
 2393 002e 1B02     		lsl	r3, r3, #8
 2394 0030 3B61     		str	r3, [r7, #16]
 585:.\Modbus.c    ****   wc_Address |= received[3];
 2395              		.loc 1 585 0
 2396 0032 344B     		ldr	r3, .L96
 2397 0034 DB78     		ldrb	r3, [r3, #3]
 2398 0036 3A69     		ldr	r2, [r7, #16]
 2399 0038 1343     		orr	r3, r2
 2400 003a 3B61     		str	r3, [r7, #16]
 586:.\Modbus.c    **** 
 587:.\Modbus.c    ****   wc_AddressLow = received[3]; //useful to store
 2401              		.loc 1 587 0
 2402 003c 314B     		ldr	r3, .L96
 2403 003e DB78     		ldrb	r3, [r3, #3]
 2404 0040 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 54


 588:.\Modbus.c    ****   wc_AddressHigh = received[2];
 2405              		.loc 1 588 0
 2406 0042 304B     		ldr	r3, .L96
 2407 0044 9B78     		ldrb	r3, [r3, #2]
 2408 0046 7B61     		str	r3, [r7, #20]
 589:.\Modbus.c    **** 
 590:.\Modbus.c    ****   //Combine value to write regs
 591:.\Modbus.c    ****   wc_valToWrite = received[4];
 2409              		.loc 1 591 0
 2410 0048 2E4B     		ldr	r3, .L96
 2411 004a 1B79     		ldrb	r3, [r3, #4]
 2412 004c FB60     		str	r3, [r7, #12]
 592:.\Modbus.c    ****   wc_valToWrite <<= 8;
 2413              		.loc 1 592 0
 2414 004e FB68     		ldr	r3, [r7, #12]
 2415 0050 1B02     		lsl	r3, r3, #8
 2416 0052 FB60     		str	r3, [r7, #12]
 593:.\Modbus.c    ****   wc_valToWrite |= received[5];
 2417              		.loc 1 593 0
 2418 0054 2B4B     		ldr	r3, .L96
 2419 0056 5B79     		ldrb	r3, [r3, #5]
 2420 0058 FA68     		ldr	r2, [r7, #12]
 2421 005a 1343     		orr	r3, r2
 2422 005c FB60     		str	r3, [r7, #12]
 594:.\Modbus.c    **** 
 595:.\Modbus.c    ****   wc_valToWriteLow = received[5];
 2423              		.loc 1 595 0
 2424 005e 294B     		ldr	r3, .L96
 2425 0060 5B79     		ldrb	r3, [r3, #5]
 2426 0062 BB60     		str	r3, [r7, #8]
 596:.\Modbus.c    ****   wc_valToWriteHigh = received[4];
 2427              		.loc 1 596 0
 2428 0064 274B     		ldr	r3, .L96
 2429 0066 1B79     		ldrb	r3, [r3, #4]
 2430 0068 7B60     		str	r3, [r7, #4]
 597:.\Modbus.c    **** 
 598:.\Modbus.c    ****   if(wc_valToWrite){
 2431              		.loc 1 598 0
 2432 006a FB68     		ldr	r3, [r7, #12]
 2433 006c 002B     		cmp	r3, #0
 2434 006e 05D0     		beq	.L92
 599:.\Modbus.c    ****     coils[wc_Address] = 0xFF;
 2435              		.loc 1 599 0
 2436 0070 254A     		ldr	r2, .L96+4
 2437 0072 3B69     		ldr	r3, [r7, #16]
 2438 0074 D318     		add	r3, r2, r3
 2439 0076 FF22     		mov	r2, #255
 2440 0078 1A70     		strb	r2, [r3]
 2441 007a 04E0     		b	.L93
 2442              	.L92:
 600:.\Modbus.c    ****   }
 601:.\Modbus.c    ****   else{
 602:.\Modbus.c    ****     coils[wc_Address] = 0x00;
 2443              		.loc 1 602 0
 2444 007c 224A     		ldr	r2, .L96+4
 2445 007e 3B69     		ldr	r3, [r7, #16]
 2446 0080 D318     		add	r3, r2, r3
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 55


 2447 0082 0022     		mov	r2, #0
 2448 0084 1A70     		strb	r2, [r3]
 2449              	.L93:
 603:.\Modbus.c    ****   }
 604:.\Modbus.c    **** 
 605:.\Modbus.c    ****   response[0] = SlaveAddress;
 2450              		.loc 1 605 0
 2451 0086 214B     		ldr	r3, .L96+8
 2452 0088 0222     		mov	r2, #2
 2453 008a 1A70     		strb	r2, [r3]
 606:.\Modbus.c    ****   response[1] = 0x05;
 2454              		.loc 1 606 0
 2455 008c 1F4B     		ldr	r3, .L96+8
 2456 008e 0522     		mov	r2, #5
 2457 0090 5A70     		strb	r2, [r3, #1]
 607:.\Modbus.c    ****   response[3] = wc_AddressLow; //2 bytes per reg
 2458              		.loc 1 607 0
 2459 0092 BB69     		ldr	r3, [r7, #24]
 2460 0094 DAB2     		uxtb	r2, r3
 2461 0096 1D4B     		ldr	r3, .L96+8
 2462 0098 DA70     		strb	r2, [r3, #3]
 608:.\Modbus.c    ****   response[2] = wc_AddressHigh;
 2463              		.loc 1 608 0
 2464 009a 7B69     		ldr	r3, [r7, #20]
 2465 009c DAB2     		uxtb	r2, r3
 2466 009e 1B4B     		ldr	r3, .L96+8
 2467 00a0 9A70     		strb	r2, [r3, #2]
 609:.\Modbus.c    **** 
 610:.\Modbus.c    **** //TO DO CHECK VALUE IS ACTUALLY WRITTEN//
 611:.\Modbus.c    ****   response[4] = wc_valToWriteHigh;
 2468              		.loc 1 611 0
 2469 00a2 7B68     		ldr	r3, [r7, #4]
 2470 00a4 DAB2     		uxtb	r2, r3
 2471 00a6 194B     		ldr	r3, .L96+8
 2472 00a8 1A71     		strb	r2, [r3, #4]
 612:.\Modbus.c    ****   response[5] = wc_valToWriteLow;
 2473              		.loc 1 612 0
 2474 00aa BB68     		ldr	r3, [r7, #8]
 2475 00ac DAB2     		uxtb	r2, r3
 2476 00ae 174B     		ldr	r3, .L96+8
 2477 00b0 5A71     		strb	r2, [r3, #5]
 613:.\Modbus.c    **** 
 614:.\Modbus.c    ****   crc = generateCRC(8);
 2478              		.loc 1 614 0
 2479 00b2 0820     		mov	r0, #8
 2480 00b4 FFF7FEFF 		bl	generateCRC
 2481 00b8 031C     		mov	r3, r0
 2482 00ba 3B60     		str	r3, [r7]
 615:.\Modbus.c    **** 
 616:.\Modbus.c    ****   response[6] = crc >> 8;
 2483              		.loc 1 616 0
 2484 00bc 3B68     		ldr	r3, [r7]
 2485 00be 1B0A     		lsr	r3, r3, #8
 2486 00c0 DAB2     		uxtb	r2, r3
 2487 00c2 124B     		ldr	r3, .L96+8
 2488 00c4 9A71     		strb	r2, [r3, #6]
 617:.\Modbus.c    ****   response[7] = crc;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 56


 2489              		.loc 1 617 0
 2490 00c6 3B68     		ldr	r3, [r7]
 2491 00c8 DAB2     		uxtb	r2, r3
 2492 00ca 104B     		ldr	r3, .L96+8
 2493 00cc DA71     		strb	r2, [r3, #7]
 618:.\Modbus.c    **** 
 619:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 2494              		.loc 1 619 0
 2495 00ce 0120     		mov	r0, #1
 2496 00d0 FFF7FEFF 		bl	writeEnable_Write
 620:.\Modbus.c    **** 
 621:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2497              		.loc 1 621 0
 2498 00d4 0023     		mov	r3, #0
 2499 00d6 FB61     		str	r3, [r7, #28]
 2500 00d8 09E0     		b	.L94
 2501              	.L95:
 622:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 2502              		.loc 1 622 0 discriminator 2
 2503 00da 0C4A     		ldr	r2, .L96+8
 2504 00dc FB69     		ldr	r3, [r7, #28]
 2505 00de D318     		add	r3, r2, r3
 2506 00e0 1B78     		ldrb	r3, [r3]
 2507 00e2 181C     		mov	r0, r3
 2508 00e4 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 621:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2509              		.loc 1 621 0 discriminator 2
 2510 00e8 FB69     		ldr	r3, [r7, #28]
 2511 00ea 0133     		add	r3, r3, #1
 2512 00ec FB61     		str	r3, [r7, #28]
 2513              	.L94:
 621:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2514              		.loc 1 621 0 is_stmt 0 discriminator 1
 2515 00ee FB69     		ldr	r3, [r7, #28]
 2516 00f0 092B     		cmp	r3, #9
 2517 00f2 F2D1     		bne	.L95
 623:.\Modbus.c    ****   }
 624:.\Modbus.c    ****   responseFinished(10);
 2518              		.loc 1 624 0 is_stmt 1
 2519 00f4 0A20     		mov	r0, #10
 2520 00f6 FFF7FEFF 		bl	responseFinished
 625:.\Modbus.c    ****   i=0;  
 2521              		.loc 1 625 0
 2522 00fa 0023     		mov	r3, #0
 2523 00fc FB61     		str	r3, [r7, #28]
 626:.\Modbus.c    **** }
 2524              		.loc 1 626 0
 2525 00fe BD46     		mov	sp, r7
 2526 0100 08B0     		add	sp, sp, #32
 2527              		@ sp needed for prologue
 2528 0102 80BD     		pop	{r7, pc}
 2529              	.L97:
 2530              		.align	2
 2531              	.L96:
 2532 0104 00000000 		.word	received
 2533 0108 00000000 		.word	coils
 2534 010c 00000000 		.word	response
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 57


 2535              		.cfi_endproc
 2536              	.LFE42:
 2537              		.size	writeCoil, .-writeCoil
 2538              		.section	.text.writeMultipleCoils,"ax",%progbits
 2539              		.align	2
 2540              		.global	writeMultipleCoils
 2541              		.code	16
 2542              		.thumb_func
 2543              		.type	writeMultipleCoils, %function
 2544              	writeMultipleCoils:
 2545              	.LFB43:
 627:.\Modbus.c    **** 
 628:.\Modbus.c    **** void writeMultipleCoils(void)
 629:.\Modbus.c    **** {
 2546              		.loc 1 629 0
 2547              		.cfi_startproc
 2548 0000 80B5     		push	{r7, lr}
 2549              	.LCFI27:
 2550              		.cfi_def_cfa_offset 8
 2551              		.cfi_offset 7, -8
 2552              		.cfi_offset 14, -4
 2553 0002 8AB0     		sub	sp, sp, #40
 2554              	.LCFI28:
 2555              		.cfi_def_cfa_offset 48
 2556 0004 00AF     		add	r7, sp, #0
 2557              	.LCFI29:
 2558              		.cfi_def_cfa_register 7
 630:.\Modbus.c    **** /******************************************************************************/
 631:.\Modbus.c    **** /* Reads a coil and then responds                                             */
 632:.\Modbus.c    **** /******************************************************************************/
 633:.\Modbus.c    ****   unsigned int wmc_Address = 0;
 2559              		.loc 1 633 0
 2560 0006 0023     		mov	r3, #0
 2561 0008 FB61     		str	r3, [r7, #28]
 634:.\Modbus.c    ****   unsigned int wmc_AddressHigh = 0;
 2562              		.loc 1 634 0
 2563 000a 0023     		mov	r3, #0
 2564 000c BB61     		str	r3, [r7, #24]
 635:.\Modbus.c    ****   unsigned int wmc_AddressLow = 0;
 2565              		.loc 1 635 0
 2566 000e 0023     		mov	r3, #0
 2567 0010 7B61     		str	r3, [r7, #20]
 636:.\Modbus.c    ****   unsigned int wmc_numCoils = 0;
 2568              		.loc 1 636 0
 2569 0012 0023     		mov	r3, #0
 2570 0014 3B61     		str	r3, [r7, #16]
 637:.\Modbus.c    ****   unsigned int wmc_numCoilsHigh = 0;
 2571              		.loc 1 637 0
 2572 0016 0023     		mov	r3, #0
 2573 0018 FB60     		str	r3, [r7, #12]
 638:.\Modbus.c    ****   unsigned int wmc_numCoilsLow = 0;
 2574              		.loc 1 638 0
 2575 001a 0023     		mov	r3, #0
 2576 001c BB60     		str	r3, [r7, #8]
 639:.\Modbus.c    ****  // unsigned int wmc_numBytes;
 640:.\Modbus.c    ****   unsigned int crc = 0;
 2577              		.loc 1 640 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 58


 2578 001e 0023     		mov	r3, #0
 2579 0020 7B60     		str	r3, [r7, #4]
 641:.\Modbus.c    **** 
 642:.\Modbus.c    ****   unsigned char howManyBytes = 0;
 2580              		.loc 1 642 0
 2581 0022 3B1C     		mov	r3, r7
 2582 0024 2733     		add	r3, r3, #39
 2583 0026 0022     		mov	r2, #0
 2584 0028 1A70     		strb	r2, [r3]
 643:.\Modbus.c    ****   unsigned char remainder = 0;
 2585              		.loc 1 643 0
 2586 002a FB1C     		add	r3, r7, #3
 2587 002c 0022     		mov	r2, #0
 2588 002e 1A70     		strb	r2, [r3]
 644:.\Modbus.c    **** //  unsigned char lsb = 0;
 645:.\Modbus.c    ****   unsigned char i,j,l = 0;
 2589              		.loc 1 645 0
 2590 0030 3B1C     		mov	r3, r7
 2591 0032 2433     		add	r3, r3, #36
 2592 0034 0022     		mov	r2, #0
 2593 0036 1A70     		strb	r2, [r3]
 646:.\Modbus.c    ****   //unsigned char k;
 647:.\Modbus.c    **** 
 648:.\Modbus.c    ****   //Combine address bytes
 649:.\Modbus.c    ****   wmc_Address = received[2];
 2594              		.loc 1 649 0
 2595 0038 874B     		ldr	r3, .L114
 2596 003a 9B78     		ldrb	r3, [r3, #2]
 2597 003c FB61     		str	r3, [r7, #28]
 650:.\Modbus.c    ****   wmc_AddressHigh = received[2];
 2598              		.loc 1 650 0
 2599 003e 864B     		ldr	r3, .L114
 2600 0040 9B78     		ldrb	r3, [r3, #2]
 2601 0042 BB61     		str	r3, [r7, #24]
 651:.\Modbus.c    ****   wmc_Address <<=8;
 2602              		.loc 1 651 0
 2603 0044 FB69     		ldr	r3, [r7, #28]
 2604 0046 1B02     		lsl	r3, r3, #8
 2605 0048 FB61     		str	r3, [r7, #28]
 652:.\Modbus.c    ****   wmc_Address |= received[3];
 2606              		.loc 1 652 0
 2607 004a 834B     		ldr	r3, .L114
 2608 004c DB78     		ldrb	r3, [r3, #3]
 2609 004e FA69     		ldr	r2, [r7, #28]
 2610 0050 1343     		orr	r3, r2
 2611 0052 FB61     		str	r3, [r7, #28]
 653:.\Modbus.c    ****   wmc_AddressLow = received[3];
 2612              		.loc 1 653 0
 2613 0054 804B     		ldr	r3, .L114
 2614 0056 DB78     		ldrb	r3, [r3, #3]
 2615 0058 7B61     		str	r3, [r7, #20]
 654:.\Modbus.c    **** 
 655:.\Modbus.c    ****   //Combine number of coils bytes
 656:.\Modbus.c    ****   wmc_numCoils = received[4];
 2616              		.loc 1 656 0
 2617 005a 7F4B     		ldr	r3, .L114
 2618 005c 1B79     		ldrb	r3, [r3, #4]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 59


 2619 005e 3B61     		str	r3, [r7, #16]
 657:.\Modbus.c    ****   wmc_numCoilsHigh = received[4];
 2620              		.loc 1 657 0
 2621 0060 7D4B     		ldr	r3, .L114
 2622 0062 1B79     		ldrb	r3, [r3, #4]
 2623 0064 FB60     		str	r3, [r7, #12]
 658:.\Modbus.c    ****   wmc_numCoils <<= 8;
 2624              		.loc 1 658 0
 2625 0066 3B69     		ldr	r3, [r7, #16]
 2626 0068 1B02     		lsl	r3, r3, #8
 2627 006a 3B61     		str	r3, [r7, #16]
 659:.\Modbus.c    ****   wmc_numCoils |= received[5];
 2628              		.loc 1 659 0
 2629 006c 7A4B     		ldr	r3, .L114
 2630 006e 5B79     		ldrb	r3, [r3, #5]
 2631 0070 3A69     		ldr	r2, [r7, #16]
 2632 0072 1343     		orr	r3, r2
 2633 0074 3B61     		str	r3, [r7, #16]
 660:.\Modbus.c    ****   wmc_numCoilsLow = received[5];
 2634              		.loc 1 660 0
 2635 0076 784B     		ldr	r3, .L114
 2636 0078 5B79     		ldrb	r3, [r3, #5]
 2637 007a BB60     		str	r3, [r7, #8]
 661:.\Modbus.c    **** 
 662:.\Modbus.c    **** //  wmc_numBytes = received[6];
 663:.\Modbus.c    **** 
 664:.\Modbus.c    ****   response[0] = SlaveAddress;
 2638              		.loc 1 664 0
 2639 007c 774B     		ldr	r3, .L114+4
 2640 007e 0222     		mov	r2, #2
 2641 0080 1A70     		strb	r2, [r3]
 665:.\Modbus.c    ****   response[1] = 0x0F;
 2642              		.loc 1 665 0
 2643 0082 764B     		ldr	r3, .L114+4
 2644 0084 0F22     		mov	r2, #15
 2645 0086 5A70     		strb	r2, [r3, #1]
 666:.\Modbus.c    **** 
 667:.\Modbus.c    ****   howManyBytes = wmc_numCoils/8;
 2646              		.loc 1 667 0
 2647 0088 3B69     		ldr	r3, [r7, #16]
 2648 008a DA08     		lsr	r2, r3, #3
 2649 008c 3B1C     		mov	r3, r7
 2650 008e 2733     		add	r3, r3, #39
 2651 0090 1A70     		strb	r2, [r3]
 668:.\Modbus.c    ****   remainder = wmc_numCoils % 8;
 2652              		.loc 1 668 0
 2653 0092 3B69     		ldr	r3, [r7, #16]
 2654 0094 D9B2     		uxtb	r1, r3
 2655 0096 FB1C     		add	r3, r7, #3
 2656 0098 0722     		mov	r2, #7
 2657 009a 0A40     		and	r2, r1
 2658 009c 1A70     		strb	r2, [r3]
 669:.\Modbus.c    **** 
 670:.\Modbus.c    ****   if(remainder){
 2659              		.loc 1 670 0
 2660 009e FB1C     		add	r3, r7, #3
 2661 00a0 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 60


 2662 00a2 002B     		cmp	r3, #0
 2663 00a4 06D0     		beq	.L99
 671:.\Modbus.c    ****     howManyBytes += 1;
 2664              		.loc 1 671 0
 2665 00a6 3B1C     		mov	r3, r7
 2666 00a8 2733     		add	r3, r3, #39
 2667 00aa 3A1C     		mov	r2, r7
 2668 00ac 2732     		add	r2, r2, #39
 2669 00ae 1278     		ldrb	r2, [r2]
 2670 00b0 0132     		add	r2, r2, #1
 2671 00b2 1A70     		strb	r2, [r3]
 2672              	.L99:
 672:.\Modbus.c    ****   }
 673:.\Modbus.c    ****   response[2] = wmc_AddressHigh;
 2673              		.loc 1 673 0
 2674 00b4 BB69     		ldr	r3, [r7, #24]
 2675 00b6 DAB2     		uxtb	r2, r3
 2676 00b8 684B     		ldr	r3, .L114+4
 2677 00ba 9A70     		strb	r2, [r3, #2]
 674:.\Modbus.c    ****   response[3] = wmc_AddressLow;
 2678              		.loc 1 674 0
 2679 00bc 7B69     		ldr	r3, [r7, #20]
 2680 00be DAB2     		uxtb	r2, r3
 2681 00c0 664B     		ldr	r3, .L114+4
 2682 00c2 DA70     		strb	r2, [r3, #3]
 675:.\Modbus.c    **** 
 676:.\Modbus.c    ****   response[4] = wmc_numCoilsHigh;
 2683              		.loc 1 676 0
 2684 00c4 FB68     		ldr	r3, [r7, #12]
 2685 00c6 DAB2     		uxtb	r2, r3
 2686 00c8 644B     		ldr	r3, .L114+4
 2687 00ca 1A71     		strb	r2, [r3, #4]
 677:.\Modbus.c    ****   response[5] = wmc_numCoilsLow;
 2688              		.loc 1 677 0
 2689 00cc BB68     		ldr	r3, [r7, #8]
 2690 00ce DAB2     		uxtb	r2, r3
 2691 00d0 624B     		ldr	r3, .L114+4
 2692 00d2 5A71     		strb	r2, [r3, #5]
 678:.\Modbus.c    **** 
 679:.\Modbus.c    ****   l = wmc_Address;
 2693              		.loc 1 679 0
 2694 00d4 3B1C     		mov	r3, r7
 2695 00d6 2433     		add	r3, r3, #36
 2696 00d8 FA69     		ldr	r2, [r7, #28]
 2697 00da 1A70     		strb	r2, [r3]
 680:.\Modbus.c    ****   //k = 3; //start at response 3
 681:.\Modbus.c    **** 
 682:.\Modbus.c    **** //  unsigned char bitSet;
 683:.\Modbus.c    ****   unsigned char valToWrite;
 684:.\Modbus.c    ****   unsigned char q = 7; //count through vals to write
 2698              		.loc 1 684 0
 2699 00dc 3B1C     		mov	r3, r7
 2700 00de 2333     		add	r3, r3, #35
 2701 00e0 0722     		mov	r2, #7
 2702 00e2 1A70     		strb	r2, [r3]
 685:.\Modbus.c    ****   
 686:.\Modbus.c    **** 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 61


 687:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 2703              		.loc 1 687 0
 2704 00e4 3B1C     		mov	r3, r7
 2705 00e6 2633     		add	r3, r3, #38
 2706 00e8 3A1C     		mov	r2, r7
 2707 00ea 2732     		add	r2, r2, #39
 2708 00ec 1278     		ldrb	r2, [r2]
 2709 00ee 1A70     		strb	r2, [r3]
 2710 00f0 78E0     		b	.L100
 2711              	.L111:
 688:.\Modbus.c    ****     valToWrite = received[q];
 2712              		.loc 1 688 0
 2713 00f2 3B1C     		mov	r3, r7
 2714 00f4 2333     		add	r3, r3, #35
 2715 00f6 1A78     		ldrb	r2, [r3]
 2716 00f8 BB1C     		add	r3, r7, #2
 2717 00fa 5749     		ldr	r1, .L114
 2718 00fc 8A5C     		ldrb	r2, [r1, r2]
 2719 00fe 1A70     		strb	r2, [r3]
 689:.\Modbus.c    ****     q++;
 2720              		.loc 1 689 0
 2721 0100 3B1C     		mov	r3, r7
 2722 0102 2333     		add	r3, r3, #35
 2723 0104 3A1C     		mov	r2, r7
 2724 0106 2332     		add	r2, r2, #35
 2725 0108 1278     		ldrb	r2, [r2]
 2726 010a 0132     		add	r2, r2, #1
 2727 010c 1A70     		strb	r2, [r3]
 690:.\Modbus.c    ****     if(i>1){
 2728              		.loc 1 690 0
 2729 010e 3B1C     		mov	r3, r7
 2730 0110 2633     		add	r3, r3, #38
 2731 0112 1B78     		ldrb	r3, [r3]
 2732 0114 012B     		cmp	r3, #1
 2733 0116 2ED9     		bls	.L101
 691:.\Modbus.c    ****       for(j=0;j!=8;j++){
 2734              		.loc 1 691 0
 2735 0118 3B1C     		mov	r3, r7
 2736 011a 2533     		add	r3, r3, #37
 2737 011c 0022     		mov	r2, #0
 2738 011e 1A70     		strb	r2, [r3]
 2739 0120 23E0     		b	.L102
 2740              	.L105:
 692:.\Modbus.c    **** 	if(CHECK_BIT(valToWrite, j)){
 2741              		.loc 1 692 0
 2742 0122 BB1C     		add	r3, r7, #2
 2743 0124 1A78     		ldrb	r2, [r3]
 2744 0126 3B1C     		mov	r3, r7
 2745 0128 2533     		add	r3, r3, #37
 2746 012a 1B78     		ldrb	r3, [r3]
 2747 012c 1A41     		asr	r2, r2, r3
 2748 012e 0123     		mov	r3, #1
 2749 0130 1340     		and	r3, r2
 2750 0132 06D0     		beq	.L103
 693:.\Modbus.c    ****           coils[l] = 1;
 2751              		.loc 1 693 0
 2752 0134 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 62


 2753 0136 2433     		add	r3, r3, #36
 2754 0138 1B78     		ldrb	r3, [r3]
 2755 013a 494A     		ldr	r2, .L114+8
 2756 013c 0121     		mov	r1, #1
 2757 013e D154     		strb	r1, [r2, r3]
 2758 0140 05E0     		b	.L104
 2759              	.L103:
 694:.\Modbus.c    **** 	}
 695:.\Modbus.c    **** 	else{
 696:.\Modbus.c    ****           coils[l] = 0; //need to sort out remainder stuff
 2760              		.loc 1 696 0
 2761 0142 3B1C     		mov	r3, r7
 2762 0144 2433     		add	r3, r3, #36
 2763 0146 1B78     		ldrb	r3, [r3]
 2764 0148 454A     		ldr	r2, .L114+8
 2765 014a 0021     		mov	r1, #0
 2766 014c D154     		strb	r1, [r2, r3]
 2767              	.L104:
 697:.\Modbus.c    **** 
 698:.\Modbus.c    **** 	}
 699:.\Modbus.c    **** 	l++;
 2768              		.loc 1 699 0
 2769 014e 3B1C     		mov	r3, r7
 2770 0150 2433     		add	r3, r3, #36
 2771 0152 3A1C     		mov	r2, r7
 2772 0154 2432     		add	r2, r2, #36
 2773 0156 1278     		ldrb	r2, [r2]
 2774 0158 0132     		add	r2, r2, #1
 2775 015a 1A70     		strb	r2, [r3]
 691:.\Modbus.c    ****       for(j=0;j!=8;j++){
 2776              		.loc 1 691 0
 2777 015c 3B1C     		mov	r3, r7
 2778 015e 2533     		add	r3, r3, #37
 2779 0160 3A1C     		mov	r2, r7
 2780 0162 2532     		add	r2, r2, #37
 2781 0164 1278     		ldrb	r2, [r2]
 2782 0166 0132     		add	r2, r2, #1
 2783 0168 1A70     		strb	r2, [r3]
 2784              	.L102:
 691:.\Modbus.c    ****       for(j=0;j!=8;j++){
 2785              		.loc 1 691 0 is_stmt 0 discriminator 1
 2786 016a 3B1C     		mov	r3, r7
 2787 016c 2533     		add	r3, r3, #37
 2788 016e 1B78     		ldrb	r3, [r3]
 2789 0170 082B     		cmp	r3, #8
 2790 0172 D6D1     		bne	.L105
 691:.\Modbus.c    ****       for(j=0;j!=8;j++){
 2791              		.loc 1 691 0
 2792 0174 2FE0     		b	.L106
 2793              	.L101:
 700:.\Modbus.c    ****       }
 701:.\Modbus.c    ****     }
 702:.\Modbus.c    ****     else{
 703:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 2794              		.loc 1 703 0 is_stmt 1
 2795 0176 3B1C     		mov	r3, r7
 2796 0178 2533     		add	r3, r3, #37
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 63


 2797 017a 0022     		mov	r2, #0
 2798 017c 1A70     		strb	r2, [r3]
 2799 017e 23E0     		b	.L107
 2800              	.L110:
 704:.\Modbus.c    ****       if(CHECK_BIT(valToWrite, j)){
 2801              		.loc 1 704 0
 2802 0180 BB1C     		add	r3, r7, #2
 2803 0182 1A78     		ldrb	r2, [r3]
 2804 0184 3B1C     		mov	r3, r7
 2805 0186 2533     		add	r3, r3, #37
 2806 0188 1B78     		ldrb	r3, [r3]
 2807 018a 1A41     		asr	r2, r2, r3
 2808 018c 0123     		mov	r3, #1
 2809 018e 1340     		and	r3, r2
 2810 0190 06D0     		beq	.L108
 705:.\Modbus.c    ****           coils[l] = 1;
 2811              		.loc 1 705 0
 2812 0192 3B1C     		mov	r3, r7
 2813 0194 2433     		add	r3, r3, #36
 2814 0196 1B78     		ldrb	r3, [r3]
 2815 0198 314A     		ldr	r2, .L114+8
 2816 019a 0121     		mov	r1, #1
 2817 019c D154     		strb	r1, [r2, r3]
 2818 019e 05E0     		b	.L109
 2819              	.L108:
 706:.\Modbus.c    ****       }
 707:.\Modbus.c    ****       else{
 708:.\Modbus.c    ****         coils[l] = 0;
 2820              		.loc 1 708 0
 2821 01a0 3B1C     		mov	r3, r7
 2822 01a2 2433     		add	r3, r3, #36
 2823 01a4 1B78     		ldrb	r3, [r3]
 2824 01a6 2E4A     		ldr	r2, .L114+8
 2825 01a8 0021     		mov	r1, #0
 2826 01aa D154     		strb	r1, [r2, r3]
 2827              	.L109:
 709:.\Modbus.c    ****       }
 710:.\Modbus.c    ****       l++;
 2828              		.loc 1 710 0
 2829 01ac 3B1C     		mov	r3, r7
 2830 01ae 2433     		add	r3, r3, #36
 2831 01b0 3A1C     		mov	r2, r7
 2832 01b2 2432     		add	r2, r2, #36
 2833 01b4 1278     		ldrb	r2, [r2]
 2834 01b6 0132     		add	r2, r2, #1
 2835 01b8 1A70     		strb	r2, [r3]
 703:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 2836              		.loc 1 703 0
 2837 01ba 3B1C     		mov	r3, r7
 2838 01bc 2533     		add	r3, r3, #37
 2839 01be 3A1C     		mov	r2, r7
 2840 01c0 2532     		add	r2, r2, #37
 2841 01c2 1278     		ldrb	r2, [r2]
 2842 01c4 0132     		add	r2, r2, #1
 2843 01c6 1A70     		strb	r2, [r3]
 2844              	.L107:
 703:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 64


 2845              		.loc 1 703 0 is_stmt 0 discriminator 1
 2846 01c8 3A1C     		mov	r2, r7
 2847 01ca 2532     		add	r2, r2, #37
 2848 01cc FB1C     		add	r3, r7, #3
 2849 01ce 1278     		ldrb	r2, [r2]
 2850 01d0 1B78     		ldrb	r3, [r3]
 2851 01d2 9A42     		cmp	r2, r3
 2852 01d4 D4D1     		bne	.L110
 2853              	.L106:
 687:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 2854              		.loc 1 687 0 is_stmt 1
 2855 01d6 3B1C     		mov	r3, r7
 2856 01d8 2633     		add	r3, r3, #38
 2857 01da 3A1C     		mov	r2, r7
 2858 01dc 2632     		add	r2, r2, #38
 2859 01de 1278     		ldrb	r2, [r2]
 2860 01e0 013A     		sub	r2, r2, #1
 2861 01e2 1A70     		strb	r2, [r3]
 2862              	.L100:
 687:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 2863              		.loc 1 687 0 is_stmt 0 discriminator 1
 2864 01e4 3B1C     		mov	r3, r7
 2865 01e6 2633     		add	r3, r3, #38
 2866 01e8 1B78     		ldrb	r3, [r3]
 2867 01ea 002B     		cmp	r3, #0
 2868 01ec 00D0     		beq	.LCB2446
 2869 01ee 80E7     		b	.L111	@long jump
 2870              	.LCB2446:
 711:.\Modbus.c    ****       }
 712:.\Modbus.c    ****     }
 713:.\Modbus.c    ****   }
 714:.\Modbus.c    ****   crc = generateCRC(8);
 2871              		.loc 1 714 0 is_stmt 1
 2872 01f0 0820     		mov	r0, #8
 2873 01f2 FFF7FEFF 		bl	generateCRC
 2874 01f6 031C     		mov	r3, r0
 2875 01f8 7B60     		str	r3, [r7, #4]
 715:.\Modbus.c    **** 
 716:.\Modbus.c    ****   response[6] = crc >> 8;
 2876              		.loc 1 716 0
 2877 01fa 7B68     		ldr	r3, [r7, #4]
 2878 01fc 1B0A     		lsr	r3, r3, #8
 2879 01fe DAB2     		uxtb	r2, r3
 2880 0200 164B     		ldr	r3, .L114+4
 2881 0202 9A71     		strb	r2, [r3, #6]
 717:.\Modbus.c    ****   response[7] = crc;
 2882              		.loc 1 717 0
 2883 0204 7B68     		ldr	r3, [r7, #4]
 2884 0206 DAB2     		uxtb	r2, r3
 2885 0208 144B     		ldr	r3, .L114+4
 2886 020a DA71     		strb	r2, [r3, #7]
 718:.\Modbus.c    **** 
 719:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 2887              		.loc 1 719 0
 2888 020c 0120     		mov	r0, #1
 2889 020e FFF7FEFF 		bl	writeEnable_Write
 720:.\Modbus.c    **** 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 65


 721:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2890              		.loc 1 721 0
 2891 0212 3B1C     		mov	r3, r7
 2892 0214 2633     		add	r3, r3, #38
 2893 0216 0022     		mov	r2, #0
 2894 0218 1A70     		strb	r2, [r3]
 2895 021a 0EE0     		b	.L112
 2896              	.L113:
 722:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 2897              		.loc 1 722 0 discriminator 2
 2898 021c 3B1C     		mov	r3, r7
 2899 021e 2633     		add	r3, r3, #38
 2900 0220 1B78     		ldrb	r3, [r3]
 2901 0222 0E4A     		ldr	r2, .L114+4
 2902 0224 D35C     		ldrb	r3, [r2, r3]
 2903 0226 181C     		mov	r0, r3
 2904 0228 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 721:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2905              		.loc 1 721 0 discriminator 2
 2906 022c 3B1C     		mov	r3, r7
 2907 022e 2633     		add	r3, r3, #38
 2908 0230 3A1C     		mov	r2, r7
 2909 0232 2632     		add	r2, r2, #38
 2910 0234 1278     		ldrb	r2, [r2]
 2911 0236 0132     		add	r2, r2, #1
 2912 0238 1A70     		strb	r2, [r3]
 2913              	.L112:
 721:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2914              		.loc 1 721 0 is_stmt 0 discriminator 1
 2915 023a 3B1C     		mov	r3, r7
 2916 023c 2633     		add	r3, r3, #38
 2917 023e 1B78     		ldrb	r3, [r3]
 2918 0240 092B     		cmp	r3, #9
 2919 0242 EBD1     		bne	.L113
 723:.\Modbus.c    ****   }
 724:.\Modbus.c    ****   responseFinished(10);
 2920              		.loc 1 724 0 is_stmt 1
 2921 0244 0A20     		mov	r0, #10
 2922 0246 FFF7FEFF 		bl	responseFinished
 725:.\Modbus.c    ****   i=0;  
 2923              		.loc 1 725 0
 2924 024a 3B1C     		mov	r3, r7
 2925 024c 2633     		add	r3, r3, #38
 2926 024e 0022     		mov	r2, #0
 2927 0250 1A70     		strb	r2, [r3]
 726:.\Modbus.c    **** }
 2928              		.loc 1 726 0
 2929 0252 BD46     		mov	sp, r7
 2930 0254 0AB0     		add	sp, sp, #40
 2931              		@ sp needed for prologue
 2932 0256 80BD     		pop	{r7, pc}
 2933              	.L115:
 2934              		.align	2
 2935              	.L114:
 2936 0258 00000000 		.word	received
 2937 025c 00000000 		.word	response
 2938 0260 00000000 		.word	coils
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 66


 2939              		.cfi_endproc
 2940              	.LFE43:
 2941              		.size	writeMultipleCoils, .-writeMultipleCoils
 2942              		.section	.text.generateCRC,"ax",%progbits
 2943              		.align	2
 2944              		.global	generateCRC
 2945              		.code	16
 2946              		.thumb_func
 2947              		.type	generateCRC, %function
 2948              	generateCRC:
 2949              	.LFB44:
 727:.\Modbus.c    **** 
 728:.\Modbus.c    **** unsigned int generateCRC(unsigned char messageLength)
 729:.\Modbus.c    **** {
 2950              		.loc 1 729 0
 2951              		.cfi_startproc
 2952 0000 80B5     		push	{r7, lr}
 2953              	.LCFI30:
 2954              		.cfi_def_cfa_offset 8
 2955              		.cfi_offset 7, -8
 2956              		.cfi_offset 14, -4
 2957 0002 88B0     		sub	sp, sp, #32
 2958              	.LCFI31:
 2959              		.cfi_def_cfa_offset 40
 2960 0004 00AF     		add	r7, sp, #0
 2961              	.LCFI32:
 2962              		.cfi_def_cfa_register 7
 2963 0006 021C     		mov	r2, r0
 2964 0008 FB1D     		add	r3, r7, #7
 2965 000a 1A70     		strb	r2, [r3]
 730:.\Modbus.c    **** unsigned int crc = 0xFFFF;
 2966              		.loc 1 730 0
 2967 000c 244B     		ldr	r3, .L124
 2968 000e FB61     		str	r3, [r7, #28]
 731:.\Modbus.c    **** unsigned int crcHigh = 0;
 2969              		.loc 1 731 0
 2970 0010 0023     		mov	r3, #0
 2971 0012 3B61     		str	r3, [r7, #16]
 732:.\Modbus.c    **** unsigned int crcLow = 0;
 2972              		.loc 1 732 0
 2973 0014 0023     		mov	r3, #0
 2974 0016 FB60     		str	r3, [r7, #12]
 733:.\Modbus.c    **** int i,j = 0;
 2975              		.loc 1 733 0
 2976 0018 0023     		mov	r3, #0
 2977 001a 7B61     		str	r3, [r7, #20]
 734:.\Modbus.c    **** 
 735:.\Modbus.c    ****   for(i=0;i<messageLength-2;i++){
 2978              		.loc 1 735 0
 2979 001c 0023     		mov	r3, #0
 2980 001e BB61     		str	r3, [r7, #24]
 2981 0020 21E0     		b	.L117
 2982              	.L122:
 736:.\Modbus.c    ****     crc ^= response[i];
 2983              		.loc 1 736 0
 2984 0022 204A     		ldr	r2, .L124+4
 2985 0024 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 67


 2986 0026 D318     		add	r3, r2, r3
 2987 0028 1B78     		ldrb	r3, [r3]
 2988 002a FA69     		ldr	r2, [r7, #28]
 2989 002c 5340     		eor	r3, r2
 2990 002e FB61     		str	r3, [r7, #28]
 737:.\Modbus.c    ****     for(j=8; j!=0; j--){
 2991              		.loc 1 737 0
 2992 0030 0823     		mov	r3, #8
 2993 0032 7B61     		str	r3, [r7, #20]
 2994 0034 11E0     		b	.L118
 2995              	.L121:
 738:.\Modbus.c    ****       if((crc & 0x0001) != 0){
 2996              		.loc 1 738 0
 2997 0036 FA69     		ldr	r2, [r7, #28]
 2998 0038 0123     		mov	r3, #1
 2999 003a 1340     		and	r3, r2
 3000 003c 07D0     		beq	.L119
 739:.\Modbus.c    ****         crc >>= 1;
 3001              		.loc 1 739 0
 3002 003e FB69     		ldr	r3, [r7, #28]
 3003 0040 5B08     		lsr	r3, r3, #1
 3004 0042 FB61     		str	r3, [r7, #28]
 740:.\Modbus.c    ****         crc ^= 0xA001;
 3005              		.loc 1 740 0
 3006 0044 FB69     		ldr	r3, [r7, #28]
 3007 0046 184A     		ldr	r2, .L124+8
 3008 0048 5340     		eor	r3, r2
 3009 004a FB61     		str	r3, [r7, #28]
 3010 004c 02E0     		b	.L120
 3011              	.L119:
 741:.\Modbus.c    ****       }
 742:.\Modbus.c    ****       else{
 743:.\Modbus.c    ****         crc >>= 1;
 3012              		.loc 1 743 0
 3013 004e FB69     		ldr	r3, [r7, #28]
 3014 0050 5B08     		lsr	r3, r3, #1
 3015 0052 FB61     		str	r3, [r7, #28]
 3016              	.L120:
 737:.\Modbus.c    ****     for(j=8; j!=0; j--){
 3017              		.loc 1 737 0
 3018 0054 7B69     		ldr	r3, [r7, #20]
 3019 0056 013B     		sub	r3, r3, #1
 3020 0058 7B61     		str	r3, [r7, #20]
 3021              	.L118:
 737:.\Modbus.c    ****     for(j=8; j!=0; j--){
 3022              		.loc 1 737 0 is_stmt 0 discriminator 1
 3023 005a 7B69     		ldr	r3, [r7, #20]
 3024 005c 002B     		cmp	r3, #0
 3025 005e EAD1     		bne	.L121
 735:.\Modbus.c    ****   for(i=0;i<messageLength-2;i++){
 3026              		.loc 1 735 0 is_stmt 1
 3027 0060 BB69     		ldr	r3, [r7, #24]
 3028 0062 0133     		add	r3, r3, #1
 3029 0064 BB61     		str	r3, [r7, #24]
 3030              	.L117:
 735:.\Modbus.c    ****   for(i=0;i<messageLength-2;i++){
 3031              		.loc 1 735 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 68


 3032 0066 FB1D     		add	r3, r7, #7
 3033 0068 1B78     		ldrb	r3, [r3]
 3034 006a 9A1E     		sub	r2, r3, #2
 3035 006c BB69     		ldr	r3, [r7, #24]
 3036 006e 9A42     		cmp	r2, r3
 3037 0070 D7DC     		bgt	.L122
 744:.\Modbus.c    ****       }
 745:.\Modbus.c    ****     }
 746:.\Modbus.c    ****   }
 747:.\Modbus.c    **** //bytes are wrong way round so doing a swap here..
 748:.\Modbus.c    **** crcHigh = (crc & 0x00FF) <<8;
 3038              		.loc 1 748 0 is_stmt 1
 3039 0072 FB69     		ldr	r3, [r7, #28]
 3040 0074 1B02     		lsl	r3, r3, #8
 3041 0076 1B04     		lsl	r3, r3, #16
 3042 0078 1B0C     		lsr	r3, r3, #16
 3043 007a 3B61     		str	r3, [r7, #16]
 749:.\Modbus.c    **** crcLow = (crc & 0xFF00) >>8;
 3044              		.loc 1 749 0
 3045 007c FA69     		ldr	r2, [r7, #28]
 3046 007e FF23     		mov	r3, #255
 3047 0080 1B02     		lsl	r3, r3, #8
 3048 0082 1340     		and	r3, r2
 3049 0084 1B0A     		lsr	r3, r3, #8
 3050 0086 FB60     		str	r3, [r7, #12]
 750:.\Modbus.c    **** crcHigh |= crcLow;
 3051              		.loc 1 750 0
 3052 0088 3A69     		ldr	r2, [r7, #16]
 3053 008a FB68     		ldr	r3, [r7, #12]
 3054 008c 1343     		orr	r3, r2
 3055 008e 3B61     		str	r3, [r7, #16]
 751:.\Modbus.c    **** crc = crcHigh;
 3056              		.loc 1 751 0
 3057 0090 3B69     		ldr	r3, [r7, #16]
 3058 0092 FB61     		str	r3, [r7, #28]
 752:.\Modbus.c    **** return crc;
 3059              		.loc 1 752 0
 3060 0094 FB69     		ldr	r3, [r7, #28]
 753:.\Modbus.c    **** }
 3061              		.loc 1 753 0
 3062 0096 181C     		mov	r0, r3
 3063 0098 BD46     		mov	sp, r7
 3064 009a 08B0     		add	sp, sp, #32
 3065              		@ sp needed for prologue
 3066 009c 80BD     		pop	{r7, pc}
 3067              	.L125:
 3068 009e C046     		.align	2
 3069              	.L124:
 3070 00a0 FFFF0000 		.word	65535
 3071 00a4 00000000 		.word	response
 3072 00a8 01A00000 		.word	40961
 3073              		.cfi_endproc
 3074              	.LFE44:
 3075              		.size	generateCRC, .-generateCRC
 3076              		.section	.text.checkCRC,"ax",%progbits
 3077              		.align	2
 3078              		.global	checkCRC
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 69


 3079              		.code	16
 3080              		.thumb_func
 3081              		.type	checkCRC, %function
 3082              	checkCRC:
 3083              	.LFB45:
 754:.\Modbus.c    **** 
 755:.\Modbus.c    **** unsigned char checkCRC(void)
 756:.\Modbus.c    **** {
 3084              		.loc 1 756 0
 3085              		.cfi_startproc
 3086 0000 80B5     		push	{r7, lr}
 3087              	.LCFI33:
 3088              		.cfi_def_cfa_offset 8
 3089              		.cfi_offset 7, -8
 3090              		.cfi_offset 14, -4
 3091 0002 86B0     		sub	sp, sp, #24
 3092              	.LCFI34:
 3093              		.cfi_def_cfa_offset 32
 3094 0004 00AF     		add	r7, sp, #0
 3095              	.LCFI35:
 3096              		.cfi_def_cfa_register 7
 757:.\Modbus.c    ****   unsigned int crc = 0xFFFF;
 3097              		.loc 1 757 0
 3098 0006 2A4B     		ldr	r3, .L135
 3099 0008 7B61     		str	r3, [r7, #20]
 758:.\Modbus.c    ****   unsigned int crcHigh = 0;
 3100              		.loc 1 758 0
 3101 000a 0023     		mov	r3, #0
 3102 000c BB60     		str	r3, [r7, #8]
 759:.\Modbus.c    ****   unsigned int crcLow = 0;
 3103              		.loc 1 759 0
 3104 000e 0023     		mov	r3, #0
 3105 0010 7B60     		str	r3, [r7, #4]
 760:.\Modbus.c    ****   int i,j = 0;
 3106              		.loc 1 760 0
 3107 0012 0023     		mov	r3, #0
 3108 0014 FB60     		str	r3, [r7, #12]
 761:.\Modbus.c    **** 
 762:.\Modbus.c    ****     for(i=0;i<messageLength-2;i++){
 3109              		.loc 1 762 0
 3110 0016 0023     		mov	r3, #0
 3111 0018 3B61     		str	r3, [r7, #16]
 3112 001a 21E0     		b	.L127
 3113              	.L132:
 763:.\Modbus.c    ****       crc ^= received[i];
 3114              		.loc 1 763 0
 3115 001c 254A     		ldr	r2, .L135+4
 3116 001e 3B69     		ldr	r3, [r7, #16]
 3117 0020 D318     		add	r3, r2, r3
 3118 0022 1B78     		ldrb	r3, [r3]
 3119 0024 7A69     		ldr	r2, [r7, #20]
 3120 0026 5340     		eor	r3, r2
 3121 0028 7B61     		str	r3, [r7, #20]
 764:.\Modbus.c    ****       for(j=8; j!=0; j--){
 3122              		.loc 1 764 0
 3123 002a 0823     		mov	r3, #8
 3124 002c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 70


 3125 002e 11E0     		b	.L128
 3126              	.L131:
 765:.\Modbus.c    ****         if((crc & 0x0001) != 0){
 3127              		.loc 1 765 0
 3128 0030 7A69     		ldr	r2, [r7, #20]
 3129 0032 0123     		mov	r3, #1
 3130 0034 1340     		and	r3, r2
 3131 0036 07D0     		beq	.L129
 766:.\Modbus.c    ****           crc >>= 1;
 3132              		.loc 1 766 0
 3133 0038 7B69     		ldr	r3, [r7, #20]
 3134 003a 5B08     		lsr	r3, r3, #1
 3135 003c 7B61     		str	r3, [r7, #20]
 767:.\Modbus.c    ****           crc ^= 0xA001;
 3136              		.loc 1 767 0
 3137 003e 7B69     		ldr	r3, [r7, #20]
 3138 0040 1D4A     		ldr	r2, .L135+8
 3139 0042 5340     		eor	r3, r2
 3140 0044 7B61     		str	r3, [r7, #20]
 3141 0046 02E0     		b	.L130
 3142              	.L129:
 768:.\Modbus.c    ****         }
 769:.\Modbus.c    ****         else{
 770:.\Modbus.c    ****           crc >>= 1;
 3143              		.loc 1 770 0
 3144 0048 7B69     		ldr	r3, [r7, #20]
 3145 004a 5B08     		lsr	r3, r3, #1
 3146 004c 7B61     		str	r3, [r7, #20]
 3147              	.L130:
 764:.\Modbus.c    ****       for(j=8; j!=0; j--){
 3148              		.loc 1 764 0
 3149 004e FB68     		ldr	r3, [r7, #12]
 3150 0050 013B     		sub	r3, r3, #1
 3151 0052 FB60     		str	r3, [r7, #12]
 3152              	.L128:
 764:.\Modbus.c    ****       for(j=8; j!=0; j--){
 3153              		.loc 1 764 0 is_stmt 0 discriminator 1
 3154 0054 FB68     		ldr	r3, [r7, #12]
 3155 0056 002B     		cmp	r3, #0
 3156 0058 EAD1     		bne	.L131
 762:.\Modbus.c    ****     for(i=0;i<messageLength-2;i++){
 3157              		.loc 1 762 0 is_stmt 1
 3158 005a 3B69     		ldr	r3, [r7, #16]
 3159 005c 0133     		add	r3, r3, #1
 3160 005e 3B61     		str	r3, [r7, #16]
 3161              	.L127:
 762:.\Modbus.c    ****     for(i=0;i<messageLength-2;i++){
 3162              		.loc 1 762 0 is_stmt 0 discriminator 1
 3163 0060 164B     		ldr	r3, .L135+12
 3164 0062 1B78     		ldrb	r3, [r3]
 3165 0064 DBB2     		uxtb	r3, r3
 3166 0066 9A1E     		sub	r2, r3, #2
 3167 0068 3B69     		ldr	r3, [r7, #16]
 3168 006a 9A42     		cmp	r2, r3
 3169 006c D6DC     		bgt	.L132
 771:.\Modbus.c    ****         }
 772:.\Modbus.c    ****       }
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 71


 773:.\Modbus.c    ****     }
 774:.\Modbus.c    ****   //bytes are wrong way round so doing a swap here..
 775:.\Modbus.c    ****   crcHigh = (crc & 0x00FF);
 3170              		.loc 1 775 0 is_stmt 1
 3171 006e 7A69     		ldr	r2, [r7, #20]
 3172 0070 FF23     		mov	r3, #255
 3173 0072 1340     		and	r3, r2
 3174 0074 BB60     		str	r3, [r7, #8]
 776:.\Modbus.c    ****   crcLow = (crc & 0xFF00) >>8;
 3175              		.loc 1 776 0
 3176 0076 7A69     		ldr	r2, [r7, #20]
 3177 0078 FF23     		mov	r3, #255
 3178 007a 1B02     		lsl	r3, r3, #8
 3179 007c 1340     		and	r3, r2
 3180 007e 1B0A     		lsr	r3, r3, #8
 3181 0080 7B60     		str	r3, [r7, #4]
 777:.\Modbus.c    ****   if((crcHigh == received[i])&&(crcLow == received[i+1]))
 3182              		.loc 1 777 0
 3183 0082 0C4A     		ldr	r2, .L135+4
 3184 0084 3B69     		ldr	r3, [r7, #16]
 3185 0086 D318     		add	r3, r2, r3
 3186 0088 1B78     		ldrb	r3, [r3]
 3187 008a 1A1C     		mov	r2, r3
 3188 008c BB68     		ldr	r3, [r7, #8]
 3189 008e 9A42     		cmp	r2, r3
 3190 0090 09D1     		bne	.L133
 3191              		.loc 1 777 0 is_stmt 0 discriminator 1
 3192 0092 3B69     		ldr	r3, [r7, #16]
 3193 0094 0133     		add	r3, r3, #1
 3194 0096 074A     		ldr	r2, .L135+4
 3195 0098 D35C     		ldrb	r3, [r2, r3]
 3196 009a 1A1C     		mov	r2, r3
 3197 009c 7B68     		ldr	r3, [r7, #4]
 3198 009e 9A42     		cmp	r2, r3
 3199 00a0 01D1     		bne	.L133
 778:.\Modbus.c    ****   {
 779:.\Modbus.c    ****     return 1;
 3200              		.loc 1 779 0 is_stmt 1
 3201 00a2 0123     		mov	r3, #1
 3202 00a4 00E0     		b	.L134
 3203              	.L133:
 780:.\Modbus.c    ****   }
 781:.\Modbus.c    ****   else{
 782:.\Modbus.c    ****     return 0;
 3204              		.loc 1 782 0
 3205 00a6 0023     		mov	r3, #0
 3206              	.L134:
 783:.\Modbus.c    ****   }
 784:.\Modbus.c    **** 
 785:.\Modbus.c    **** 
 786:.\Modbus.c    **** }
 3207              		.loc 1 786 0
 3208 00a8 181C     		mov	r0, r3
 3209 00aa BD46     		mov	sp, r7
 3210 00ac 06B0     		add	sp, sp, #24
 3211              		@ sp needed for prologue
 3212 00ae 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 72


 3213              	.L136:
 3214              		.align	2
 3215              	.L135:
 3216 00b0 FFFF0000 		.word	65535
 3217 00b4 00000000 		.word	received
 3218 00b8 01A00000 		.word	40961
 3219 00bc 00000000 		.word	messageLength
 3220              		.cfi_endproc
 3221              	.LFE45:
 3222              		.size	checkCRC, .-checkCRC
 3223              		.section	.text.responseFinished,"ax",%progbits
 3224              		.align	2
 3225              		.global	responseFinished
 3226              		.code	16
 3227              		.thumb_func
 3228              		.type	responseFinished, %function
 3229              	responseFinished:
 3230              	.LFB46:
 787:.\Modbus.c    **** 
 788:.\Modbus.c    **** void responseFinished(int delay)
 789:.\Modbus.c    **** {
 3231              		.loc 1 789 0
 3232              		.cfi_startproc
 3233 0000 80B5     		push	{r7, lr}
 3234              	.LCFI36:
 3235              		.cfi_def_cfa_offset 8
 3236              		.cfi_offset 7, -8
 3237              		.cfi_offset 14, -4
 3238 0002 82B0     		sub	sp, sp, #8
 3239              	.LCFI37:
 3240              		.cfi_def_cfa_offset 16
 3241 0004 00AF     		add	r7, sp, #0
 3242              	.LCFI38:
 3243              		.cfi_def_cfa_register 7
 3244 0006 7860     		str	r0, [r7, #4]
 790:.\Modbus.c    ****     //delay = 833*delay;
 791:.\Modbus.c    ****     //CyDelayUs(delay);
 792:.\Modbus.c    ****     //writeEnable_Write(0); //turn line back to normal
 793:.\Modbus.c    ****     //delay = delay;
 794:.\Modbus.c    ****     memset(&response[0], 0, sizeof(response)); //clear response
 3245              		.loc 1 794 0
 3246 0008 0A4B     		ldr	r3, .L138
 3247 000a 181C     		mov	r0, r3
 3248 000c 0021     		mov	r1, #0
 3249 000e 7D22     		mov	r2, #125
 3250 0010 FFF7FEFF 		bl	memset
 795:.\Modbus.c    ****     turnLineAround = delay+11;
 3251              		.loc 1 795 0
 3252 0014 7B68     		ldr	r3, [r7, #4]
 3253 0016 DBB2     		uxtb	r3, r3
 3254 0018 0B33     		add	r3, r3, #11
 3255 001a DAB2     		uxtb	r2, r3
 3256 001c 064B     		ldr	r3, .L138+4
 3257 001e 1A70     		strb	r2, [r3]
 796:.\Modbus.c    ****     MessageTimer_Start(); //start timer to go off, 833uS * amount of bytes and turn line back aroun
 3258              		.loc 1 796 0
 3259 0020 FFF7FEFF 		bl	MessageTimer_Start
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 73


 797:.\Modbus.c    ****     //the timer shouldn't be needed but the UART seems to not be operating synchronously.
 798:.\Modbus.c    ****     EndOfMessage_StartEx(endOfMessage_isr); 
 3260              		.loc 1 798 0
 3261 0024 054B     		ldr	r3, .L138+8
 3262 0026 181C     		mov	r0, r3
 3263 0028 FFF7FEFF 		bl	EndOfMessage_StartEx
 799:.\Modbus.c    **** }...
 3264              		.loc 1 799 0
 3265 002c BD46     		mov	sp, r7
 3266 002e 02B0     		add	sp, sp, #8
 3267              		@ sp needed for prologue
 3268 0030 80BD     		pop	{r7, pc}
 3269              	.L139:
 3270 0032 C046     		.align	2
 3271              	.L138:
 3272 0034 00000000 		.word	response
 3273 0038 00000000 		.word	turnLineAround
 3274 003c 00000000 		.word	endOfMessage_isr
 3275              		.cfi_endproc
 3276              	.LFE46:
 3277              		.size	responseFinished, .-responseFinished
 3278              		.text
 3279              	.Letext0:
 3280              		.file 2 "./Generated_Source/PSoC4/cytypes.h"
 3281              		.section	.debug_info,"",%progbits
 3282              	.Ldebug_info0:
 3283 0000 15080000 		.4byte	0x815
 3284 0004 0200     		.2byte	0x2
 3285 0006 00000000 		.4byte	.Ldebug_abbrev0
 3286 000a 04       		.byte	0x4
 3287 000b 01       		.uleb128 0x1
 3288 000c A4020000 		.4byte	.LASF80
 3289 0010 01       		.byte	0x1
 3290 0011 76040000 		.4byte	.LASF81
 3291 0015 ED020000 		.4byte	.LASF82
 3292 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3293 001d 00000000 		.4byte	0
 3294 0021 00000000 		.4byte	0
 3295 0025 00000000 		.4byte	.Ldebug_line0
 3296 0029 02       		.uleb128 0x2
 3297 002a 01       		.byte	0x1
 3298 002b 06       		.byte	0x6
 3299 002c A1000000 		.4byte	.LASF0
 3300 0030 02       		.uleb128 0x2
 3301 0031 01       		.byte	0x1
 3302 0032 08       		.byte	0x8
 3303 0033 67030000 		.4byte	.LASF1
 3304 0037 02       		.uleb128 0x2
 3305 0038 02       		.byte	0x2
 3306 0039 05       		.byte	0x5
 3307 003a 8C030000 		.4byte	.LASF2
 3308 003e 02       		.uleb128 0x2
 3309 003f 02       		.byte	0x2
 3310 0040 07       		.byte	0x7
 3311 0041 91010000 		.4byte	.LASF3
 3312 0045 02       		.uleb128 0x2
 3313 0046 04       		.byte	0x4
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 74


 3314 0047 05       		.byte	0x5
 3315 0048 F5000000 		.4byte	.LASF4
 3316 004c 02       		.uleb128 0x2
 3317 004d 04       		.byte	0x4
 3318 004e 07       		.byte	0x7
 3319 004f 78010000 		.4byte	.LASF5
 3320 0053 02       		.uleb128 0x2
 3321 0054 08       		.byte	0x8
 3322 0055 05       		.byte	0x5
 3323 0056 93000000 		.4byte	.LASF6
 3324 005a 02       		.uleb128 0x2
 3325 005b 08       		.byte	0x8
 3326 005c 07       		.byte	0x7
 3327 005d 56000000 		.4byte	.LASF7
 3328 0061 03       		.uleb128 0x3
 3329 0062 04       		.byte	0x4
 3330 0063 05       		.byte	0x5
 3331 0064 696E7400 		.ascii	"int\000"
 3332 0068 02       		.uleb128 0x2
 3333 0069 04       		.byte	0x4
 3334 006a 07       		.byte	0x7
 3335 006b 62010000 		.4byte	.LASF8
 3336 006f 04       		.uleb128 0x4
 3337 0070 1C010000 		.4byte	.LASF9
 3338 0074 02       		.byte	0x2
 3339 0075 5B       		.byte	0x5b
 3340 0076 30000000 		.4byte	0x30
 3341 007a 04       		.uleb128 0x4
 3342 007b 32010000 		.4byte	.LASF10
 3343 007f 02       		.byte	0x2
 3344 0080 5D       		.byte	0x5d
 3345 0081 4C000000 		.4byte	0x4c
 3346 0085 02       		.uleb128 0x2
 3347 0086 04       		.byte	0x4
 3348 0087 04       		.byte	0x4
 3349 0088 80020000 		.4byte	.LASF11
 3350 008c 02       		.uleb128 0x2
 3351 008d 08       		.byte	0x8
 3352 008e 04       		.byte	0x4
 3353 008f 2B010000 		.4byte	.LASF12
 3354 0093 02       		.uleb128 0x2
 3355 0094 01       		.byte	0x1
 3356 0095 08       		.byte	0x8
 3357 0096 06040000 		.4byte	.LASF13
 3358 009a 05       		.uleb128 0x5
 3359 009b 6F000000 		.4byte	0x6f
 3360 009f 02       		.uleb128 0x2
 3361 00a0 04       		.byte	0x4
 3362 00a1 07       		.byte	0x7
 3363 00a2 22020000 		.4byte	.LASF14
 3364 00a6 06       		.uleb128 0x6
 3365 00a7 01       		.byte	0x1
 3366 00a8 BC000000 		.4byte	.LASF15
 3367 00ac 01       		.byte	0x1
 3368 00ad 28       		.byte	0x28
 3369 00ae 01       		.byte	0x1
 3370 00af 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 75


 3371 00b3 D8000000 		.4byte	.LFE33
 3372 00b7 00000000 		.4byte	.LLST0
 3373 00bb 01       		.byte	0x1
 3374 00bc 06       		.uleb128 0x6
 3375 00bd 01       		.byte	0x1
 3376 00be CA040000 		.4byte	.LASF16
 3377 00c2 01       		.byte	0x1
 3378 00c3 42       		.byte	0x42
 3379 00c4 01       		.byte	0x1
 3380 00c5 00000000 		.4byte	.LFB34
 3381 00c9 FC000000 		.4byte	.LFE34
 3382 00cd 2C000000 		.4byte	.LLST1
 3383 00d1 01       		.byte	0x1
 3384 00d2 06       		.uleb128 0x6
 3385 00d3 01       		.byte	0x1
 3386 00d4 87040000 		.4byte	.LASF17
 3387 00d8 01       		.byte	0x1
 3388 00d9 72       		.byte	0x72
 3389 00da 01       		.byte	0x1
 3390 00db 00000000 		.4byte	.LFB35
 3391 00df 98000000 		.4byte	.LFE35
 3392 00e3 58000000 		.4byte	.LLST2
 3393 00e7 01       		.byte	0x1
 3394 00e8 07       		.uleb128 0x7
 3395 00e9 01       		.byte	0x1
 3396 00ea 96040000 		.4byte	.LASF22
 3397 00ee 01       		.byte	0x1
 3398 00ef 96       		.byte	0x96
 3399 00f0 01       		.byte	0x1
 3400 00f1 00000000 		.4byte	.LFB36
 3401 00f5 98020000 		.4byte	.LFE36
 3402 00f9 84000000 		.4byte	.LLST3
 3403 00fd 01       		.byte	0x1
 3404 00fe 87010000 		.4byte	0x187
 3405 0102 08       		.uleb128 0x8
 3406 0103 FE000000 		.4byte	.LASF18
 3407 0107 01       		.byte	0x1
 3408 0108 9B       		.byte	0x9b
 3409 0109 68000000 		.4byte	0x68
 3410 010d 02       		.byte	0x2
 3411 010e 91       		.byte	0x91
 3412 010f 64       		.sleb128 -28
 3413 0110 08       		.uleb128 0x8
 3414 0111 AD040000 		.4byte	.LASF19
 3415 0115 01       		.byte	0x1
 3416 0116 9C       		.byte	0x9c
 3417 0117 68000000 		.4byte	0x68
 3418 011b 02       		.byte	0x2
 3419 011c 91       		.byte	0x91
 3420 011d 60       		.sleb128 -32
 3421 011e 09       		.uleb128 0x9
 3422 011f 63726300 		.ascii	"crc\000"
 3423 0123 01       		.byte	0x1
 3424 0124 9D       		.byte	0x9d
 3425 0125 68000000 		.4byte	0x68
 3426 0129 02       		.byte	0x2
 3427 012a 91       		.byte	0x91
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 76


 3428 012b 5C       		.sleb128 -36
 3429 012c 08       		.uleb128 0x8
 3430 012d CA000000 		.4byte	.LASF20
 3431 0131 01       		.byte	0x1
 3432 0132 9F       		.byte	0x9f
 3433 0133 30000000 		.4byte	0x30
 3434 0137 02       		.byte	0x2
 3435 0138 91       		.byte	0x91
 3436 0139 6F       		.sleb128 -17
 3437 013a 08       		.uleb128 0x8
 3438 013b FC030000 		.4byte	.LASF21
 3439 013f 01       		.byte	0x1
 3440 0140 A0       		.byte	0xa0
 3441 0141 30000000 		.4byte	0x30
 3442 0145 02       		.byte	0x2
 3443 0146 91       		.byte	0x91
 3444 0147 5B       		.sleb128 -37
 3445 0148 09       		.uleb128 0x9
 3446 0149 6C736200 		.ascii	"lsb\000"
 3447 014d 01       		.byte	0x1
 3448 014e A1       		.byte	0xa1
 3449 014f 30000000 		.4byte	0x30
 3450 0153 02       		.byte	0x2
 3451 0154 91       		.byte	0x91
 3452 0155 6E       		.sleb128 -18
 3453 0156 09       		.uleb128 0x9
 3454 0157 6900     		.ascii	"i\000"
 3455 0159 01       		.byte	0x1
 3456 015a A2       		.byte	0xa2
 3457 015b 30000000 		.4byte	0x30
 3458 015f 02       		.byte	0x2
 3459 0160 91       		.byte	0x91
 3460 0161 6D       		.sleb128 -19
 3461 0162 09       		.uleb128 0x9
 3462 0163 6A00     		.ascii	"j\000"
 3463 0165 01       		.byte	0x1
 3464 0166 A2       		.byte	0xa2
 3465 0167 30000000 		.4byte	0x30
 3466 016b 02       		.byte	0x2
 3467 016c 91       		.byte	0x91
 3468 016d 6C       		.sleb128 -20
 3469 016e 09       		.uleb128 0x9
 3470 016f 6B00     		.ascii	"k\000"
 3471 0171 01       		.byte	0x1
 3472 0172 A2       		.byte	0xa2
 3473 0173 30000000 		.4byte	0x30
 3474 0177 02       		.byte	0x2
 3475 0178 91       		.byte	0x91
 3476 0179 6B       		.sleb128 -21
 3477 017a 09       		.uleb128 0x9
 3478 017b 6C00     		.ascii	"l\000"
 3479 017d 01       		.byte	0x1
 3480 017e A2       		.byte	0xa2
 3481 017f 30000000 		.4byte	0x30
 3482 0183 02       		.byte	0x2
 3483 0184 91       		.byte	0x91
 3484 0185 6A       		.sleb128 -22
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 77


 3485 0186 00       		.byte	0
 3486 0187 07       		.uleb128 0x7
 3487 0188 01       		.byte	0x1
 3488 0189 14020000 		.4byte	.LASF23
 3489 018d 01       		.byte	0x1
 3490 018e E5       		.byte	0xe5
 3491 018f 01       		.byte	0x1
 3492 0190 00000000 		.4byte	.LFB37
 3493 0194 98020000 		.4byte	.LFE37
 3494 0198 BC000000 		.4byte	.LLST4
 3495 019c 01       		.byte	0x1
 3496 019d 26020000 		.4byte	0x226
 3497 01a1 08       		.uleb128 0x8
 3498 01a2 FE000000 		.4byte	.LASF18
 3499 01a6 01       		.byte	0x1
 3500 01a7 EA       		.byte	0xea
 3501 01a8 68000000 		.4byte	0x68
 3502 01ac 02       		.byte	0x2
 3503 01ad 91       		.byte	0x91
 3504 01ae 64       		.sleb128 -28
 3505 01af 08       		.uleb128 0x8
 3506 01b0 AD040000 		.4byte	.LASF19
 3507 01b4 01       		.byte	0x1
 3508 01b5 EB       		.byte	0xeb
 3509 01b6 68000000 		.4byte	0x68
 3510 01ba 02       		.byte	0x2
 3511 01bb 91       		.byte	0x91
 3512 01bc 60       		.sleb128 -32
 3513 01bd 09       		.uleb128 0x9
 3514 01be 63726300 		.ascii	"crc\000"
 3515 01c2 01       		.byte	0x1
 3516 01c3 EC       		.byte	0xec
 3517 01c4 68000000 		.4byte	0x68
 3518 01c8 02       		.byte	0x2
 3519 01c9 91       		.byte	0x91
 3520 01ca 5C       		.sleb128 -36
 3521 01cb 08       		.uleb128 0x8
 3522 01cc CA000000 		.4byte	.LASF20
 3523 01d0 01       		.byte	0x1
 3524 01d1 EE       		.byte	0xee
 3525 01d2 30000000 		.4byte	0x30
 3526 01d6 02       		.byte	0x2
 3527 01d7 91       		.byte	0x91
 3528 01d8 6F       		.sleb128 -17
 3529 01d9 08       		.uleb128 0x8
 3530 01da FC030000 		.4byte	.LASF21
 3531 01de 01       		.byte	0x1
 3532 01df EF       		.byte	0xef
 3533 01e0 30000000 		.4byte	0x30
 3534 01e4 02       		.byte	0x2
 3535 01e5 91       		.byte	0x91
 3536 01e6 5B       		.sleb128 -37
 3537 01e7 09       		.uleb128 0x9
 3538 01e8 6C736200 		.ascii	"lsb\000"
 3539 01ec 01       		.byte	0x1
 3540 01ed F0       		.byte	0xf0
 3541 01ee 30000000 		.4byte	0x30
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 78


 3542 01f2 02       		.byte	0x2
 3543 01f3 91       		.byte	0x91
 3544 01f4 6E       		.sleb128 -18
 3545 01f5 09       		.uleb128 0x9
 3546 01f6 6900     		.ascii	"i\000"
 3547 01f8 01       		.byte	0x1
 3548 01f9 F1       		.byte	0xf1
 3549 01fa 30000000 		.4byte	0x30
 3550 01fe 02       		.byte	0x2
 3551 01ff 91       		.byte	0x91
 3552 0200 6D       		.sleb128 -19
 3553 0201 09       		.uleb128 0x9
 3554 0202 6A00     		.ascii	"j\000"
 3555 0204 01       		.byte	0x1
 3556 0205 F1       		.byte	0xf1
 3557 0206 30000000 		.4byte	0x30
 3558 020a 02       		.byte	0x2
 3559 020b 91       		.byte	0x91
 3560 020c 6C       		.sleb128 -20
 3561 020d 09       		.uleb128 0x9
 3562 020e 6B00     		.ascii	"k\000"
 3563 0210 01       		.byte	0x1
 3564 0211 F1       		.byte	0xf1
 3565 0212 30000000 		.4byte	0x30
 3566 0216 02       		.byte	0x2
 3567 0217 91       		.byte	0x91
 3568 0218 6B       		.sleb128 -21
 3569 0219 09       		.uleb128 0x9
 3570 021a 6C00     		.ascii	"l\000"
 3571 021c 01       		.byte	0x1
 3572 021d F1       		.byte	0xf1
 3573 021e 30000000 		.4byte	0x30
 3574 0222 02       		.byte	0x2
 3575 0223 91       		.byte	0x91
 3576 0224 6A       		.sleb128 -22
 3577 0225 00       		.byte	0
 3578 0226 0A       		.uleb128 0xa
 3579 0227 01       		.byte	0x1
 3580 0228 D7000000 		.4byte	.LASF24
 3581 022c 01       		.byte	0x1
 3582 022d 3501     		.2byte	0x135
 3583 022f 01       		.byte	0x1
 3584 0230 00000000 		.4byte	.LFB38
 3585 0234 A8010000 		.4byte	.LFE38
 3586 0238 F4000000 		.4byte	.LLST5
 3587 023c 01       		.byte	0x1
 3588 023d 89020000 		.4byte	0x289
 3589 0241 0B       		.uleb128 0xb
 3590 0242 C4010000 		.4byte	.LASF25
 3591 0246 01       		.byte	0x1
 3592 0247 3701     		.2byte	0x137
 3593 0249 68000000 		.4byte	0x68
 3594 024d 02       		.byte	0x2
 3595 024e 91       		.byte	0x91
 3596 024f 6C       		.sleb128 -20
 3597 0250 0B       		.uleb128 0xb
 3598 0251 A8030000 		.4byte	.LASF26
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 79


 3599 0255 01       		.byte	0x1
 3600 0256 3801     		.2byte	0x138
 3601 0258 68000000 		.4byte	0x68
 3602 025c 02       		.byte	0x2
 3603 025d 91       		.byte	0x91
 3604 025e 68       		.sleb128 -24
 3605 025f 0C       		.uleb128 0xc
 3606 0260 6A00     		.ascii	"j\000"
 3607 0262 01       		.byte	0x1
 3608 0263 3901     		.2byte	0x139
 3609 0265 30000000 		.4byte	0x30
 3610 0269 02       		.byte	0x2
 3611 026a 91       		.byte	0x91
 3612 026b 77       		.sleb128 -9
 3613 026c 0C       		.uleb128 0xc
 3614 026d 63726300 		.ascii	"crc\000"
 3615 0271 01       		.byte	0x1
 3616 0272 3A01     		.2byte	0x13a
 3617 0274 68000000 		.4byte	0x68
 3618 0278 02       		.byte	0x2
 3619 0279 91       		.byte	0x91
 3620 027a 64       		.sleb128 -28
 3621 027b 0C       		.uleb128 0xc
 3622 027c 6900     		.ascii	"i\000"
 3623 027e 01       		.byte	0x1
 3624 027f 3B01     		.2byte	0x13b
 3625 0281 68000000 		.4byte	0x68
 3626 0285 02       		.byte	0x2
 3627 0286 91       		.byte	0x91
 3628 0287 70       		.sleb128 -16
 3629 0288 00       		.byte	0
 3630 0289 0A       		.uleb128 0xa
 3631 028a 01       		.byte	0x1
 3632 028b 14010000 		.4byte	.LASF27
 3633 028f 01       		.byte	0x1
 3634 0290 6B01     		.2byte	0x16b
 3635 0292 01       		.byte	0x1
 3636 0293 00000000 		.4byte	.LFB39
 3637 0297 AC010000 		.4byte	.LFE39
 3638 029b 2C010000 		.4byte	.LLST6
 3639 029f 01       		.byte	0x1
 3640 02a0 EC020000 		.4byte	0x2ec
 3641 02a4 0B       		.uleb128 0xb
 3642 02a5 C4010000 		.4byte	.LASF25
 3643 02a9 01       		.byte	0x1
 3644 02aa 6D01     		.2byte	0x16d
 3645 02ac 68000000 		.4byte	0x68
 3646 02b0 02       		.byte	0x2
 3647 02b1 91       		.byte	0x91
 3648 02b2 6C       		.sleb128 -20
 3649 02b3 0B       		.uleb128 0xb
 3650 02b4 A8030000 		.4byte	.LASF26
 3651 02b8 01       		.byte	0x1
 3652 02b9 6E01     		.2byte	0x16e
 3653 02bb 68000000 		.4byte	0x68
 3654 02bf 02       		.byte	0x2
 3655 02c0 91       		.byte	0x91
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 80


 3656 02c1 68       		.sleb128 -24
 3657 02c2 0C       		.uleb128 0xc
 3658 02c3 6A00     		.ascii	"j\000"
 3659 02c5 01       		.byte	0x1
 3660 02c6 6F01     		.2byte	0x16f
 3661 02c8 30000000 		.4byte	0x30
 3662 02cc 02       		.byte	0x2
 3663 02cd 91       		.byte	0x91
 3664 02ce 77       		.sleb128 -9
 3665 02cf 0C       		.uleb128 0xc
 3666 02d0 63726300 		.ascii	"crc\000"
 3667 02d4 01       		.byte	0x1
 3668 02d5 7001     		.2byte	0x170
 3669 02d7 68000000 		.4byte	0x68
 3670 02db 02       		.byte	0x2
 3671 02dc 91       		.byte	0x91
 3672 02dd 64       		.sleb128 -28
 3673 02de 0C       		.uleb128 0xc
 3674 02df 6900     		.ascii	"i\000"
 3675 02e1 01       		.byte	0x1
 3676 02e2 7101     		.2byte	0x171
 3677 02e4 68000000 		.4byte	0x68
 3678 02e8 02       		.byte	0x2
 3679 02e9 91       		.byte	0x91
 3680 02ea 70       		.sleb128 -16
 3681 02eb 00       		.byte	0
 3682 02ec 0A       		.uleb128 0xa
 3683 02ed 01       		.byte	0x1
 3684 02ee 6F010000 		.4byte	.LASF28
 3685 02f2 01       		.byte	0x1
 3686 02f3 9F01     		.2byte	0x19f
 3687 02f5 01       		.byte	0x1
 3688 02f6 00000000 		.4byte	.LFB40
 3689 02fa 00010000 		.4byte	.LFE40
 3690 02fe 64010000 		.4byte	.LLST7
 3691 0302 01       		.byte	0x1
 3692 0303 7E030000 		.4byte	0x37e
 3693 0307 0B       		.uleb128 0xb
 3694 0308 96020000 		.4byte	.LASF29
 3695 030c 01       		.byte	0x1
 3696 030d A401     		.2byte	0x1a4
 3697 030f 68000000 		.4byte	0x68
 3698 0313 02       		.byte	0x2
 3699 0314 91       		.byte	0x91
 3700 0315 70       		.sleb128 -16
 3701 0316 0B       		.uleb128 0xb
 3702 0317 71020000 		.4byte	.LASF30
 3703 031b 01       		.byte	0x1
 3704 031c A501     		.2byte	0x1a5
 3705 031e 68000000 		.4byte	0x68
 3706 0322 02       		.byte	0x2
 3707 0323 91       		.byte	0x91
 3708 0324 6C       		.sleb128 -20
 3709 0325 0B       		.uleb128 0xb
 3710 0326 CF010000 		.4byte	.LASF31
 3711 032a 01       		.byte	0x1
 3712 032b A601     		.2byte	0x1a6
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 81


 3713 032d 68000000 		.4byte	0x68
 3714 0331 02       		.byte	0x2
 3715 0332 91       		.byte	0x91
 3716 0333 68       		.sleb128 -24
 3717 0334 0B       		.uleb128 0xb
 3718 0335 C2030000 		.4byte	.LASF32
 3719 0339 01       		.byte	0x1
 3720 033a A801     		.2byte	0x1a8
 3721 033c 68000000 		.4byte	0x68
 3722 0340 02       		.byte	0x2
 3723 0341 91       		.byte	0x91
 3724 0342 64       		.sleb128 -28
 3725 0343 0B       		.uleb128 0xb
 3726 0344 B9040000 		.4byte	.LASF33
 3727 0348 01       		.byte	0x1
 3728 0349 A901     		.2byte	0x1a9
 3729 034b 68000000 		.4byte	0x68
 3730 034f 02       		.byte	0x2
 3731 0350 91       		.byte	0x91
 3732 0351 60       		.sleb128 -32
 3733 0352 0B       		.uleb128 0xb
 3734 0353 96030000 		.4byte	.LASF34
 3735 0357 01       		.byte	0x1
 3736 0358 AA01     		.2byte	0x1aa
 3737 035a 68000000 		.4byte	0x68
 3738 035e 02       		.byte	0x2
 3739 035f 91       		.byte	0x91
 3740 0360 5C       		.sleb128 -36
 3741 0361 0C       		.uleb128 0xc
 3742 0362 63726300 		.ascii	"crc\000"
 3743 0366 01       		.byte	0x1
 3744 0367 AC01     		.2byte	0x1ac
 3745 0369 68000000 		.4byte	0x68
 3746 036d 02       		.byte	0x2
 3747 036e 91       		.byte	0x91
 3748 036f 58       		.sleb128 -40
 3749 0370 0C       		.uleb128 0xc
 3750 0371 6900     		.ascii	"i\000"
 3751 0373 01       		.byte	0x1
 3752 0374 AD01     		.2byte	0x1ad
 3753 0376 68000000 		.4byte	0x68
 3754 037a 02       		.byte	0x2
 3755 037b 91       		.byte	0x91
 3756 037c 74       		.sleb128 -12
 3757 037d 00       		.byte	0
 3758 037e 0A       		.uleb128 0xa
 3759 037f 01       		.byte	0x1
 3760 0380 0B040000 		.4byte	.LASF35
 3761 0384 01       		.byte	0x1
 3762 0385 D801     		.2byte	0x1d8
 3763 0387 01       		.byte	0x1
 3764 0388 00000000 		.4byte	.LFB41
 3765 038c 84010000 		.4byte	.LFE41
 3766 0390 9C010000 		.4byte	.LLST8
 3767 0394 01       		.byte	0x1
 3768 0395 4A040000 		.4byte	0x44a
 3769 0399 0B       		.uleb128 0xb
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 82


 3770 039a DF030000 		.4byte	.LASF36
 3771 039e 01       		.byte	0x1
 3772 039f DD01     		.2byte	0x1dd
 3773 03a1 68000000 		.4byte	0x68
 3774 03a5 02       		.byte	0x2
 3775 03a6 91       		.byte	0x91
 3776 03a7 6C       		.sleb128 -20
 3777 03a8 0B       		.uleb128 0xb
 3778 03a9 45010000 		.4byte	.LASF37
 3779 03ad 01       		.byte	0x1
 3780 03ae DE01     		.2byte	0x1de
 3781 03b0 68000000 		.4byte	0x68
 3782 03b4 02       		.byte	0x2
 3783 03b5 91       		.byte	0x91
 3784 03b6 68       		.sleb128 -24
 3785 03b7 0B       		.uleb128 0xb
 3786 03b8 B3030000 		.4byte	.LASF38
 3787 03bc 01       		.byte	0x1
 3788 03bd DF01     		.2byte	0x1df
 3789 03bf 68000000 		.4byte	0x68
 3790 03c3 02       		.byte	0x2
 3791 03c4 91       		.byte	0x91
 3792 03c5 64       		.sleb128 -28
 3793 03c6 0B       		.uleb128 0xb
 3794 03c7 39010000 		.4byte	.LASF39
 3795 03cb 01       		.byte	0x1
 3796 03cc E001     		.2byte	0x1e0
 3797 03ce 68000000 		.4byte	0x68
 3798 03d2 02       		.byte	0x2
 3799 03d3 91       		.byte	0x91
 3800 03d4 60       		.sleb128 -32
 3801 03d5 0B       		.uleb128 0xb
 3802 03d6 86020000 		.4byte	.LASF40
 3803 03da 01       		.byte	0x1
 3804 03db E101     		.2byte	0x1e1
 3805 03dd 68000000 		.4byte	0x68
 3806 03e1 02       		.byte	0x2
 3807 03e2 91       		.byte	0x91
 3808 03e3 5C       		.sleb128 -36
 3809 03e4 0B       		.uleb128 0xb
 3810 03e5 AD000000 		.4byte	.LASF41
 3811 03e9 01       		.byte	0x1
 3812 03ea E201     		.2byte	0x1e2
 3813 03ec 68000000 		.4byte	0x68
 3814 03f0 02       		.byte	0x2
 3815 03f1 91       		.byte	0x91
 3816 03f2 58       		.sleb128 -40
 3817 03f3 0B       		.uleb128 0xb
 3818 03f4 86000000 		.4byte	.LASF42
 3819 03f8 01       		.byte	0x1
 3820 03f9 E301     		.2byte	0x1e3
 3821 03fb 68000000 		.4byte	0x68
 3822 03ff 02       		.byte	0x2
 3823 0400 91       		.byte	0x91
 3824 0401 54       		.sleb128 -44
 3825 0402 0B       		.uleb128 0xb
 3826 0403 2D040000 		.4byte	.LASF43
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 83


 3827 0407 01       		.byte	0x1
 3828 0408 E401     		.2byte	0x1e4
 3829 040a 68000000 		.4byte	0x68
 3830 040e 02       		.byte	0x2
 3831 040f 91       		.byte	0x91
 3832 0410 50       		.sleb128 -48
 3833 0411 0B       		.uleb128 0xb
 3834 0412 6D000000 		.4byte	.LASF44
 3835 0416 01       		.byte	0x1
 3836 0417 E501     		.2byte	0x1e5
 3837 0419 68000000 		.4byte	0x68
 3838 041d 02       		.byte	0x2
 3839 041e 91       		.byte	0x91
 3840 041f 4C       		.sleb128 -52
 3841 0420 0C       		.uleb128 0xc
 3842 0421 6A00     		.ascii	"j\000"
 3843 0423 01       		.byte	0x1
 3844 0424 E901     		.2byte	0x1e9
 3845 0426 30000000 		.4byte	0x30
 3846 042a 02       		.byte	0x2
 3847 042b 91       		.byte	0x91
 3848 042c 77       		.sleb128 -9
 3849 042d 0C       		.uleb128 0xc
 3850 042e 63726300 		.ascii	"crc\000"
 3851 0432 01       		.byte	0x1
 3852 0433 EA01     		.2byte	0x1ea
 3853 0435 68000000 		.4byte	0x68
 3854 0439 02       		.byte	0x2
 3855 043a 91       		.byte	0x91
 3856 043b 48       		.sleb128 -56
 3857 043c 0C       		.uleb128 0xc
 3858 043d 6900     		.ascii	"i\000"
 3859 043f 01       		.byte	0x1
 3860 0440 EB01     		.2byte	0x1eb
 3861 0442 68000000 		.4byte	0x68
 3862 0446 02       		.byte	0x2
 3863 0447 91       		.byte	0x91
 3864 0448 70       		.sleb128 -16
 3865 0449 00       		.byte	0
 3866 044a 0A       		.uleb128 0xa
 3867 044b 01       		.byte	0x1
 3868 044c 7C030000 		.4byte	.LASF45
 3869 0450 01       		.byte	0x1
 3870 0451 3702     		.2byte	0x237
 3871 0453 01       		.byte	0x1
 3872 0454 00000000 		.4byte	.LFB42
 3873 0458 10010000 		.4byte	.LFE42
 3874 045c D4010000 		.4byte	.LLST9
 3875 0460 01       		.byte	0x1
 3876 0461 DC040000 		.4byte	0x4dc
 3877 0465 0B       		.uleb128 0xb
 3878 0466 29000000 		.4byte	.LASF46
 3879 046a 01       		.byte	0x1
 3880 046b 3C02     		.2byte	0x23c
 3881 046d 68000000 		.4byte	0x68
 3882 0471 02       		.byte	0x2
 3883 0472 91       		.byte	0x91
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 84


 3884 0473 70       		.sleb128 -16
 3885 0474 0B       		.uleb128 0xb
 3886 0475 37000000 		.4byte	.LASF47
 3887 0479 01       		.byte	0x1
 3888 047a 3D02     		.2byte	0x23d
 3889 047c 68000000 		.4byte	0x68
 3890 0480 02       		.byte	0x2
 3891 0481 91       		.byte	0x91
 3892 0482 6C       		.sleb128 -20
 3893 0483 0B       		.uleb128 0xb
 3894 0484 09010000 		.4byte	.LASF48
 3895 0488 01       		.byte	0x1
 3896 0489 3E02     		.2byte	0x23e
 3897 048b 68000000 		.4byte	0x68
 3898 048f 02       		.byte	0x2
 3899 0490 91       		.byte	0x91
 3900 0491 68       		.sleb128 -24
 3901 0492 0B       		.uleb128 0xb
 3902 0493 78000000 		.4byte	.LASF49
 3903 0497 01       		.byte	0x1
 3904 0498 4002     		.2byte	0x240
 3905 049a 68000000 		.4byte	0x68
 3906 049e 02       		.byte	0x2
 3907 049f 91       		.byte	0x91
 3908 04a0 64       		.sleb128 -28
 3909 04a1 0B       		.uleb128 0xb
 3910 04a2 EB030000 		.4byte	.LASF50
 3911 04a6 01       		.byte	0x1
 3912 04a7 4102     		.2byte	0x241
 3913 04a9 68000000 		.4byte	0x68
 3914 04ad 02       		.byte	0x2
 3915 04ae 91       		.byte	0x91
 3916 04af 60       		.sleb128 -32
 3917 04b0 0B       		.uleb128 0xb
 3918 04b1 02020000 		.4byte	.LASF51
 3919 04b5 01       		.byte	0x1
 3920 04b6 4202     		.2byte	0x242
 3921 04b8 68000000 		.4byte	0x68
 3922 04bc 02       		.byte	0x2
 3923 04bd 91       		.byte	0x91
 3924 04be 5C       		.sleb128 -36
 3925 04bf 0C       		.uleb128 0xc
 3926 04c0 6900     		.ascii	"i\000"
 3927 04c2 01       		.byte	0x1
 3928 04c3 4302     		.2byte	0x243
 3929 04c5 61000000 		.4byte	0x61
 3930 04c9 02       		.byte	0x2
 3931 04ca 91       		.byte	0x91
 3932 04cb 74       		.sleb128 -12
 3933 04cc 0C       		.uleb128 0xc
 3934 04cd 63726300 		.ascii	"crc\000"
 3935 04d1 01       		.byte	0x1
 3936 04d2 4402     		.2byte	0x244
 3937 04d4 68000000 		.4byte	0x68
 3938 04d8 02       		.byte	0x2
 3939 04d9 91       		.byte	0x91
 3940 04da 58       		.sleb128 -40
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 85


 3941 04db 00       		.byte	0
 3942 04dc 0A       		.uleb128 0xa
 3943 04dd 01       		.byte	0x1
 3944 04de 44020000 		.4byte	.LASF52
 3945 04e2 01       		.byte	0x1
 3946 04e3 7402     		.2byte	0x274
 3947 04e5 01       		.byte	0x1
 3948 04e6 00000000 		.4byte	.LFB43
 3949 04ea 64020000 		.4byte	.LFE43
 3950 04ee 0C020000 		.4byte	.LLST10
 3951 04f2 01       		.byte	0x1
 3952 04f3 C2050000 		.4byte	0x5c2
 3953 04f7 0B       		.uleb128 0xb
 3954 04f8 F6010000 		.4byte	.LASF53
 3955 04fc 01       		.byte	0x1
 3956 04fd 7902     		.2byte	0x279
 3957 04ff 68000000 		.4byte	0x68
 3958 0503 02       		.byte	0x2
 3959 0504 91       		.byte	0x91
 3960 0505 6C       		.sleb128 -20
 3961 0506 0B       		.uleb128 0xb
 3962 0507 46000000 		.4byte	.LASF54
 3963 050b 01       		.byte	0x1
 3964 050c 7A02     		.2byte	0x27a
 3965 050e 68000000 		.4byte	0x68
 3966 0512 02       		.byte	0x2
 3967 0513 91       		.byte	0x91
 3968 0514 68       		.sleb128 -24
 3969 0515 0B       		.uleb128 0xb
 3970 0516 D0030000 		.4byte	.LASF55
 3971 051a 01       		.byte	0x1
 3972 051b 7B02     		.2byte	0x27b
 3973 051d 68000000 		.4byte	0x68
 3974 0521 02       		.byte	0x2
 3975 0522 91       		.byte	0x91
 3976 0523 64       		.sleb128 -28
 3977 0524 0B       		.uleb128 0xb
 3978 0525 55010000 		.4byte	.LASF56
 3979 0529 01       		.byte	0x1
 3980 052a 7C02     		.2byte	0x27c
 3981 052c 68000000 		.4byte	0x68
 3982 0530 02       		.byte	0x2
 3983 0531 91       		.byte	0x91
 3984 0532 60       		.sleb128 -32
 3985 0533 0B       		.uleb128 0xb
 3986 0534 E4000000 		.4byte	.LASF57
 3987 0538 01       		.byte	0x1
 3988 0539 7D02     		.2byte	0x27d
 3989 053b 68000000 		.4byte	0x68
 3990 053f 02       		.byte	0x2
 3991 0540 91       		.byte	0x91
 3992 0541 5C       		.sleb128 -36
 3993 0542 0B       		.uleb128 0xb
 3994 0543 00000000 		.4byte	.LASF58
 3995 0547 01       		.byte	0x1
 3996 0548 7E02     		.2byte	0x27e
 3997 054a 68000000 		.4byte	0x68
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 86


 3998 054e 02       		.byte	0x2
 3999 054f 91       		.byte	0x91
 4000 0550 58       		.sleb128 -40
 4001 0551 0C       		.uleb128 0xc
 4002 0552 63726300 		.ascii	"crc\000"
 4003 0556 01       		.byte	0x1
 4004 0557 8002     		.2byte	0x280
 4005 0559 68000000 		.4byte	0x68
 4006 055d 02       		.byte	0x2
 4007 055e 91       		.byte	0x91
 4008 055f 54       		.sleb128 -44
 4009 0560 0B       		.uleb128 0xb
 4010 0561 CA000000 		.4byte	.LASF20
 4011 0565 01       		.byte	0x1
 4012 0566 8202     		.2byte	0x282
 4013 0568 30000000 		.4byte	0x30
 4014 056c 02       		.byte	0x2
 4015 056d 91       		.byte	0x91
 4016 056e 77       		.sleb128 -9
 4017 056f 0B       		.uleb128 0xb
 4018 0570 FC030000 		.4byte	.LASF21
 4019 0574 01       		.byte	0x1
 4020 0575 8302     		.2byte	0x283
 4021 0577 30000000 		.4byte	0x30
 4022 057b 02       		.byte	0x2
 4023 057c 91       		.byte	0x91
 4024 057d 53       		.sleb128 -45
 4025 057e 0C       		.uleb128 0xc
 4026 057f 6900     		.ascii	"i\000"
 4027 0581 01       		.byte	0x1
 4028 0582 8502     		.2byte	0x285
 4029 0584 30000000 		.4byte	0x30
 4030 0588 02       		.byte	0x2
 4031 0589 91       		.byte	0x91
 4032 058a 76       		.sleb128 -10
 4033 058b 0C       		.uleb128 0xc
 4034 058c 6A00     		.ascii	"j\000"
 4035 058e 01       		.byte	0x1
 4036 058f 8502     		.2byte	0x285
 4037 0591 30000000 		.4byte	0x30
 4038 0595 02       		.byte	0x2
 4039 0596 91       		.byte	0x91
 4040 0597 75       		.sleb128 -11
 4041 0598 0C       		.uleb128 0xc
 4042 0599 6C00     		.ascii	"l\000"
 4043 059b 01       		.byte	0x1
 4044 059c 8502     		.2byte	0x285
 4045 059e 30000000 		.4byte	0x30
 4046 05a2 02       		.byte	0x2
 4047 05a3 91       		.byte	0x91
 4048 05a4 74       		.sleb128 -12
 4049 05a5 0B       		.uleb128 0xb
 4050 05a6 6D000000 		.4byte	.LASF44
 4051 05aa 01       		.byte	0x1
 4052 05ab AB02     		.2byte	0x2ab
 4053 05ad 30000000 		.4byte	0x30
 4054 05b1 02       		.byte	0x2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 87


 4055 05b2 91       		.byte	0x91
 4056 05b3 52       		.sleb128 -46
 4057 05b4 0C       		.uleb128 0xc
 4058 05b5 7100     		.ascii	"q\000"
 4059 05b7 01       		.byte	0x1
 4060 05b8 AC02     		.2byte	0x2ac
 4061 05ba 30000000 		.4byte	0x30
 4062 05be 02       		.byte	0x2
 4063 05bf 91       		.byte	0x91
 4064 05c0 73       		.sleb128 -13
 4065 05c1 00       		.byte	0
 4066 05c2 0D       		.uleb128 0xd
 4067 05c3 01       		.byte	0x1
 4068 05c4 57040000 		.4byte	.LASF61
 4069 05c8 01       		.byte	0x1
 4070 05c9 D802     		.2byte	0x2d8
 4071 05cb 01       		.byte	0x1
 4072 05cc 68000000 		.4byte	0x68
 4073 05d0 00000000 		.4byte	.LFB44
 4074 05d4 AC000000 		.4byte	.LFE44
 4075 05d8 44020000 		.4byte	.LLST11
 4076 05dc 01       		.byte	0x1
 4077 05dd 38060000 		.4byte	0x638
 4078 05e1 0E       		.uleb128 0xe
 4079 05e2 2B020000 		.4byte	.LASF64
 4080 05e6 01       		.byte	0x1
 4081 05e7 D802     		.2byte	0x2d8
 4082 05e9 30000000 		.4byte	0x30
 4083 05ed 02       		.byte	0x2
 4084 05ee 91       		.byte	0x91
 4085 05ef 5F       		.sleb128 -33
 4086 05f0 0C       		.uleb128 0xc
 4087 05f1 63726300 		.ascii	"crc\000"
 4088 05f5 01       		.byte	0x1
 4089 05f6 DA02     		.2byte	0x2da
 4090 05f8 68000000 		.4byte	0x68
 4091 05fc 02       		.byte	0x2
 4092 05fd 91       		.byte	0x91
 4093 05fe 74       		.sleb128 -12
 4094 05ff 0B       		.uleb128 0xb
 4095 0600 BC010000 		.4byte	.LASF59
 4096 0604 01       		.byte	0x1
 4097 0605 DB02     		.2byte	0x2db
 4098 0607 68000000 		.4byte	0x68
 4099 060b 02       		.byte	0x2
 4100 060c 91       		.byte	0x91
 4101 060d 68       		.sleb128 -24
 4102 060e 0B       		.uleb128 0xb
 4103 060f 8A010000 		.4byte	.LASF60
 4104 0613 01       		.byte	0x1
 4105 0614 DC02     		.2byte	0x2dc
 4106 0616 68000000 		.4byte	0x68
 4107 061a 02       		.byte	0x2
 4108 061b 91       		.byte	0x91
 4109 061c 64       		.sleb128 -28
 4110 061d 0C       		.uleb128 0xc
 4111 061e 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 88


 4112 0620 01       		.byte	0x1
 4113 0621 DD02     		.2byte	0x2dd
 4114 0623 61000000 		.4byte	0x61
 4115 0627 02       		.byte	0x2
 4116 0628 91       		.byte	0x91
 4117 0629 70       		.sleb128 -16
 4118 062a 0C       		.uleb128 0xc
 4119 062b 6A00     		.ascii	"j\000"
 4120 062d 01       		.byte	0x1
 4121 062e DD02     		.2byte	0x2dd
 4122 0630 61000000 		.4byte	0x61
 4123 0634 02       		.byte	0x2
 4124 0635 91       		.byte	0x91
 4125 0636 6C       		.sleb128 -20
 4126 0637 00       		.byte	0
 4127 0638 0D       		.uleb128 0xd
 4128 0639 01       		.byte	0x1
 4129 063a 10000000 		.4byte	.LASF62
 4130 063e 01       		.byte	0x1
 4131 063f F302     		.2byte	0x2f3
 4132 0641 01       		.byte	0x1
 4133 0642 30000000 		.4byte	0x30
 4134 0646 00000000 		.4byte	.LFB45
 4135 064a C0000000 		.4byte	.LFE45
 4136 064e 7C020000 		.4byte	.LLST12
 4137 0652 01       		.byte	0x1
 4138 0653 9F060000 		.4byte	0x69f
 4139 0657 0C       		.uleb128 0xc
 4140 0658 63726300 		.ascii	"crc\000"
 4141 065c 01       		.byte	0x1
 4142 065d F502     		.2byte	0x2f5
 4143 065f 68000000 		.4byte	0x68
 4144 0663 02       		.byte	0x2
 4145 0664 91       		.byte	0x91
 4146 0665 74       		.sleb128 -12
 4147 0666 0B       		.uleb128 0xb
 4148 0667 BC010000 		.4byte	.LASF59
 4149 066b 01       		.byte	0x1
 4150 066c F602     		.2byte	0x2f6
 4151 066e 68000000 		.4byte	0x68
 4152 0672 02       		.byte	0x2
 4153 0673 91       		.byte	0x91
 4154 0674 68       		.sleb128 -24
 4155 0675 0B       		.uleb128 0xb
 4156 0676 8A010000 		.4byte	.LASF60
 4157 067a 01       		.byte	0x1
 4158 067b F702     		.2byte	0x2f7
 4159 067d 68000000 		.4byte	0x68
 4160 0681 02       		.byte	0x2
 4161 0682 91       		.byte	0x91
 4162 0683 64       		.sleb128 -28
 4163 0684 0C       		.uleb128 0xc
 4164 0685 6900     		.ascii	"i\000"
 4165 0687 01       		.byte	0x1
 4166 0688 F802     		.2byte	0x2f8
 4167 068a 61000000 		.4byte	0x61
 4168 068e 02       		.byte	0x2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 89


 4169 068f 91       		.byte	0x91
 4170 0690 70       		.sleb128 -16
 4171 0691 0C       		.uleb128 0xc
 4172 0692 6A00     		.ascii	"j\000"
 4173 0694 01       		.byte	0x1
 4174 0695 F802     		.2byte	0x2f8
 4175 0697 61000000 		.4byte	0x61
 4176 069b 02       		.byte	0x2
 4177 069c 91       		.byte	0x91
 4178 069d 6C       		.sleb128 -20
 4179 069e 00       		.byte	0
 4180 069f 0A       		.uleb128 0xa
 4181 06a0 01       		.byte	0x1
 4182 06a1 DA010000 		.4byte	.LASF63
 4183 06a5 01       		.byte	0x1
 4184 06a6 1403     		.2byte	0x314
 4185 06a8 01       		.byte	0x1
 4186 06a9 00000000 		.4byte	.LFB46
 4187 06ad 40000000 		.4byte	.LFE46
 4188 06b1 B4020000 		.4byte	.LLST13
 4189 06b5 01       		.byte	0x1
 4190 06b6 CA060000 		.4byte	0x6ca
 4191 06ba 0E       		.uleb128 0xe
 4192 06bb 86030000 		.4byte	.LASF65
 4193 06bf 01       		.byte	0x1
 4194 06c0 1403     		.2byte	0x314
 4195 06c2 61000000 		.4byte	0x61
 4196 06c6 02       		.byte	0x2
 4197 06c7 91       		.byte	0x91
 4198 06c8 74       		.sleb128 -12
 4199 06c9 00       		.byte	0
 4200 06ca 0F       		.uleb128 0xf
 4201 06cb 68000000 		.4byte	0x68
 4202 06cf DA060000 		.4byte	0x6da
 4203 06d3 10       		.uleb128 0x10
 4204 06d4 9F000000 		.4byte	0x9f
 4205 06d8 31       		.byte	0x31
 4206 06d9 00       		.byte	0
 4207 06da 11       		.uleb128 0x11
 4208 06db 39020000 		.4byte	.LASF66
 4209 06df 01       		.byte	0x1
 4210 06e0 15       		.byte	0x15
 4211 06e1 CA060000 		.4byte	0x6ca
 4212 06e5 01       		.byte	0x1
 4213 06e6 05       		.byte	0x5
 4214 06e7 03       		.byte	0x3
 4215 06e8 00000000 		.4byte	holdingReg
 4216 06ec 0F       		.uleb128 0xf
 4217 06ed 30000000 		.4byte	0x30
 4218 06f1 FC060000 		.4byte	0x6fc
 4219 06f5 10       		.uleb128 0x10
 4220 06f6 9F000000 		.4byte	0x9f
 4221 06fa 31       		.byte	0x31
 4222 06fb 00       		.byte	0
 4223 06fc 11       		.uleb128 0x11
 4224 06fd 81040000 		.4byte	.LASF67
 4225 0701 01       		.byte	0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 90


 4226 0702 16       		.byte	0x16
 4227 0703 EC060000 		.4byte	0x6ec
 4228 0707 01       		.byte	0x1
 4229 0708 05       		.byte	0x5
 4230 0709 03       		.byte	0x3
 4231 070a 00000000 		.4byte	coils
 4232 070e 0F       		.uleb128 0xf
 4233 070f 30000000 		.4byte	0x30
 4234 0713 1E070000 		.4byte	0x71e
 4235 0717 10       		.uleb128 0x10
 4236 0718 9F000000 		.4byte	0x9f
 4237 071c 7C       		.byte	0x7c
 4238 071d 00       		.byte	0
 4239 071e 11       		.uleb128 0x11
 4240 071f 3D040000 		.4byte	.LASF68
 4241 0723 01       		.byte	0x1
 4242 0724 17       		.byte	0x17
 4243 0725 0E070000 		.4byte	0x70e
 4244 0729 01       		.byte	0x1
 4245 072a 05       		.byte	0x5
 4246 072b 03       		.byte	0x3
 4247 072c 00000000 		.4byte	received
 4248 0730 11       		.uleb128 0x11
 4249 0731 22010000 		.4byte	.LASF69
 4250 0735 01       		.byte	0x1
 4251 0736 18       		.byte	0x18
 4252 0737 0E070000 		.4byte	0x70e
 4253 073b 01       		.byte	0x1
 4254 073c 05       		.byte	0x5
 4255 073d 03       		.byte	0x3
 4256 073e 00000000 		.4byte	response
 4257 0742 11       		.uleb128 0x11
 4258 0743 EB010000 		.4byte	.LASF70
 4259 0747 01       		.byte	0x1
 4260 0748 1B       		.byte	0x1b
 4261 0749 9A000000 		.4byte	0x9a
 4262 074d 01       		.byte	0x1
 4263 074e 05       		.byte	0x5
 4264 074f 03       		.byte	0x3
 4265 0750 00000000 		.4byte	newMessage
 4266 0754 11       		.uleb128 0x11
 4267 0755 1D040000 		.4byte	.LASF71
 4268 0759 01       		.byte	0x1
 4269 075a 1C       		.byte	0x1c
 4270 075b 9A000000 		.4byte	0x9a
 4271 075f 01       		.byte	0x1
 4272 0760 05       		.byte	0x5
 4273 0761 03       		.byte	0x3
 4274 0762 00000000 		.4byte	middleOfMessage
 4275 0766 12       		.uleb128 0x12
 4276 0767 7A00     		.ascii	"z\000"
 4277 0769 01       		.byte	0x1
 4278 076a 1D       		.byte	0x1d
 4279 076b 9A000000 		.4byte	0x9a
 4280 076f 01       		.byte	0x1
 4281 0770 05       		.byte	0x5
 4282 0771 03       		.byte	0x3
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 91


 4283 0772 00000000 		.4byte	z
 4284 0776 11       		.uleb128 0x11
 4285 0777 A4010000 		.4byte	.LASF72
 4286 077b 01       		.byte	0x1
 4287 077c 1E       		.byte	0x1e
 4288 077d 9A000000 		.4byte	0x9a
 4289 0781 01       		.byte	0x1
 4290 0782 05       		.byte	0x5
 4291 0783 03       		.byte	0x3
 4292 0784 00000000 		.4byte	messageLengthNotChanged
 4293 0788 11       		.uleb128 0x11
 4294 0789 2B020000 		.4byte	.LASF64
 4295 078d 01       		.byte	0x1
 4296 078e 1F       		.byte	0x1f
 4297 078f 9A000000 		.4byte	0x9a
 4298 0793 01       		.byte	0x1
 4299 0794 05       		.byte	0x5
 4300 0795 03       		.byte	0x3
 4301 0796 00000000 		.4byte	messageLength
 4302 079a 11       		.uleb128 0x11
 4303 079b 46040000 		.4byte	.LASF73
 4304 079f 01       		.byte	0x1
 4305 07a0 20       		.byte	0x20
 4306 07a1 9A000000 		.4byte	0x9a
 4307 07a5 01       		.byte	0x1
 4308 07a6 05       		.byte	0x5
 4309 07a7 03       		.byte	0x3
 4310 07a8 00000000 		.4byte	oldMessageLength
 4311 07ac 11       		.uleb128 0x11
 4312 07ad 57020000 		.4byte	.LASF74
 4313 07b1 01       		.byte	0x1
 4314 07b2 21       		.byte	0x21
 4315 07b3 9A000000 		.4byte	0x9a
 4316 07b7 01       		.byte	0x1
 4317 07b8 05       		.byte	0x5
 4318 07b9 03       		.byte	0x3
 4319 07ba 00000000 		.4byte	timerCount
 4320 07be 11       		.uleb128 0x11
 4321 07bf 63040000 		.4byte	.LASF75
 4322 07c3 01       		.byte	0x1
 4323 07c4 22       		.byte	0x22
 4324 07c5 9A000000 		.4byte	0x9a
 4325 07c9 01       		.byte	0x1
 4326 07ca 05       		.byte	0x5
 4327 07cb 03       		.byte	0x3
 4328 07cc 00000000 		.4byte	middleMessageCount
 4329 07d0 11       		.uleb128 0x11
 4330 07d1 19000000 		.4byte	.LASF76
 4331 07d5 01       		.byte	0x1
 4332 07d6 23       		.byte	0x23
 4333 07d7 9A000000 		.4byte	0x9a
 4334 07db 01       		.byte	0x1
 4335 07dc 05       		.byte	0x5
 4336 07dd 03       		.byte	0x3
 4337 07de 00000000 		.4byte	newMessageCount
 4338 07e2 11       		.uleb128 0x11
 4339 07e3 75030000 		.4byte	.LASF77
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 92


 4340 07e7 01       		.byte	0x1
 4341 07e8 24       		.byte	0x24
 4342 07e9 9A000000 		.4byte	0x9a
 4343 07ed 01       		.byte	0x1
 4344 07ee 05       		.byte	0x5
 4345 07ef 03       		.byte	0x3
 4346 07f0 00000000 		.4byte	oldPin
 4347 07f4 11       		.uleb128 0x11
 4348 07f5 9F040000 		.4byte	.LASF78
 4349 07f9 01       		.byte	0x1
 4350 07fa 25       		.byte	0x25
 4351 07fb 9A000000 		.4byte	0x9a
 4352 07ff 01       		.byte	0x1
 4353 0800 05       		.byte	0x5
 4354 0801 03       		.byte	0x3
 4355 0802 00000000 		.4byte	modbusMessage
 4356 0806 11       		.uleb128 0x11
 4357 0807 62020000 		.4byte	.LASF79
 4358 080b 01       		.byte	0x1
 4359 080c 26       		.byte	0x26
 4360 080d 9A000000 		.4byte	0x9a
 4361 0811 01       		.byte	0x1
 4362 0812 05       		.byte	0x5
 4363 0813 03       		.byte	0x3
 4364 0814 00000000 		.4byte	turnLineAround
 4365 0818 00       		.byte	0
 4366              		.section	.debug_abbrev,"",%progbits
 4367              	.Ldebug_abbrev0:
 4368 0000 01       		.uleb128 0x1
 4369 0001 11       		.uleb128 0x11
 4370 0002 01       		.byte	0x1
 4371 0003 25       		.uleb128 0x25
 4372 0004 0E       		.uleb128 0xe
 4373 0005 13       		.uleb128 0x13
 4374 0006 0B       		.uleb128 0xb
 4375 0007 03       		.uleb128 0x3
 4376 0008 0E       		.uleb128 0xe
 4377 0009 1B       		.uleb128 0x1b
 4378 000a 0E       		.uleb128 0xe
 4379 000b 55       		.uleb128 0x55
 4380 000c 06       		.uleb128 0x6
 4381 000d 11       		.uleb128 0x11
 4382 000e 01       		.uleb128 0x1
 4383 000f 52       		.uleb128 0x52
 4384 0010 01       		.uleb128 0x1
 4385 0011 10       		.uleb128 0x10
 4386 0012 06       		.uleb128 0x6
 4387 0013 00       		.byte	0
 4388 0014 00       		.byte	0
 4389 0015 02       		.uleb128 0x2
 4390 0016 24       		.uleb128 0x24
 4391 0017 00       		.byte	0
 4392 0018 0B       		.uleb128 0xb
 4393 0019 0B       		.uleb128 0xb
 4394 001a 3E       		.uleb128 0x3e
 4395 001b 0B       		.uleb128 0xb
 4396 001c 03       		.uleb128 0x3
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 93


 4397 001d 0E       		.uleb128 0xe
 4398 001e 00       		.byte	0
 4399 001f 00       		.byte	0
 4400 0020 03       		.uleb128 0x3
 4401 0021 24       		.uleb128 0x24
 4402 0022 00       		.byte	0
 4403 0023 0B       		.uleb128 0xb
 4404 0024 0B       		.uleb128 0xb
 4405 0025 3E       		.uleb128 0x3e
 4406 0026 0B       		.uleb128 0xb
 4407 0027 03       		.uleb128 0x3
 4408 0028 08       		.uleb128 0x8
 4409 0029 00       		.byte	0
 4410 002a 00       		.byte	0
 4411 002b 04       		.uleb128 0x4
 4412 002c 16       		.uleb128 0x16
 4413 002d 00       		.byte	0
 4414 002e 03       		.uleb128 0x3
 4415 002f 0E       		.uleb128 0xe
 4416 0030 3A       		.uleb128 0x3a
 4417 0031 0B       		.uleb128 0xb
 4418 0032 3B       		.uleb128 0x3b
 4419 0033 0B       		.uleb128 0xb
 4420 0034 49       		.uleb128 0x49
 4421 0035 13       		.uleb128 0x13
 4422 0036 00       		.byte	0
 4423 0037 00       		.byte	0
 4424 0038 05       		.uleb128 0x5
 4425 0039 35       		.uleb128 0x35
 4426 003a 00       		.byte	0
 4427 003b 49       		.uleb128 0x49
 4428 003c 13       		.uleb128 0x13
 4429 003d 00       		.byte	0
 4430 003e 00       		.byte	0
 4431 003f 06       		.uleb128 0x6
 4432 0040 2E       		.uleb128 0x2e
 4433 0041 00       		.byte	0
 4434 0042 3F       		.uleb128 0x3f
 4435 0043 0C       		.uleb128 0xc
 4436 0044 03       		.uleb128 0x3
 4437 0045 0E       		.uleb128 0xe
 4438 0046 3A       		.uleb128 0x3a
 4439 0047 0B       		.uleb128 0xb
 4440 0048 3B       		.uleb128 0x3b
 4441 0049 0B       		.uleb128 0xb
 4442 004a 27       		.uleb128 0x27
 4443 004b 0C       		.uleb128 0xc
 4444 004c 11       		.uleb128 0x11
 4445 004d 01       		.uleb128 0x1
 4446 004e 12       		.uleb128 0x12
 4447 004f 01       		.uleb128 0x1
 4448 0050 40       		.uleb128 0x40
 4449 0051 06       		.uleb128 0x6
 4450 0052 9642     		.uleb128 0x2116
 4451 0054 0C       		.uleb128 0xc
 4452 0055 00       		.byte	0
 4453 0056 00       		.byte	0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 94


 4454 0057 07       		.uleb128 0x7
 4455 0058 2E       		.uleb128 0x2e
 4456 0059 01       		.byte	0x1
 4457 005a 3F       		.uleb128 0x3f
 4458 005b 0C       		.uleb128 0xc
 4459 005c 03       		.uleb128 0x3
 4460 005d 0E       		.uleb128 0xe
 4461 005e 3A       		.uleb128 0x3a
 4462 005f 0B       		.uleb128 0xb
 4463 0060 3B       		.uleb128 0x3b
 4464 0061 0B       		.uleb128 0xb
 4465 0062 27       		.uleb128 0x27
 4466 0063 0C       		.uleb128 0xc
 4467 0064 11       		.uleb128 0x11
 4468 0065 01       		.uleb128 0x1
 4469 0066 12       		.uleb128 0x12
 4470 0067 01       		.uleb128 0x1
 4471 0068 40       		.uleb128 0x40
 4472 0069 06       		.uleb128 0x6
 4473 006a 9642     		.uleb128 0x2116
 4474 006c 0C       		.uleb128 0xc
 4475 006d 01       		.uleb128 0x1
 4476 006e 13       		.uleb128 0x13
 4477 006f 00       		.byte	0
 4478 0070 00       		.byte	0
 4479 0071 08       		.uleb128 0x8
 4480 0072 34       		.uleb128 0x34
 4481 0073 00       		.byte	0
 4482 0074 03       		.uleb128 0x3
 4483 0075 0E       		.uleb128 0xe
 4484 0076 3A       		.uleb128 0x3a
 4485 0077 0B       		.uleb128 0xb
 4486 0078 3B       		.uleb128 0x3b
 4487 0079 0B       		.uleb128 0xb
 4488 007a 49       		.uleb128 0x49
 4489 007b 13       		.uleb128 0x13
 4490 007c 02       		.uleb128 0x2
 4491 007d 0A       		.uleb128 0xa
 4492 007e 00       		.byte	0
 4493 007f 00       		.byte	0
 4494 0080 09       		.uleb128 0x9
 4495 0081 34       		.uleb128 0x34
 4496 0082 00       		.byte	0
 4497 0083 03       		.uleb128 0x3
 4498 0084 08       		.uleb128 0x8
 4499 0085 3A       		.uleb128 0x3a
 4500 0086 0B       		.uleb128 0xb
 4501 0087 3B       		.uleb128 0x3b
 4502 0088 0B       		.uleb128 0xb
 4503 0089 49       		.uleb128 0x49
 4504 008a 13       		.uleb128 0x13
 4505 008b 02       		.uleb128 0x2
 4506 008c 0A       		.uleb128 0xa
 4507 008d 00       		.byte	0
 4508 008e 00       		.byte	0
 4509 008f 0A       		.uleb128 0xa
 4510 0090 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 95


 4511 0091 01       		.byte	0x1
 4512 0092 3F       		.uleb128 0x3f
 4513 0093 0C       		.uleb128 0xc
 4514 0094 03       		.uleb128 0x3
 4515 0095 0E       		.uleb128 0xe
 4516 0096 3A       		.uleb128 0x3a
 4517 0097 0B       		.uleb128 0xb
 4518 0098 3B       		.uleb128 0x3b
 4519 0099 05       		.uleb128 0x5
 4520 009a 27       		.uleb128 0x27
 4521 009b 0C       		.uleb128 0xc
 4522 009c 11       		.uleb128 0x11
 4523 009d 01       		.uleb128 0x1
 4524 009e 12       		.uleb128 0x12
 4525 009f 01       		.uleb128 0x1
 4526 00a0 40       		.uleb128 0x40
 4527 00a1 06       		.uleb128 0x6
 4528 00a2 9642     		.uleb128 0x2116
 4529 00a4 0C       		.uleb128 0xc
 4530 00a5 01       		.uleb128 0x1
 4531 00a6 13       		.uleb128 0x13
 4532 00a7 00       		.byte	0
 4533 00a8 00       		.byte	0
 4534 00a9 0B       		.uleb128 0xb
 4535 00aa 34       		.uleb128 0x34
 4536 00ab 00       		.byte	0
 4537 00ac 03       		.uleb128 0x3
 4538 00ad 0E       		.uleb128 0xe
 4539 00ae 3A       		.uleb128 0x3a
 4540 00af 0B       		.uleb128 0xb
 4541 00b0 3B       		.uleb128 0x3b
 4542 00b1 05       		.uleb128 0x5
 4543 00b2 49       		.uleb128 0x49
 4544 00b3 13       		.uleb128 0x13
 4545 00b4 02       		.uleb128 0x2
 4546 00b5 0A       		.uleb128 0xa
 4547 00b6 00       		.byte	0
 4548 00b7 00       		.byte	0
 4549 00b8 0C       		.uleb128 0xc
 4550 00b9 34       		.uleb128 0x34
 4551 00ba 00       		.byte	0
 4552 00bb 03       		.uleb128 0x3
 4553 00bc 08       		.uleb128 0x8
 4554 00bd 3A       		.uleb128 0x3a
 4555 00be 0B       		.uleb128 0xb
 4556 00bf 3B       		.uleb128 0x3b
 4557 00c0 05       		.uleb128 0x5
 4558 00c1 49       		.uleb128 0x49
 4559 00c2 13       		.uleb128 0x13
 4560 00c3 02       		.uleb128 0x2
 4561 00c4 0A       		.uleb128 0xa
 4562 00c5 00       		.byte	0
 4563 00c6 00       		.byte	0
 4564 00c7 0D       		.uleb128 0xd
 4565 00c8 2E       		.uleb128 0x2e
 4566 00c9 01       		.byte	0x1
 4567 00ca 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 96


 4568 00cb 0C       		.uleb128 0xc
 4569 00cc 03       		.uleb128 0x3
 4570 00cd 0E       		.uleb128 0xe
 4571 00ce 3A       		.uleb128 0x3a
 4572 00cf 0B       		.uleb128 0xb
 4573 00d0 3B       		.uleb128 0x3b
 4574 00d1 05       		.uleb128 0x5
 4575 00d2 27       		.uleb128 0x27
 4576 00d3 0C       		.uleb128 0xc
 4577 00d4 49       		.uleb128 0x49
 4578 00d5 13       		.uleb128 0x13
 4579 00d6 11       		.uleb128 0x11
 4580 00d7 01       		.uleb128 0x1
 4581 00d8 12       		.uleb128 0x12
 4582 00d9 01       		.uleb128 0x1
 4583 00da 40       		.uleb128 0x40
 4584 00db 06       		.uleb128 0x6
 4585 00dc 9742     		.uleb128 0x2117
 4586 00de 0C       		.uleb128 0xc
 4587 00df 01       		.uleb128 0x1
 4588 00e0 13       		.uleb128 0x13
 4589 00e1 00       		.byte	0
 4590 00e2 00       		.byte	0
 4591 00e3 0E       		.uleb128 0xe
 4592 00e4 05       		.uleb128 0x5
 4593 00e5 00       		.byte	0
 4594 00e6 03       		.uleb128 0x3
 4595 00e7 0E       		.uleb128 0xe
 4596 00e8 3A       		.uleb128 0x3a
 4597 00e9 0B       		.uleb128 0xb
 4598 00ea 3B       		.uleb128 0x3b
 4599 00eb 05       		.uleb128 0x5
 4600 00ec 49       		.uleb128 0x49
 4601 00ed 13       		.uleb128 0x13
 4602 00ee 02       		.uleb128 0x2
 4603 00ef 0A       		.uleb128 0xa
 4604 00f0 00       		.byte	0
 4605 00f1 00       		.byte	0
 4606 00f2 0F       		.uleb128 0xf
 4607 00f3 01       		.uleb128 0x1
 4608 00f4 01       		.byte	0x1
 4609 00f5 49       		.uleb128 0x49
 4610 00f6 13       		.uleb128 0x13
 4611 00f7 01       		.uleb128 0x1
 4612 00f8 13       		.uleb128 0x13
 4613 00f9 00       		.byte	0
 4614 00fa 00       		.byte	0
 4615 00fb 10       		.uleb128 0x10
 4616 00fc 21       		.uleb128 0x21
 4617 00fd 00       		.byte	0
 4618 00fe 49       		.uleb128 0x49
 4619 00ff 13       		.uleb128 0x13
 4620 0100 2F       		.uleb128 0x2f
 4621 0101 0B       		.uleb128 0xb
 4622 0102 00       		.byte	0
 4623 0103 00       		.byte	0
 4624 0104 11       		.uleb128 0x11
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 97


 4625 0105 34       		.uleb128 0x34
 4626 0106 00       		.byte	0
 4627 0107 03       		.uleb128 0x3
 4628 0108 0E       		.uleb128 0xe
 4629 0109 3A       		.uleb128 0x3a
 4630 010a 0B       		.uleb128 0xb
 4631 010b 3B       		.uleb128 0x3b
 4632 010c 0B       		.uleb128 0xb
 4633 010d 49       		.uleb128 0x49
 4634 010e 13       		.uleb128 0x13
 4635 010f 3F       		.uleb128 0x3f
 4636 0110 0C       		.uleb128 0xc
 4637 0111 02       		.uleb128 0x2
 4638 0112 0A       		.uleb128 0xa
 4639 0113 00       		.byte	0
 4640 0114 00       		.byte	0
 4641 0115 12       		.uleb128 0x12
 4642 0116 34       		.uleb128 0x34
 4643 0117 00       		.byte	0
 4644 0118 03       		.uleb128 0x3
 4645 0119 08       		.uleb128 0x8
 4646 011a 3A       		.uleb128 0x3a
 4647 011b 0B       		.uleb128 0xb
 4648 011c 3B       		.uleb128 0x3b
 4649 011d 0B       		.uleb128 0xb
 4650 011e 49       		.uleb128 0x49
 4651 011f 13       		.uleb128 0x13
 4652 0120 3F       		.uleb128 0x3f
 4653 0121 0C       		.uleb128 0xc
 4654 0122 02       		.uleb128 0x2
 4655 0123 0A       		.uleb128 0xa
 4656 0124 00       		.byte	0
 4657 0125 00       		.byte	0
 4658 0126 00       		.byte	0
 4659              		.section	.debug_loc,"",%progbits
 4660              	.Ldebug_loc0:
 4661              	.LLST0:
 4662 0000 00000000 		.4byte	.LFB33
 4663 0004 02000000 		.4byte	.LCFI0
 4664 0008 0200     		.2byte	0x2
 4665 000a 7D       		.byte	0x7d
 4666 000b 00       		.sleb128 0
 4667 000c 02000000 		.4byte	.LCFI0
 4668 0010 04000000 		.4byte	.LCFI1
 4669 0014 0200     		.2byte	0x2
 4670 0016 7D       		.byte	0x7d
 4671 0017 10       		.sleb128 16
 4672 0018 04000000 		.4byte	.LCFI1
 4673 001c D8000000 		.4byte	.LFE33
 4674 0020 0200     		.2byte	0x2
 4675 0022 77       		.byte	0x77
 4676 0023 10       		.sleb128 16
 4677 0024 00000000 		.4byte	0
 4678 0028 00000000 		.4byte	0
 4679              	.LLST1:
 4680 002c 00000000 		.4byte	.LFB34
 4681 0030 02000000 		.4byte	.LCFI2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 98


 4682 0034 0200     		.2byte	0x2
 4683 0036 7D       		.byte	0x7d
 4684 0037 00       		.sleb128 0
 4685 0038 02000000 		.4byte	.LCFI2
 4686 003c 04000000 		.4byte	.LCFI3
 4687 0040 0200     		.2byte	0x2
 4688 0042 7D       		.byte	0x7d
 4689 0043 08       		.sleb128 8
 4690 0044 04000000 		.4byte	.LCFI3
 4691 0048 FC000000 		.4byte	.LFE34
 4692 004c 0200     		.2byte	0x2
 4693 004e 77       		.byte	0x77
 4694 004f 08       		.sleb128 8
 4695 0050 00000000 		.4byte	0
 4696 0054 00000000 		.4byte	0
 4697              	.LLST2:
 4698 0058 00000000 		.4byte	.LFB35
 4699 005c 02000000 		.4byte	.LCFI4
 4700 0060 0200     		.2byte	0x2
 4701 0062 7D       		.byte	0x7d
 4702 0063 00       		.sleb128 0
 4703 0064 02000000 		.4byte	.LCFI4
 4704 0068 04000000 		.4byte	.LCFI5
 4705 006c 0200     		.2byte	0x2
 4706 006e 7D       		.byte	0x7d
 4707 006f 08       		.sleb128 8
 4708 0070 04000000 		.4byte	.LCFI5
 4709 0074 98000000 		.4byte	.LFE35
 4710 0078 0200     		.2byte	0x2
 4711 007a 77       		.byte	0x77
 4712 007b 08       		.sleb128 8
 4713 007c 00000000 		.4byte	0
 4714 0080 00000000 		.4byte	0
 4715              	.LLST3:
 4716 0084 00000000 		.4byte	.LFB36
 4717 0088 02000000 		.4byte	.LCFI6
 4718 008c 0200     		.2byte	0x2
 4719 008e 7D       		.byte	0x7d
 4720 008f 00       		.sleb128 0
 4721 0090 02000000 		.4byte	.LCFI6
 4722 0094 04000000 		.4byte	.LCFI7
 4723 0098 0200     		.2byte	0x2
 4724 009a 7D       		.byte	0x7d
 4725 009b 0C       		.sleb128 12
 4726 009c 04000000 		.4byte	.LCFI7
 4727 00a0 06000000 		.4byte	.LCFI8
 4728 00a4 0200     		.2byte	0x2
 4729 00a6 7D       		.byte	0x7d
 4730 00a7 28       		.sleb128 40
 4731 00a8 06000000 		.4byte	.LCFI8
 4732 00ac 98020000 		.4byte	.LFE36
 4733 00b0 0200     		.2byte	0x2
 4734 00b2 77       		.byte	0x77
 4735 00b3 28       		.sleb128 40
 4736 00b4 00000000 		.4byte	0
 4737 00b8 00000000 		.4byte	0
 4738              	.LLST4:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 99


 4739 00bc 00000000 		.4byte	.LFB37
 4740 00c0 02000000 		.4byte	.LCFI9
 4741 00c4 0200     		.2byte	0x2
 4742 00c6 7D       		.byte	0x7d
 4743 00c7 00       		.sleb128 0
 4744 00c8 02000000 		.4byte	.LCFI9
 4745 00cc 04000000 		.4byte	.LCFI10
 4746 00d0 0200     		.2byte	0x2
 4747 00d2 7D       		.byte	0x7d
 4748 00d3 0C       		.sleb128 12
 4749 00d4 04000000 		.4byte	.LCFI10
 4750 00d8 06000000 		.4byte	.LCFI11
 4751 00dc 0200     		.2byte	0x2
 4752 00de 7D       		.byte	0x7d
 4753 00df 28       		.sleb128 40
 4754 00e0 06000000 		.4byte	.LCFI11
 4755 00e4 98020000 		.4byte	.LFE37
 4756 00e8 0200     		.2byte	0x2
 4757 00ea 77       		.byte	0x77
 4758 00eb 28       		.sleb128 40
 4759 00ec 00000000 		.4byte	0
 4760 00f0 00000000 		.4byte	0
 4761              	.LLST5:
 4762 00f4 00000000 		.4byte	.LFB38
 4763 00f8 02000000 		.4byte	.LCFI12
 4764 00fc 0200     		.2byte	0x2
 4765 00fe 7D       		.byte	0x7d
 4766 00ff 00       		.sleb128 0
 4767 0100 02000000 		.4byte	.LCFI12
 4768 0104 04000000 		.4byte	.LCFI13
 4769 0108 0200     		.2byte	0x2
 4770 010a 7D       		.byte	0x7d
 4771 010b 08       		.sleb128 8
 4772 010c 04000000 		.4byte	.LCFI13
 4773 0110 06000000 		.4byte	.LCFI14
 4774 0114 0200     		.2byte	0x2
 4775 0116 7D       		.byte	0x7d
 4776 0117 20       		.sleb128 32
 4777 0118 06000000 		.4byte	.LCFI14
 4778 011c A8010000 		.4byte	.LFE38
 4779 0120 0200     		.2byte	0x2
 4780 0122 77       		.byte	0x77
 4781 0123 20       		.sleb128 32
 4782 0124 00000000 		.4byte	0
 4783 0128 00000000 		.4byte	0
 4784              	.LLST6:
 4785 012c 00000000 		.4byte	.LFB39
 4786 0130 02000000 		.4byte	.LCFI15
 4787 0134 0200     		.2byte	0x2
 4788 0136 7D       		.byte	0x7d
 4789 0137 00       		.sleb128 0
 4790 0138 02000000 		.4byte	.LCFI15
 4791 013c 04000000 		.4byte	.LCFI16
 4792 0140 0200     		.2byte	0x2
 4793 0142 7D       		.byte	0x7d
 4794 0143 08       		.sleb128 8
 4795 0144 04000000 		.4byte	.LCFI16
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 100


 4796 0148 06000000 		.4byte	.LCFI17
 4797 014c 0200     		.2byte	0x2
 4798 014e 7D       		.byte	0x7d
 4799 014f 20       		.sleb128 32
 4800 0150 06000000 		.4byte	.LCFI17
 4801 0154 AC010000 		.4byte	.LFE39
 4802 0158 0200     		.2byte	0x2
 4803 015a 77       		.byte	0x77
 4804 015b 20       		.sleb128 32
 4805 015c 00000000 		.4byte	0
 4806 0160 00000000 		.4byte	0
 4807              	.LLST7:
 4808 0164 00000000 		.4byte	.LFB40
 4809 0168 02000000 		.4byte	.LCFI18
 4810 016c 0200     		.2byte	0x2
 4811 016e 7D       		.byte	0x7d
 4812 016f 00       		.sleb128 0
 4813 0170 02000000 		.4byte	.LCFI18
 4814 0174 04000000 		.4byte	.LCFI19
 4815 0178 0200     		.2byte	0x2
 4816 017a 7D       		.byte	0x7d
 4817 017b 08       		.sleb128 8
 4818 017c 04000000 		.4byte	.LCFI19
 4819 0180 06000000 		.4byte	.LCFI20
 4820 0184 0200     		.2byte	0x2
 4821 0186 7D       		.byte	0x7d
 4822 0187 28       		.sleb128 40
 4823 0188 06000000 		.4byte	.LCFI20
 4824 018c 00010000 		.4byte	.LFE40
 4825 0190 0200     		.2byte	0x2
 4826 0192 77       		.byte	0x77
 4827 0193 28       		.sleb128 40
 4828 0194 00000000 		.4byte	0
 4829 0198 00000000 		.4byte	0
 4830              	.LLST8:
 4831 019c 00000000 		.4byte	.LFB41
 4832 01a0 02000000 		.4byte	.LCFI21
 4833 01a4 0200     		.2byte	0x2
 4834 01a6 7D       		.byte	0x7d
 4835 01a7 00       		.sleb128 0
 4836 01a8 02000000 		.4byte	.LCFI21
 4837 01ac 04000000 		.4byte	.LCFI22
 4838 01b0 0200     		.2byte	0x2
 4839 01b2 7D       		.byte	0x7d
 4840 01b3 08       		.sleb128 8
 4841 01b4 04000000 		.4byte	.LCFI22
 4842 01b8 06000000 		.4byte	.LCFI23
 4843 01bc 0200     		.2byte	0x2
 4844 01be 7D       		.byte	0x7d
 4845 01bf 38       		.sleb128 56
 4846 01c0 06000000 		.4byte	.LCFI23
 4847 01c4 84010000 		.4byte	.LFE41
 4848 01c8 0200     		.2byte	0x2
 4849 01ca 77       		.byte	0x77
 4850 01cb 38       		.sleb128 56
 4851 01cc 00000000 		.4byte	0
 4852 01d0 00000000 		.4byte	0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 101


 4853              	.LLST9:
 4854 01d4 00000000 		.4byte	.LFB42
 4855 01d8 02000000 		.4byte	.LCFI24
 4856 01dc 0200     		.2byte	0x2
 4857 01de 7D       		.byte	0x7d
 4858 01df 00       		.sleb128 0
 4859 01e0 02000000 		.4byte	.LCFI24
 4860 01e4 04000000 		.4byte	.LCFI25
 4861 01e8 0200     		.2byte	0x2
 4862 01ea 7D       		.byte	0x7d
 4863 01eb 08       		.sleb128 8
 4864 01ec 04000000 		.4byte	.LCFI25
 4865 01f0 06000000 		.4byte	.LCFI26
 4866 01f4 0200     		.2byte	0x2
 4867 01f6 7D       		.byte	0x7d
 4868 01f7 28       		.sleb128 40
 4869 01f8 06000000 		.4byte	.LCFI26
 4870 01fc 10010000 		.4byte	.LFE42
 4871 0200 0200     		.2byte	0x2
 4872 0202 77       		.byte	0x77
 4873 0203 28       		.sleb128 40
 4874 0204 00000000 		.4byte	0
 4875 0208 00000000 		.4byte	0
 4876              	.LLST10:
 4877 020c 00000000 		.4byte	.LFB43
 4878 0210 02000000 		.4byte	.LCFI27
 4879 0214 0200     		.2byte	0x2
 4880 0216 7D       		.byte	0x7d
 4881 0217 00       		.sleb128 0
 4882 0218 02000000 		.4byte	.LCFI27
 4883 021c 04000000 		.4byte	.LCFI28
 4884 0220 0200     		.2byte	0x2
 4885 0222 7D       		.byte	0x7d
 4886 0223 08       		.sleb128 8
 4887 0224 04000000 		.4byte	.LCFI28
 4888 0228 06000000 		.4byte	.LCFI29
 4889 022c 0200     		.2byte	0x2
 4890 022e 7D       		.byte	0x7d
 4891 022f 30       		.sleb128 48
 4892 0230 06000000 		.4byte	.LCFI29
 4893 0234 64020000 		.4byte	.LFE43
 4894 0238 0200     		.2byte	0x2
 4895 023a 77       		.byte	0x77
 4896 023b 30       		.sleb128 48
 4897 023c 00000000 		.4byte	0
 4898 0240 00000000 		.4byte	0
 4899              	.LLST11:
 4900 0244 00000000 		.4byte	.LFB44
 4901 0248 02000000 		.4byte	.LCFI30
 4902 024c 0200     		.2byte	0x2
 4903 024e 7D       		.byte	0x7d
 4904 024f 00       		.sleb128 0
 4905 0250 02000000 		.4byte	.LCFI30
 4906 0254 04000000 		.4byte	.LCFI31
 4907 0258 0200     		.2byte	0x2
 4908 025a 7D       		.byte	0x7d
 4909 025b 08       		.sleb128 8
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 102


 4910 025c 04000000 		.4byte	.LCFI31
 4911 0260 06000000 		.4byte	.LCFI32
 4912 0264 0200     		.2byte	0x2
 4913 0266 7D       		.byte	0x7d
 4914 0267 28       		.sleb128 40
 4915 0268 06000000 		.4byte	.LCFI32
 4916 026c AC000000 		.4byte	.LFE44
 4917 0270 0200     		.2byte	0x2
 4918 0272 77       		.byte	0x77
 4919 0273 28       		.sleb128 40
 4920 0274 00000000 		.4byte	0
 4921 0278 00000000 		.4byte	0
 4922              	.LLST12:
 4923 027c 00000000 		.4byte	.LFB45
 4924 0280 02000000 		.4byte	.LCFI33
 4925 0284 0200     		.2byte	0x2
 4926 0286 7D       		.byte	0x7d
 4927 0287 00       		.sleb128 0
 4928 0288 02000000 		.4byte	.LCFI33
 4929 028c 04000000 		.4byte	.LCFI34
 4930 0290 0200     		.2byte	0x2
 4931 0292 7D       		.byte	0x7d
 4932 0293 08       		.sleb128 8
 4933 0294 04000000 		.4byte	.LCFI34
 4934 0298 06000000 		.4byte	.LCFI35
 4935 029c 0200     		.2byte	0x2
 4936 029e 7D       		.byte	0x7d
 4937 029f 20       		.sleb128 32
 4938 02a0 06000000 		.4byte	.LCFI35
 4939 02a4 C0000000 		.4byte	.LFE45
 4940 02a8 0200     		.2byte	0x2
 4941 02aa 77       		.byte	0x77
 4942 02ab 20       		.sleb128 32
 4943 02ac 00000000 		.4byte	0
 4944 02b0 00000000 		.4byte	0
 4945              	.LLST13:
 4946 02b4 00000000 		.4byte	.LFB46
 4947 02b8 02000000 		.4byte	.LCFI36
 4948 02bc 0200     		.2byte	0x2
 4949 02be 7D       		.byte	0x7d
 4950 02bf 00       		.sleb128 0
 4951 02c0 02000000 		.4byte	.LCFI36
 4952 02c4 04000000 		.4byte	.LCFI37
 4953 02c8 0200     		.2byte	0x2
 4954 02ca 7D       		.byte	0x7d
 4955 02cb 08       		.sleb128 8
 4956 02cc 04000000 		.4byte	.LCFI37
 4957 02d0 06000000 		.4byte	.LCFI38
 4958 02d4 0200     		.2byte	0x2
 4959 02d6 7D       		.byte	0x7d
 4960 02d7 10       		.sleb128 16
 4961 02d8 06000000 		.4byte	.LCFI38
 4962 02dc 40000000 		.4byte	.LFE46
 4963 02e0 0200     		.2byte	0x2
 4964 02e2 77       		.byte	0x77
 4965 02e3 10       		.sleb128 16
 4966 02e4 00000000 		.4byte	0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 103


 4967 02e8 00000000 		.4byte	0
 4968              		.section	.debug_aranges,"",%progbits
 4969 0000 84000000 		.4byte	0x84
 4970 0004 0200     		.2byte	0x2
 4971 0006 00000000 		.4byte	.Ldebug_info0
 4972 000a 04       		.byte	0x4
 4973 000b 00       		.byte	0
 4974 000c 0000     		.2byte	0
 4975 000e 0000     		.2byte	0
 4976 0010 00000000 		.4byte	.LFB33
 4977 0014 D8000000 		.4byte	.LFE33-.LFB33
 4978 0018 00000000 		.4byte	.LFB34
 4979 001c FC000000 		.4byte	.LFE34-.LFB34
 4980 0020 00000000 		.4byte	.LFB35
 4981 0024 98000000 		.4byte	.LFE35-.LFB35
 4982 0028 00000000 		.4byte	.LFB36
 4983 002c 98020000 		.4byte	.LFE36-.LFB36
 4984 0030 00000000 		.4byte	.LFB37
 4985 0034 98020000 		.4byte	.LFE37-.LFB37
 4986 0038 00000000 		.4byte	.LFB38
 4987 003c A8010000 		.4byte	.LFE38-.LFB38
 4988 0040 00000000 		.4byte	.LFB39
 4989 0044 AC010000 		.4byte	.LFE39-.LFB39
 4990 0048 00000000 		.4byte	.LFB40
 4991 004c 00010000 		.4byte	.LFE40-.LFB40
 4992 0050 00000000 		.4byte	.LFB41
 4993 0054 84010000 		.4byte	.LFE41-.LFB41
 4994 0058 00000000 		.4byte	.LFB42
 4995 005c 10010000 		.4byte	.LFE42-.LFB42
 4996 0060 00000000 		.4byte	.LFB43
 4997 0064 64020000 		.4byte	.LFE43-.LFB43
 4998 0068 00000000 		.4byte	.LFB44
 4999 006c AC000000 		.4byte	.LFE44-.LFB44
 5000 0070 00000000 		.4byte	.LFB45
 5001 0074 C0000000 		.4byte	.LFE45-.LFB45
 5002 0078 00000000 		.4byte	.LFB46
 5003 007c 40000000 		.4byte	.LFE46-.LFB46
 5004 0080 00000000 		.4byte	0
 5005 0084 00000000 		.4byte	0
 5006              		.section	.debug_ranges,"",%progbits
 5007              	.Ldebug_ranges0:
 5008 0000 00000000 		.4byte	.LFB33
 5009 0004 D8000000 		.4byte	.LFE33
 5010 0008 00000000 		.4byte	.LFB34
 5011 000c FC000000 		.4byte	.LFE34
 5012 0010 00000000 		.4byte	.LFB35
 5013 0014 98000000 		.4byte	.LFE35
 5014 0018 00000000 		.4byte	.LFB36
 5015 001c 98020000 		.4byte	.LFE36
 5016 0020 00000000 		.4byte	.LFB37
 5017 0024 98020000 		.4byte	.LFE37
 5018 0028 00000000 		.4byte	.LFB38
 5019 002c A8010000 		.4byte	.LFE38
 5020 0030 00000000 		.4byte	.LFB39
 5021 0034 AC010000 		.4byte	.LFE39
 5022 0038 00000000 		.4byte	.LFB40
 5023 003c 00010000 		.4byte	.LFE40
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 104


 5024 0040 00000000 		.4byte	.LFB41
 5025 0044 84010000 		.4byte	.LFE41
 5026 0048 00000000 		.4byte	.LFB42
 5027 004c 10010000 		.4byte	.LFE42
 5028 0050 00000000 		.4byte	.LFB43
 5029 0054 64020000 		.4byte	.LFE43
 5030 0058 00000000 		.4byte	.LFB44
 5031 005c AC000000 		.4byte	.LFE44
 5032 0060 00000000 		.4byte	.LFB45
 5033 0064 C0000000 		.4byte	.LFE45
 5034 0068 00000000 		.4byte	.LFB46
 5035 006c 40000000 		.4byte	.LFE46
 5036 0070 00000000 		.4byte	0
 5037 0074 00000000 		.4byte	0
 5038              		.section	.debug_line,"",%progbits
 5039              	.Ldebug_line0:
 5040 0000 40040000 		.section	.debug_str,"MS",%progbits,1
 5040      02004700 
 5040      00000201 
 5040      FB0E0D00 
 5040      01010101 
 5041              	.LASF58:
 5042 0000 776D635F 		.ascii	"wmc_numCoilsLow\000"
 5042      6E756D43 
 5042      6F696C73 
 5042      4C6F7700 
 5043              	.LASF62:
 5044 0010 63686563 		.ascii	"checkCRC\000"
 5044      6B435243 
 5044      00
 5045              	.LASF76:
 5046 0019 6E65774D 		.ascii	"newMessageCount\000"
 5046      65737361 
 5046      6765436F 
 5046      756E7400 
 5047              	.LASF46:
 5048 0029 77635F41 		.ascii	"wc_AddressLow\000"
 5048      64647265 
 5048      73734C6F 
 5048      7700
 5049              	.LASF47:
 5050 0037 77635F41 		.ascii	"wc_AddressHigh\000"
 5050      64647265 
 5050      73734869 
 5050      676800
 5051              	.LASF54:
 5052 0046 776D635F 		.ascii	"wmc_AddressHigh\000"
 5052      41646472 
 5052      65737348 
 5052      69676800 
 5053              	.LASF7:
 5054 0056 6C6F6E67 		.ascii	"long long unsigned int\000"
 5054      206C6F6E 
 5054      6720756E 
 5054      7369676E 
 5054      65642069 
 5055              	.LASF44:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 105


 5056 006d 76616C54 		.ascii	"valToWrite\000"
 5056      6F577269 
 5056      746500
 5057              	.LASF49:
 5058 0078 77635F76 		.ascii	"wc_valToWrite\000"
 5058      616C546F 
 5058      57726974 
 5058      6500
 5059              	.LASF42:
 5060 0086 776D725F 		.ascii	"wmr_numBytes\000"
 5060      6E756D42 
 5060      79746573 
 5060      00
 5061              	.LASF6:
 5062 0093 6C6F6E67 		.ascii	"long long int\000"
 5062      206C6F6E 
 5062      6720696E 
 5062      7400
 5063              	.LASF0:
 5064 00a1 7369676E 		.ascii	"signed char\000"
 5064      65642063 
 5064      68617200 
 5065              	.LASF41:
 5066 00ad 776D725F 		.ascii	"wmr_numRegsLow\000"
 5066      6E756D52 
 5066      6567734C 
 5066      6F7700
 5067              	.LASF15:
 5068 00bc 6465636F 		.ascii	"decodeMessage\000"
 5068      64654D65 
 5068      73736167 
 5068      6500
 5069              	.LASF20:
 5070 00ca 686F774D 		.ascii	"howManyBytes\000"
 5070      616E7942 
 5070      79746573 
 5070      00
 5071              	.LASF24:
 5072 00d7 72656164 		.ascii	"readInputReg\000"
 5072      496E7075 
 5072      74526567 
 5072      00
 5073              	.LASF57:
 5074 00e4 776D635F 		.ascii	"wmc_numCoilsHigh\000"
 5074      6E756D43 
 5074      6F696C73 
 5074      48696768 
 5074      00
 5075              	.LASF4:
 5076 00f5 6C6F6E67 		.ascii	"long int\000"
 5076      20696E74 
 5076      00
 5077              	.LASF18:
 5078 00fe 72635F41 		.ascii	"rc_Address\000"
 5078      64647265 
 5078      737300
 5079              	.LASF48:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 106


 5080 0109 77635F41 		.ascii	"wc_Address\000"
 5080      64647265 
 5080      737300
 5081              	.LASF27:
 5082 0114 72656164 		.ascii	"readReg\000"
 5082      52656700 
 5083              	.LASF9:
 5084 011c 75696E74 		.ascii	"uint8\000"
 5084      3800
 5085              	.LASF69:
 5086 0122 72657370 		.ascii	"response\000"
 5086      6F6E7365 
 5086      00
 5087              	.LASF12:
 5088 012b 646F7562 		.ascii	"double\000"
 5088      6C6500
 5089              	.LASF10:
 5090 0132 75696E74 		.ascii	"uint32\000"
 5090      333200
 5091              	.LASF39:
 5092 0139 776D725F 		.ascii	"wmr_numRegs\000"
 5092      6E756D52 
 5092      65677300 
 5093              	.LASF37:
 5094 0145 776D725F 		.ascii	"wmr_AddressHigh\000"
 5094      41646472 
 5094      65737348 
 5094      69676800 
 5095              	.LASF56:
 5096 0155 776D635F 		.ascii	"wmc_numCoils\000"
 5096      6E756D43 
 5096      6F696C73 
 5096      00
 5097              	.LASF8:
 5098 0162 756E7369 		.ascii	"unsigned int\000"
 5098      676E6564 
 5098      20696E74 
 5098      00
 5099              	.LASF28:
 5100 016f 77726974 		.ascii	"writeReg\000"
 5100      65526567 
 5100      00
 5101              	.LASF5:
 5102 0178 6C6F6E67 		.ascii	"long unsigned int\000"
 5102      20756E73 
 5102      69676E65 
 5102      6420696E 
 5102      7400
 5103              	.LASF60:
 5104 018a 6372634C 		.ascii	"crcLow\000"
 5104      6F7700
 5105              	.LASF3:
 5106 0191 73686F72 		.ascii	"short unsigned int\000"
 5106      7420756E 
 5106      7369676E 
 5106      65642069 
 5106      6E7400
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 107


 5107              	.LASF72:
 5108 01a4 6D657373 		.ascii	"messageLengthNotChanged\000"
 5108      6167654C 
 5108      656E6774 
 5108      684E6F74 
 5108      4368616E 
 5109              	.LASF59:
 5110 01bc 63726348 		.ascii	"crcHigh\000"
 5110      69676800 
 5111              	.LASF25:
 5112 01c4 72725F41 		.ascii	"rr_Address\000"
 5112      64647265 
 5112      737300
 5113              	.LASF31:
 5114 01cf 77725F41 		.ascii	"wr_Address\000"
 5114      64647265 
 5114      737300
 5115              	.LASF63:
 5116 01da 72657370 		.ascii	"responseFinished\000"
 5116      6F6E7365 
 5116      46696E69 
 5116      73686564 
 5116      00
 5117              	.LASF70:
 5118 01eb 6E65774D 		.ascii	"newMessage\000"
 5118      65737361 
 5118      676500
 5119              	.LASF53:
 5120 01f6 776D635F 		.ascii	"wmc_Address\000"
 5120      41646472 
 5120      65737300 
 5121              	.LASF51:
 5122 0202 77635F76 		.ascii	"wc_valToWriteHigh\000"
 5122      616C546F 
 5122      57726974 
 5122      65486967 
 5122      6800
 5123              	.LASF23:
 5124 0214 72656164 		.ascii	"readInputCoil\000"
 5124      496E7075 
 5124      74436F69 
 5124      6C00
 5125              	.LASF14:
 5126 0222 73697A65 		.ascii	"sizetype\000"
 5126      74797065 
 5126      00
 5127              	.LASF64:
 5128 022b 6D657373 		.ascii	"messageLength\000"
 5128      6167654C 
 5128      656E6774 
 5128      6800
 5129              	.LASF66:
 5130 0239 686F6C64 		.ascii	"holdingReg\000"
 5130      696E6752 
 5130      656700
 5131              	.LASF52:
 5132 0244 77726974 		.ascii	"writeMultipleCoils\000"
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 108


 5132      654D756C 
 5132      7469706C 
 5132      65436F69 
 5132      6C7300
 5133              	.LASF74:
 5134 0257 74696D65 		.ascii	"timerCount\000"
 5134      72436F75 
 5134      6E7400
 5135              	.LASF79:
 5136 0262 7475726E 		.ascii	"turnLineAround\000"
 5136      4C696E65 
 5136      41726F75 
 5136      6E6400
 5137              	.LASF30:
 5138 0271 77725F41 		.ascii	"wr_AddressHigh\000"
 5138      64647265 
 5138      73734869 
 5138      676800
 5139              	.LASF11:
 5140 0280 666C6F61 		.ascii	"float\000"
 5140      7400
 5141              	.LASF40:
 5142 0286 776D725F 		.ascii	"wmr_numRegsHigh\000"
 5142      6E756D52 
 5142      65677348 
 5142      69676800 
 5143              	.LASF29:
 5144 0296 77725F41 		.ascii	"wr_AddressLow\000"
 5144      64647265 
 5144      73734C6F 
 5144      7700
 5145              	.LASF80:
 5146 02a4 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 5146      4320342E 
 5146      372E3320 
 5146      32303133 
 5146      30333132 
 5147 02d7 616E6368 		.ascii	"anch revision 196615]\000"
 5147      20726576 
 5147      6973696F 
 5147      6E203139 
 5147      36363135 
 5148              	.LASF82:
 5149 02ed 433A5C55 		.ascii	"C:\\Users\\Sam\\Dropbox\\Work\\2014\\PSoC 4 Modbus "
 5149      73657273 
 5149      5C53616D 
 5149      5C44726F 
 5149      70626F78 
 5150 031a 536C6176 		.ascii	"Slave Software\\PSoC 4 Pioneer Modbus Slave\\PSoC 4"
 5150      6520536F 
 5150      66747761 
 5150      72655C50 
 5150      536F4320 
 5151 034b 2050696F 		.ascii	" Pioneer Modbus Slave.cydsn\000"
 5151      6E656572 
 5151      204D6F64 
 5151      62757320 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 109


 5151      536C6176 
 5152              	.LASF1:
 5153 0367 756E7369 		.ascii	"unsigned char\000"
 5153      676E6564 
 5153      20636861 
 5153      7200
 5154              	.LASF77:
 5155 0375 6F6C6450 		.ascii	"oldPin\000"
 5155      696E00
 5156              	.LASF45:
 5157 037c 77726974 		.ascii	"writeCoil\000"
 5157      65436F69 
 5157      6C00
 5158              	.LASF65:
 5159 0386 64656C61 		.ascii	"delay\000"
 5159      7900
 5160              	.LASF2:
 5161 038c 73686F72 		.ascii	"short int\000"
 5161      7420696E 
 5161      7400
 5162              	.LASF34:
 5163 0396 77725F76 		.ascii	"wr_valToWriteHigh\000"
 5163      616C546F 
 5163      57726974 
 5163      65486967 
 5163      6800
 5164              	.LASF26:
 5165 03a8 72725F6E 		.ascii	"rr_numRegs\000"
 5165      756D5265 
 5165      677300
 5166              	.LASF38:
 5167 03b3 776D725F 		.ascii	"wmr_AddressLow\000"
 5167      41646472 
 5167      6573734C 
 5167      6F7700
 5168              	.LASF32:
 5169 03c2 77725F76 		.ascii	"wr_valToWrite\000"
 5169      616C546F 
 5169      57726974 
 5169      6500
 5170              	.LASF55:
 5171 03d0 776D635F 		.ascii	"wmc_AddressLow\000"
 5171      41646472 
 5171      6573734C 
 5171      6F7700
 5172              	.LASF36:
 5173 03df 776D725F 		.ascii	"wmr_Address\000"
 5173      41646472 
 5173      65737300 
 5174              	.LASF50:
 5175 03eb 77635F76 		.ascii	"wc_valToWriteLow\000"
 5175      616C546F 
 5175      57726974 
 5175      654C6F77 
 5175      00
 5176              	.LASF21:
 5177 03fc 72656D61 		.ascii	"remainder\000"
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 110


 5177      696E6465 
 5177      7200
 5178              	.LASF13:
 5179 0406 63686172 		.ascii	"char\000"
 5179      00
 5180              	.LASF35:
 5181 040b 77726974 		.ascii	"writeMultipleRegs\000"
 5181      654D756C 
 5181      7469706C 
 5181      65526567 
 5181      7300
 5182              	.LASF71:
 5183 041d 6D696464 		.ascii	"middleOfMessage\000"
 5183      6C654F66 
 5183      4D657373 
 5183      61676500 
 5184              	.LASF43:
 5185 042d 776D725F 		.ascii	"wmr_numBytesTST\000"
 5185      6E756D42 
 5185      79746573 
 5185      54535400 
 5186              	.LASF68:
 5187 043d 72656365 		.ascii	"received\000"
 5187      69766564 
 5187      00
 5188              	.LASF73:
 5189 0446 6F6C644D 		.ascii	"oldMessageLength\000"
 5189      65737361 
 5189      67654C65 
 5189      6E677468 
 5189      00
 5190              	.LASF61:
 5191 0457 67656E65 		.ascii	"generateCRC\000"
 5191      72617465 
 5191      43524300 
 5192              	.LASF75:
 5193 0463 6D696464 		.ascii	"middleMessageCount\000"
 5193      6C654D65 
 5193      73736167 
 5193      65436F75 
 5193      6E7400
 5194              	.LASF81:
 5195 0476 2E5C4D6F 		.ascii	".\\Modbus.c\000"
 5195      64627573 
 5195      2E6300
 5196              	.LASF67:
 5197 0481 636F696C 		.ascii	"coils\000"
 5197      7300
 5198              	.LASF17:
 5199 0487 70726F63 		.ascii	"processMessage\000"
 5199      6573734D 
 5199      65737361 
 5199      676500
 5200              	.LASF22:
 5201 0496 72656164 		.ascii	"readCoil\000"
 5201      436F696C 
 5201      00
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccSdskef.s 			page 111


 5202              	.LASF78:
 5203 049f 6D6F6462 		.ascii	"modbusMessage\000"
 5203      75734D65 
 5203      73736167 
 5203      6500
 5204              	.LASF19:
 5205 04ad 72635F6E 		.ascii	"rc_numCoils\000"
 5205      756D436F 
 5205      696C7300 
 5206              	.LASF33:
 5207 04b9 77725F76 		.ascii	"wr_valToWriteLow\000"
 5207      616C546F 
 5207      57726974 
 5207      654C6F77 
 5207      00
 5208              	.LASF16:
 5209 04ca 63686563 		.ascii	"checkIfEndOfMessage\000"
 5209      6B496645 
 5209      6E644F66 
 5209      4D657373 
 5209      61676500 
 5210              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
