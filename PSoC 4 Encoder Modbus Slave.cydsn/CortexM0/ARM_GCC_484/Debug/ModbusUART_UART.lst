ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ModbusUART_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ModbusUART_UartInit,"ax",%progbits
  18              		.align	2
  19              		.global	ModbusUART_UartInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	ModbusUART_UartInit, %function
  23              	ModbusUART_UartInit:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ModbusUART_UART.c"
   1:.\Generated_Source\PSoC4/ModbusUART_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * File Name: ModbusUART_UART.c
   3:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *
   5:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *  UART mode.
   8:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *
   9:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *
  11:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
  18:.\Generated_Source\PSoC4/ModbusUART_UART.c **** #include "ModbusUART_PVT.h"
  19:.\Generated_Source\PSoC4/ModbusUART_UART.c **** #include "ModbusUART_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
  21:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
  22:.\Generated_Source\PSoC4/ModbusUART_UART.c **** #if(ModbusUART_SCB_MODE_UNCONFIG_CONST_CFG)
  23:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
  24:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     /***************************************
  25:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  Configuration Structure Initialization
  26:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     ***************************************/
  27:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
  28:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     const ModbusUART_UART_INIT_STRUCT ModbusUART_configUart =
  29:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     {
  30:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_SUB_MODE,
  31:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_DIRECTION,
  32:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_DATA_BITS_NUM,
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 2


  33:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_PARITY_TYPE,
  34:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_STOP_BITS_NUM,
  35:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_OVS_FACTOR,
  36:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_IRDA_LOW_POWER,
  37:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_MEDIAN_FILTER_ENABLE,
  38:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_RETRY_ON_NACK,
  39:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_IRDA_POLARITY,
  40:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_DROP_ON_PARITY_ERR,
  41:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_DROP_ON_FRAME_ERR,
  42:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_WAKE_ENABLE,
  43:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         0u,
  44:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         NULL,
  45:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         0u,
  46:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         NULL,
  47:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_MP_MODE_ENABLE,
  48:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_MP_ACCEPT_ADDRESS,
  49:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_MP_RX_ADDRESS,
  50:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_MP_RX_ADDRESS_MASK,
  51:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         (uint32) ModbusUART_SCB_IRQ_INTERNAL,
  52:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_INTR_RX_MASK,
  53:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_RX_TRIGGER_LEVEL,
  54:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_INTR_TX_MASK,
  55:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_TX_TRIGGER_LEVEL,
  56:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         (uint8) ModbusUART_UART_BYTE_MODE_ENABLE,
  57:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         (uint8) ModbusUART_UART_CTS_ENABLE,
  58:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         (uint8) ModbusUART_UART_CTS_POLARITY,
  59:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         (uint8) ModbusUART_UART_RTS_POLARITY,
  60:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         (uint8) ModbusUART_UART_RTS_FIFO_LEVEL
  61:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     };
  62:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
  63:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
  64:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     /*******************************************************************************
  65:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Function Name: ModbusUART_UartInit
  66:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     ********************************************************************************
  67:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
  68:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Summary:
  69:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  Configures the SCB for the UART operation.
  70:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
  71:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Parameters:
  72:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  config:  Pointer to a structure that contains the following ordered list of
  73:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *           fields. These fields match the selections available in the
  74:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *           customizer.
  75:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
  76:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Return:
  77:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  None
  78:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
  79:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *******************************************************************************/
  80:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     void ModbusUART_UartInit(const ModbusUART_UART_INIT_STRUCT *config)
  81:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     {
  82:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         uint32 pinsConfig;
  83:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
  84:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         if(NULL == config)
  85:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         {
  86:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
  87:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         }
  88:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         else
  89:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         {
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 3


  90:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
  91:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             pinsConfig  = config->direction;
  92:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
  93:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         #if !(ModbusUART_CY_SCBIP_V0 || ModbusUART_CY_SCBIP_V1)
  94:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Add RTS and CTS pins to configure */
  95:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (ModbusUART_UART_RTS_PIN_ENABLE) : (0u);
  96:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             pinsConfig |= (0u != config->enableCts)         ? (ModbusUART_UART_CTS_PIN_ENABLE) : (0
  97:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         #endif /* !(ModbusUART_CY_SCBIP_V0 || ModbusUART_CY_SCBIP_V1) */
  98:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
  99:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Configure pins */
 100:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_SetPins(ModbusUART_SCB_MODE_UART, config->mode, pinsConfig);
 101:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 102:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Store internal configuration */
 103:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_scbMode       = (uint8) ModbusUART_SCB_MODE_UART;
 104:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_scbEnableWake = (uint8) config->enableWake;
 105:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_scbEnableIntr = (uint8) config->enableInterrupt;
 106:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 107:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Set RX direction internal variables */
 108:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_rxBuffer      =         config->rxBuffer;
 109:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_rxDataBits    = (uint8) config->dataBits;
 110:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_rxBufferSize  = (uint8) config->rxBufferSize;
 111:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 112:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Set TX direction internal variables */
 113:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_txBuffer      =         config->txBuffer;
 114:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_txDataBits    = (uint8) config->dataBits;
 115:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_txBufferSize  = (uint8) config->txBufferSize;
 116:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 117:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Configure UART interface */
 118:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             if(ModbusUART_UART_MODE_IRDA == config->mode)
 119:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             {
 120:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                 /* OVS settings: IrDA */
 121:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                 ModbusUART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 122:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                                 (ModbusUART_UART_GET_CTRL_OVS_IRDA_LP(config->overs
 123:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                                 (ModbusUART_CTRL_OVS_IRDA_OVS16));
 124:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             }
 125:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             else
 126:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             {
 127:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                 /* OVS settings: UART and SmartCard */
 128:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                 ModbusUART_CTRL_REG  = ModbusUART_GET_CTRL_OVS(config->oversample);
 129:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             }
 130:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 131:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_CTRL_REG     |= ModbusUART_GET_CTRL_BYTE_MODE  (config->enableByteMode)     
 132:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                              ModbusUART_GET_CTRL_ADDR_ACCEPT(config->multiprocAccep
 133:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                              ModbusUART_CTRL_UART;
 134:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 135:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 136:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_UART_CTRL_REG = ModbusUART_GET_UART_CTRL_MODE(config->mode);
 137:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 138:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Configure RX direction */
 139:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_UART_RX_CTRL_REG = ModbusUART_GET_UART_RX_CTRL_MODE(config->stopBits)       
 140:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                         ModbusUART_GET_UART_RX_CTRL_POLARITY(config->enableInverted
 141:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                         ModbusUART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc
 142:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                         ModbusUART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->drop
 143:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                         ModbusUART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropO
 144:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 145:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             if(ModbusUART_UART_PARITY_NONE != config->parity)
 146:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             {
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 4


 147:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                ModbusUART_UART_RX_CTRL_REG |= ModbusUART_GET_UART_RX_CTRL_PARITY(config->parity) |
 148:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                                     ModbusUART_UART_RX_CTRL_PARITY_ENABLED;
 149:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             }
 150:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 151:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_RX_CTRL_REG      = ModbusUART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)      
 152:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                                 ModbusUART_GET_RX_CTRL_MEDIAN(config->enableMedianF
 153:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                                 ModbusUART_GET_UART_RX_CTRL_ENABLED(config->directi
 154:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 155:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_RX_FIFO_CTRL_REG = ModbusUART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTrigg
 156:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 157:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Configure MP address */
 158:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_RX_MATCH_REG     = ModbusUART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 159:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                                 ModbusUART_GET_RX_MATCH_MASK(config->multiprocAddrM
 160:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 161:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Configure RX direction */
 162:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_UART_TX_CTRL_REG = ModbusUART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 163:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                                 ModbusUART_GET_UART_TX_CTRL_RETRY_NACK(config->enab
 164:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 165:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             if(ModbusUART_UART_PARITY_NONE != config->parity)
 166:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             {
 167:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                ModbusUART_UART_TX_CTRL_REG |= ModbusUART_GET_UART_TX_CTRL_PARITY(config->parity) |
 168:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                                     ModbusUART_UART_TX_CTRL_PARITY_ENABLED;
 169:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             }
 170:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 171:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_TX_CTRL_REG      = ModbusUART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 172:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                                 ModbusUART_GET_UART_TX_CTRL_ENABLED(config->directi
 173:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 174:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_TX_FIFO_CTRL_REG = ModbusUART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTrigg
 175:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 176:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         #if !(ModbusUART_CY_SCBIP_V0 || ModbusUART_CY_SCBIP_V1)
 177:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_UART_FLOW_CTRL_REG = ModbusUART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enable
 178:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                             ModbusUART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->cts
 179:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                             ModbusUART_GET_UART_FLOW_CTRL_RTS_POLARITY(config->rtsP
 180:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                                             ModbusUART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rts
 181:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         #endif /* !(ModbusUART_CY_SCBIP_V0 || ModbusUART_CY_SCBIP_V1) */
 182:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 183:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 184:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             CyIntDisable    (ModbusUART_ISR_NUMBER);
 185:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             CyIntSetPriority(ModbusUART_ISR_NUMBER, ModbusUART_ISR_PRIORITY);
 186:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             (void) CyIntSetVector(ModbusUART_ISR_NUMBER, &ModbusUART_SPI_UART_ISR);
 187:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 188:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Configure WAKE interrupt */
 189:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         #if(ModbusUART_UART_RX_WAKEUP_IRQ)
 190:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             CyIntDisable    (ModbusUART_RX_WAKE_ISR_NUMBER);
 191:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             CyIntSetPriority(ModbusUART_RX_WAKE_ISR_NUMBER, ModbusUART_RX_WAKE_ISR_PRIORITY);
 192:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             (void) CyIntSetVector(ModbusUART_RX_WAKE_ISR_NUMBER, &ModbusUART_UART_WAKEUP_ISR);
 193:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         #endif /* (ModbusUART_UART_RX_WAKEUP_IRQ) */
 194:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 195:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Configure interrupt sources */
 196:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_INTR_I2C_EC_MASK_REG = ModbusUART_NO_INTR_SOURCES;
 197:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_INTR_SPI_EC_MASK_REG = ModbusUART_NO_INTR_SOURCES;
 198:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_INTR_SLAVE_MASK_REG  = ModbusUART_NO_INTR_SOURCES;
 199:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_INTR_MASTER_MASK_REG = ModbusUART_NO_INTR_SOURCES;
 200:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 201:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_INTR_TX_MASK_REG     = config->txInterruptMask;
 202:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 203:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Clear RX buffer indexes */
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 5


 204:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_rxBufferHead     = 0u;
 205:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_rxBufferTail     = 0u;
 206:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_rxBufferOverflow = 0u;
 207:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 208:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Clear TX buffer indexes */
 209:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_txBufferHead = 0u;
 210:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_txBufferTail = 0u;
 211:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         }
 212:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     }
 213:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 214:.\Generated_Source\PSoC4/ModbusUART_UART.c **** #else
 215:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 216:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     /*******************************************************************************
 217:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Function Name: ModbusUART_UartInit
 218:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     ********************************************************************************
 219:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 220:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Summary:
 221:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  Configures the SCB for the UART operation.
 222:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 223:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Parameters:
 224:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  None
 225:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 226:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Return:
 227:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  None
 228:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 229:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *******************************************************************************/
 230:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     void ModbusUART_UartInit(void)
 231:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     {
  26              		.loc 1 231 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 00AF     		add	r7, sp, #0
  33              		.cfi_def_cfa_register 7
 232:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /* Configure UART interface */
 233:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_CTRL_REG = ModbusUART_UART_DEFAULT_CTRL;
  34              		.loc 1 233 0
  35 0004 174B     		ldr	r3, .L2
  36 0006 184A     		ldr	r2, .L2+4
  37 0008 1A60     		str	r2, [r3]
 234:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 235:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 236:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_CTRL_REG = ModbusUART_UART_DEFAULT_UART_CTRL;
  38              		.loc 1 236 0
  39 000a 184B     		ldr	r3, .L2+8
  40 000c 0022     		mov	r2, #0
  41 000e 1A60     		str	r2, [r3]
 237:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 238:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /* Configure RX direction */
 239:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_RX_CTRL_REG = ModbusUART_UART_DEFAULT_UART_RX_CTRL;
  42              		.loc 1 239 0
  43 0010 174B     		ldr	r3, .L2+12
  44 0012 0122     		mov	r2, #1
  45 0014 1A60     		str	r2, [r3]
 240:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_RX_CTRL_REG      = ModbusUART_UART_DEFAULT_RX_CTRL;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 6


  46              		.loc 1 240 0
  47 0016 174B     		ldr	r3, .L2+16
  48 0018 174A     		ldr	r2, .L2+20
  49 001a 1A60     		str	r2, [r3]
 241:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_RX_FIFO_CTRL_REG = ModbusUART_UART_DEFAULT_RX_FIFO_CTRL;
  50              		.loc 1 241 0
  51 001c 174B     		ldr	r3, .L2+24
  52 001e 0722     		mov	r2, #7
  53 0020 1A60     		str	r2, [r3]
 242:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_RX_MATCH_REG     = ModbusUART_UART_DEFAULT_RX_MATCH_REG;
  54              		.loc 1 242 0
  55 0022 174B     		ldr	r3, .L2+28
  56 0024 0022     		mov	r2, #0
  57 0026 1A60     		str	r2, [r3]
 243:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 244:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /* Configure TX direction */
 245:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_TX_CTRL_REG = ModbusUART_UART_DEFAULT_UART_TX_CTRL;
  58              		.loc 1 245 0
  59 0028 164B     		ldr	r3, .L2+32
  60 002a 0122     		mov	r2, #1
  61 002c 1A60     		str	r2, [r3]
 246:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_TX_CTRL_REG      = ModbusUART_UART_DEFAULT_TX_CTRL;
  62              		.loc 1 246 0
  63 002e 164B     		ldr	r3, .L2+36
  64 0030 164A     		ldr	r2, .L2+40
  65 0032 1A60     		str	r2, [r3]
 247:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_TX_FIFO_CTRL_REG = ModbusUART_UART_DEFAULT_TX_FIFO_CTRL;
  66              		.loc 1 247 0
  67 0034 164B     		ldr	r3, .L2+44
  68 0036 0022     		mov	r2, #0
  69 0038 1A60     		str	r2, [r3]
 248:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 249:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     #if !(ModbusUART_CY_SCBIP_V0 || ModbusUART_CY_SCBIP_V1)
 250:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UART_FLOW_CTRL_REG = ModbusUART_UART_DEFAULT_FLOW_CTRL;
 251:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     #endif /* !(ModbusUART_CY_SCBIP_V0 || ModbusUART_CY_SCBIP_V1) */
 252:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 253:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 254:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     #if(ModbusUART_SCB_IRQ_INTERNAL)
 255:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         CyIntDisable    (ModbusUART_ISR_NUMBER);
 256:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         CyIntSetPriority(ModbusUART_ISR_NUMBER, ModbusUART_ISR_PRIORITY);
 257:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         (void) CyIntSetVector(ModbusUART_ISR_NUMBER, &ModbusUART_SPI_UART_ISR);
 258:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     #endif /* (ModbusUART_SCB_IRQ_INTERNAL) */
 259:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 260:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /* Configure WAKE interrupt */
 261:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     #if(ModbusUART_UART_RX_WAKEUP_IRQ)
 262:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         CyIntDisable    (ModbusUART_RX_WAKE_ISR_NUMBER);
 263:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         CyIntSetPriority(ModbusUART_RX_WAKE_ISR_NUMBER, ModbusUART_RX_WAKE_ISR_PRIORITY);
 264:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         (void) CyIntSetVector(ModbusUART_RX_WAKE_ISR_NUMBER, &ModbusUART_UART_WAKEUP_ISR);
 265:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     #endif /* (ModbusUART_UART_RX_WAKEUP_IRQ) */
 266:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 267:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /* Configure interrupt sources */
 268:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_INTR_I2C_EC_MASK_REG = ModbusUART_UART_DEFAULT_INTR_I2C_EC_MASK;
  70              		.loc 1 268 0
  71 003a 164B     		ldr	r3, .L2+48
  72 003c 0022     		mov	r2, #0
  73 003e 1A60     		str	r2, [r3]
 269:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_INTR_SPI_EC_MASK_REG = ModbusUART_UART_DEFAULT_INTR_SPI_EC_MASK;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 7


  74              		.loc 1 269 0
  75 0040 154B     		ldr	r3, .L2+52
  76 0042 0022     		mov	r2, #0
  77 0044 1A60     		str	r2, [r3]
 270:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_INTR_SLAVE_MASK_REG  = ModbusUART_UART_DEFAULT_INTR_SLAVE_MASK;
  78              		.loc 1 270 0
  79 0046 154B     		ldr	r3, .L2+56
  80 0048 0022     		mov	r2, #0
  81 004a 1A60     		str	r2, [r3]
 271:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_INTR_MASTER_MASK_REG = ModbusUART_UART_DEFAULT_INTR_MASTER_MASK;
  82              		.loc 1 271 0
  83 004c 144B     		ldr	r3, .L2+60
  84 004e 0022     		mov	r2, #0
  85 0050 1A60     		str	r2, [r3]
 272:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_INTR_RX_MASK_REG     = ModbusUART_UART_DEFAULT_INTR_RX_MASK;
  86              		.loc 1 272 0
  87 0052 144B     		ldr	r3, .L2+64
  88 0054 0422     		mov	r2, #4
  89 0056 1A60     		str	r2, [r3]
 273:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_INTR_TX_MASK_REG     = ModbusUART_UART_DEFAULT_INTR_TX_MASK;
  90              		.loc 1 273 0
  91 0058 134B     		ldr	r3, .L2+68
  92 005a 0022     		mov	r2, #0
  93 005c 1A60     		str	r2, [r3]
 274:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 275:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     #if(ModbusUART_INTERNAL_RX_SW_BUFFER_CONST)
 276:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_rxBufferHead     = 0u;
 277:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_rxBufferTail     = 0u;
 278:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_rxBufferOverflow = 0u;
 279:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     #endif /* (ModbusUART_INTERNAL_RX_SW_BUFFER_CONST) */
 280:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 281:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     #if(ModbusUART_INTERNAL_TX_SW_BUFFER_CONST)
 282:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_txBufferHead = 0u;
 283:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_txBufferTail = 0u;
 284:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     #endif /* (ModbusUART_INTERNAL_TX_SW_BUFFER_CONST) */
 285:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     }
  94              		.loc 1 285 0
  95 005e BD46     		mov	sp, r7
  96              		@ sp needed
  97 0060 80BD     		pop	{r7, pc}
  98              	.L3:
  99 0062 C046     		.align	2
 100              	.L2:
 101 0064 00000740 		.word	1074200576
 102 0068 0F000002 		.word	33554447
 103 006c 40000740 		.word	1074200640
 104 0070 48000740 		.word	1074200648
 105 0074 00030740 		.word	1074201344
 106 0078 07020080 		.word	-2147483129
 107 007c 04030740 		.word	1074201348
 108 0080 10030740 		.word	1074201360
 109 0084 44000740 		.word	1074200644
 110 0088 00020740 		.word	1074201088
 111 008c 07000080 		.word	-2147483641
 112 0090 04020740 		.word	1074201092
 113 0094 880E0740 		.word	1074204296
 114 0098 C80E0740 		.word	1074204360
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 8


 115 009c 480F0740 		.word	1074204488
 116 00a0 080F0740 		.word	1074204424
 117 00a4 C80F0740 		.word	1074204616
 118 00a8 880F0740 		.word	1074204552
 119              		.cfi_endproc
 120              	.LFE0:
 121              		.size	ModbusUART_UartInit, .-ModbusUART_UartInit
 122              		.section	.text.ModbusUART_UartSetRxAddress,"ax",%progbits
 123              		.align	2
 124              		.global	ModbusUART_UartSetRxAddress
 125              		.code	16
 126              		.thumb_func
 127              		.type	ModbusUART_UartSetRxAddress, %function
 128              	ModbusUART_UartSetRxAddress:
 129              	.LFB1:
 286:.\Generated_Source\PSoC4/ModbusUART_UART.c **** #endif /* (ModbusUART_SCB_MODE_UNCONFIG_CONST_CFG) */
 287:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 288:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 289:.\Generated_Source\PSoC4/ModbusUART_UART.c **** /*******************************************************************************
 290:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * Function Name: ModbusUART_UartSetRxAddress
 291:.\Generated_Source\PSoC4/ModbusUART_UART.c **** ********************************************************************************
 292:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *
 293:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * Summary:
 294:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 295:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *  Multiprocessor mode.
 296:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *
 297:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * Parameters:
 298:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *  address: Address for hardware address detection.
 299:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *
 300:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * Return:
 301:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *  None
 302:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *
 303:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/ModbusUART_UART.c **** void ModbusUART_UartSetRxAddress(uint32 address)
 305:.\Generated_Source\PSoC4/ModbusUART_UART.c **** {
 130              		.loc 1 305 0
 131              		.cfi_startproc
 132 0000 80B5     		push	{r7, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 7, -8
 135              		.cfi_offset 14, -4
 136 0002 84B0     		sub	sp, sp, #16
 137              		.cfi_def_cfa_offset 24
 138 0004 00AF     		add	r7, sp, #0
 139              		.cfi_def_cfa_register 7
 140 0006 7860     		str	r0, [r7, #4]
 306:.\Generated_Source\PSoC4/ModbusUART_UART.c ****      uint32 matchReg;
 307:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 308:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     matchReg = ModbusUART_RX_MATCH_REG;
 141              		.loc 1 308 0
 142 0008 094B     		ldr	r3, .L5
 143 000a 1B68     		ldr	r3, [r3]
 144 000c FB60     		str	r3, [r7, #12]
 309:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 310:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     matchReg &= ((uint32) ~ModbusUART_RX_MATCH_ADDR_MASK); /* Clear address bits */
 145              		.loc 1 310 0
 146 000e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 9


 147 0010 FF22     		mov	r2, #255
 148 0012 9343     		bic	r3, r2
 149 0014 FB60     		str	r3, [r7, #12]
 311:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     matchReg |= ((uint32)  (address & ModbusUART_RX_MATCH_ADDR_MASK)); /* Set address  */
 150              		.loc 1 311 0
 151 0016 7A68     		ldr	r2, [r7, #4]
 152 0018 FF23     		mov	r3, #255
 153 001a 1340     		and	r3, r2
 154 001c FA68     		ldr	r2, [r7, #12]
 155 001e 1343     		orr	r3, r2
 156 0020 FB60     		str	r3, [r7, #12]
 312:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 313:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     ModbusUART_RX_MATCH_REG = matchReg;
 157              		.loc 1 313 0
 158 0022 034B     		ldr	r3, .L5
 159 0024 FA68     		ldr	r2, [r7, #12]
 160 0026 1A60     		str	r2, [r3]
 314:.\Generated_Source\PSoC4/ModbusUART_UART.c **** }
 161              		.loc 1 314 0
 162 0028 BD46     		mov	sp, r7
 163 002a 04B0     		add	sp, sp, #16
 164              		@ sp needed
 165 002c 80BD     		pop	{r7, pc}
 166              	.L6:
 167 002e C046     		.align	2
 168              	.L5:
 169 0030 10030740 		.word	1074201360
 170              		.cfi_endproc
 171              	.LFE1:
 172              		.size	ModbusUART_UartSetRxAddress, .-ModbusUART_UartSetRxAddress
 173              		.section	.text.ModbusUART_UartSetRxAddressMask,"ax",%progbits
 174              		.align	2
 175              		.global	ModbusUART_UartSetRxAddressMask
 176              		.code	16
 177              		.thumb_func
 178              		.type	ModbusUART_UartSetRxAddressMask, %function
 179              	ModbusUART_UartSetRxAddressMask:
 180              	.LFB2:
 315:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 316:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 317:.\Generated_Source\PSoC4/ModbusUART_UART.c **** /*******************************************************************************
 318:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * Function Name: ModbusUART_UartSetRxAddressMask
 319:.\Generated_Source\PSoC4/ModbusUART_UART.c **** ********************************************************************************
 320:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *
 321:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * Summary:
 322:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 323:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *
 324:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * Parameters:
 325:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *  addressMask: Address mask.
 326:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *   0 - address bit does not care while comparison.
 327:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *   1 - address bit is significant while comparison.
 328:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *
 329:.\Generated_Source\PSoC4/ModbusUART_UART.c **** * Return:
 330:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *  None
 331:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *
 332:.\Generated_Source\PSoC4/ModbusUART_UART.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC4/ModbusUART_UART.c **** void ModbusUART_UartSetRxAddressMask(uint32 addressMask)
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 10


 334:.\Generated_Source\PSoC4/ModbusUART_UART.c **** {
 181              		.loc 1 334 0
 182              		.cfi_startproc
 183 0000 80B5     		push	{r7, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 14, -4
 187 0002 84B0     		sub	sp, sp, #16
 188              		.cfi_def_cfa_offset 24
 189 0004 00AF     		add	r7, sp, #0
 190              		.cfi_def_cfa_register 7
 191 0006 7860     		str	r0, [r7, #4]
 335:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     uint32 matchReg;
 336:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 337:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     matchReg = ModbusUART_RX_MATCH_REG;
 192              		.loc 1 337 0
 193 0008 084B     		ldr	r3, .L8
 194 000a 1B68     		ldr	r3, [r3]
 195 000c FB60     		str	r3, [r7, #12]
 338:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 339:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     matchReg &= ((uint32) ~ModbusUART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 196              		.loc 1 339 0
 197 000e FA68     		ldr	r2, [r7, #12]
 198 0010 074B     		ldr	r3, .L8+4
 199 0012 1340     		and	r3, r2
 200 0014 FB60     		str	r3, [r7, #12]
 340:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     matchReg |= ((uint32) (addressMask << ModbusUART_RX_MATCH_MASK_POS));
 201              		.loc 1 340 0
 202 0016 7B68     		ldr	r3, [r7, #4]
 203 0018 1B04     		lsl	r3, r3, #16
 204 001a FA68     		ldr	r2, [r7, #12]
 205 001c 1343     		orr	r3, r2
 206 001e FB60     		str	r3, [r7, #12]
 341:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 342:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     ModbusUART_RX_MATCH_REG = matchReg;
 207              		.loc 1 342 0
 208 0020 024B     		ldr	r3, .L8
 209 0022 FA68     		ldr	r2, [r7, #12]
 210 0024 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/ModbusUART_UART.c **** }
 211              		.loc 1 343 0
 212 0026 BD46     		mov	sp, r7
 213 0028 04B0     		add	sp, sp, #16
 214              		@ sp needed
 215 002a 80BD     		pop	{r7, pc}
 216              	.L9:
 217              		.align	2
 218              	.L8:
 219 002c 10030740 		.word	1074201360
 220 0030 FFFF00FF 		.word	-16711681
 221              		.cfi_endproc
 222              	.LFE2:
 223              		.size	ModbusUART_UartSetRxAddressMask, .-ModbusUART_UartSetRxAddressMask
 224              		.section	.text.ModbusUART_UartGetChar,"ax",%progbits
 225              		.align	2
 226              		.global	ModbusUART_UartGetChar
 227              		.code	16
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 11


 228              		.thumb_func
 229              		.type	ModbusUART_UartGetChar, %function
 230              	ModbusUART_UartGetChar:
 231              	.LFB3:
 344:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 345:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 346:.\Generated_Source\PSoC4/ModbusUART_UART.c **** #if(ModbusUART_UART_RX_DIRECTION)
 347:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     /*******************************************************************************
 348:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Function Name: ModbusUART_UartGetChar
 349:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     ********************************************************************************
 350:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 351:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Summary:
 352:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  Retrieves the next data element from the receive buffer.
 353:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  This function is designed for ASCII characters and returns a char
 354:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  where 1 to 255 are valid characters and 0 indicates an error occurred or
 355:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  no data present.
 356:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  - The RX software buffer is disabled: returns the data element
 357:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *    retrieved from the RX FIFO.
 358:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *    Undefined data will be returned if the RX FIFO is empty.
 359:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  - The RX software buffer is enabled: returns the data element from
 360:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *    the software receive buffer.
 361:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 362:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Parameters:
 363:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  None
 364:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 365:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Return:
 366:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  The next data element from the receive buffer.
 367:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  ASCII character values from 1 to 255 are valid.
 368:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  A returned zero signifies an error condition or no data available.
 369:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 370:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Side Effects:
 371:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  The errors bits may not correspond with reading characters due to RX FIFO
 372:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  and software buffer usage.
 373:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  RX software buffer is enabled: The internal software buffer overflow
 374:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  does not treat as an error condition.
 375:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  Check SCB_rxBufferOverflow to capture that error condition.
 376:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 377:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *******************************************************************************/
 378:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     uint32 ModbusUART_UartGetChar(void)
 379:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     {
 232              		.loc 1 379 0
 233              		.cfi_startproc
 234 0000 80B5     		push	{r7, lr}
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 7, -8
 237              		.cfi_offset 14, -4
 238 0002 82B0     		sub	sp, sp, #8
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 380:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         uint32 rxData = 0u;
 242              		.loc 1 380 0
 243 0006 0023     		mov	r3, #0
 244 0008 7B60     		str	r3, [r7, #4]
 381:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 382:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /* Reads data only if there is data to read */
 383:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         if(0u != ModbusUART_SpiUartGetRxBufferSize())
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 12


 245              		.loc 1 383 0
 246 000a FFF7FEFF 		bl	ModbusUART_SpiUartGetRxBufferSize
 247 000e 031C     		mov	r3, r0
 248 0010 002B     		cmp	r3, #0
 249 0012 03D0     		beq	.L11
 384:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         {
 385:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             rxData = ModbusUART_SpiUartReadRxData();
 250              		.loc 1 385 0
 251 0014 FFF7FEFF 		bl	ModbusUART_SpiUartReadRxData
 252 0018 031C     		mov	r3, r0
 253 001a 7B60     		str	r3, [r7, #4]
 254              	.L11:
 386:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         }
 387:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 388:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         if(ModbusUART_CHECK_INTR_RX(ModbusUART_INTR_RX_ERR))
 255              		.loc 1 388 0
 256 001c 084B     		ldr	r3, .L14
 257 001e 1A68     		ldr	r2, [r3]
 258 0020 D823     		mov	r3, #216
 259 0022 9B00     		lsl	r3, r3, #2
 260 0024 1340     		and	r3, r2
 261 0026 05D0     		beq	.L12
 389:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         {
 390:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 262              		.loc 1 390 0
 263 0028 0023     		mov	r3, #0
 264 002a 7B60     		str	r3, [r7, #4]
 391:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_ClearRxInterruptSource(ModbusUART_INTR_RX_ERR);
 265              		.loc 1 391 0
 266 002c 044B     		ldr	r3, .L14
 267 002e D822     		mov	r2, #216
 268 0030 9200     		lsl	r2, r2, #2
 269 0032 1A60     		str	r2, [r3]
 270              	.L12:
 392:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         }
 393:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 394:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         return(rxData);
 271              		.loc 1 394 0
 272 0034 7B68     		ldr	r3, [r7, #4]
 395:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     }
 273              		.loc 1 395 0
 274 0036 181C     		mov	r0, r3
 275 0038 BD46     		mov	sp, r7
 276 003a 02B0     		add	sp, sp, #8
 277              		@ sp needed
 278 003c 80BD     		pop	{r7, pc}
 279              	.L15:
 280 003e C046     		.align	2
 281              	.L14:
 282 0040 C00F0740 		.word	1074204608
 283              		.cfi_endproc
 284              	.LFE3:
 285              		.size	ModbusUART_UartGetChar, .-ModbusUART_UartGetChar
 286              		.section	.text.ModbusUART_UartGetByte,"ax",%progbits
 287              		.align	2
 288              		.global	ModbusUART_UartGetByte
 289              		.code	16
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 13


 290              		.thumb_func
 291              		.type	ModbusUART_UartGetByte, %function
 292              	ModbusUART_UartGetByte:
 293              	.LFB4:
 396:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 397:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 398:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     /*******************************************************************************
 399:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Function Name: ModbusUART_UartGetByte
 400:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     ********************************************************************************
 401:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 402:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Summary:
 403:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 404:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  received byte and error condition.
 405:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 406:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 407:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *     empty.
 408:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 409:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *     software receive buffer.
 410:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 411:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Parameters:
 412:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  None
 413:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 414:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Return:
 415:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  Bits 7-0 contain the next data element from the receive buffer and
 416:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  other bits contain the error condition.
 417:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 418:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Side Effects:
 419:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  The errors bits may not correspond with reading characters due to RX FIFO
 420:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  and software buffer usage.
 421:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  RX software buffer is disabled: The internal software buffer overflow
 422:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  is not returned as status by this function.
 423:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  Check SCB_rxBufferOverflow to capture that error condition.
 424:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 425:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *******************************************************************************/
 426:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     uint32 ModbusUART_UartGetByte(void)
 427:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     {
 294              		.loc 1 427 0
 295              		.cfi_startproc
 296 0000 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 84B0     		sub	sp, sp, #16
 301              		.cfi_def_cfa_offset 24
 302 0004 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 428:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         uint32 rxData;
 429:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         uint32 tmpStatus;
 430:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         uint32 intSourceMask;
 431:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 432:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         intSourceMask = ModbusUART_SpiUartDisableIntRx();
 304              		.loc 1 432 0
 305 0006 FFF7FEFF 		bl	ModbusUART_SpiUartDisableIntRx
 306 000a 031C     		mov	r3, r0
 307 000c BB60     		str	r3, [r7, #8]
 433:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 434:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         if(0u != ModbusUART_SpiUartGetRxBufferSize())
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 14


 308              		.loc 1 434 0
 309 000e FFF7FEFF 		bl	ModbusUART_SpiUartGetRxBufferSize
 310 0012 031C     		mov	r3, r0
 311 0014 002B     		cmp	r3, #0
 312 0016 07D0     		beq	.L17
 435:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         {
 436:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 437:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             * buffer.
 438:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             */
 439:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_SpiUartEnableIntRx(intSourceMask);
 313              		.loc 1 439 0
 314 0018 104B     		ldr	r3, .L20
 315 001a BA68     		ldr	r2, [r7, #8]
 316 001c 1A60     		str	r2, [r3]
 440:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 441:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Get received byte */
 442:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             rxData = ModbusUART_SpiUartReadRxData();
 317              		.loc 1 442 0
 318 001e FFF7FEFF 		bl	ModbusUART_SpiUartReadRxData
 319 0022 031C     		mov	r3, r0
 320 0024 FB60     		str	r3, [r7, #12]
 321 0026 05E0     		b	.L18
 322              	.L17:
 443:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         }
 444:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         else
 445:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         {
 446:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the case
 447:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             * of empty. Otherwise the first received byte will be read.
 448:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             */
 449:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             rxData = ModbusUART_RX_FIFO_RD_REG;
 323              		.loc 1 449 0
 324 0028 0D4B     		ldr	r3, .L20+4
 325 002a 1B68     		ldr	r3, [r3]
 326 002c FB60     		str	r3, [r7, #12]
 450:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 451:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             /* Enables interrupt to receive more bytes.
 452:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             * The RX_NOT_EMPTY interrupt is cleared by the interrupt routine
 453:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             * in case the byte was received and read by code above.
 454:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             */
 455:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_SpiUartEnableIntRx(intSourceMask);
 327              		.loc 1 455 0
 328 002e 0B4B     		ldr	r3, .L20
 329 0030 BA68     		ldr	r2, [r7, #8]
 330 0032 1A60     		str	r2, [r3]
 331              	.L18:
 456:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         }
 457:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 458:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /* Get and clear RX error mask */
 459:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         tmpStatus = (ModbusUART_GetRxInterruptSource() & ModbusUART_INTR_RX_ERR);
 332              		.loc 1 459 0
 333 0034 0B4B     		ldr	r3, .L20+8
 334 0036 1A68     		ldr	r2, [r3]
 335 0038 D823     		mov	r3, #216
 336 003a 9B00     		lsl	r3, r3, #2
 337 003c 1340     		and	r3, r2
 338 003e 7B60     		str	r3, [r7, #4]
 460:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_ClearRxInterruptSource(ModbusUART_INTR_RX_ERR);
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 15


 339              		.loc 1 460 0
 340 0040 084B     		ldr	r3, .L20+8
 341 0042 D822     		mov	r2, #216
 342 0044 9200     		lsl	r2, r2, #2
 343 0046 1A60     		str	r2, [r3]
 461:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 462:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /* Puts together data and error status:
 463:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 464:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         */
 465:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 344              		.loc 1 465 0
 345 0048 7B68     		ldr	r3, [r7, #4]
 346 004a 1B02     		lsl	r3, r3, #8
 347 004c FA68     		ldr	r2, [r7, #12]
 348 004e 1343     		orr	r3, r2
 349 0050 FB60     		str	r3, [r7, #12]
 466:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 467:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         return(rxData);
 350              		.loc 1 467 0
 351 0052 FB68     		ldr	r3, [r7, #12]
 468:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     }
 352              		.loc 1 468 0
 353 0054 181C     		mov	r0, r3
 354 0056 BD46     		mov	sp, r7
 355 0058 04B0     		add	sp, sp, #16
 356              		@ sp needed
 357 005a 80BD     		pop	{r7, pc}
 358              	.L21:
 359              		.align	2
 360              	.L20:
 361 005c C80F0740 		.word	1074204616
 362 0060 40030740 		.word	1074201408
 363 0064 C00F0740 		.word	1074204608
 364              		.cfi_endproc
 365              	.LFE4:
 366              		.size	ModbusUART_UartGetByte, .-ModbusUART_UartGetByte
 367              		.section	.text.ModbusUART_UartPutString,"ax",%progbits
 368              		.align	2
 369              		.global	ModbusUART_UartPutString
 370              		.code	16
 371              		.thumb_func
 372              		.type	ModbusUART_UartPutString, %function
 373              	ModbusUART_UartPutString:
 374              	.LFB5:
 469:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 470:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 471:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     #if !(ModbusUART_CY_SCBIP_V0 || ModbusUART_CY_SCBIP_V1)
 472:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /*******************************************************************************
 473:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         * Function Name: ModbusUART_UartSetRtsPolarity
 474:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ********************************************************************************
 475:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *
 476:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         * Summary:
 477:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *  Sets active polarity of RTS output signal.
 478:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *
 479:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         * Parameters:
 480:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *  polarity: Active polarity of RTS output signal.
 481:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *   ModbusUART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 16


 482:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *   ModbusUART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 483:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *
 484:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         * Return:
 485:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *  None
 486:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *
 487:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *******************************************************************************/
 488:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         void ModbusUART_UartSetRtsPolarity(uint32 polarity)
 489:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         {
 490:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             if(0u != polarity)
 491:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             {
 492:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                 ModbusUART_UART_FLOW_CTRL_REG |= (uint32)  ModbusUART_UART_FLOW_CTRL_RTS_POLARITY;
 493:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             }
 494:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             else
 495:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             {
 496:.\Generated_Source\PSoC4/ModbusUART_UART.c ****                 ModbusUART_UART_FLOW_CTRL_REG &= (uint32) ~ModbusUART_UART_FLOW_CTRL_RTS_POLARITY;
 497:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             }
 498:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         }
 499:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 500:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 501:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /*******************************************************************************
 502:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         * Function Name: ModbusUART_UartSetRtsFifoLevel
 503:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ********************************************************************************
 504:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *
 505:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         * Summary:
 506:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 507:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 508:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 509:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *
 510:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         * Parameters:
 511:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *  level: Level in the RX FIFO for RTS signal activation.
 512:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *         The range of valid level values is between 0 and RX FIFO depth - 1.
 513:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *         Setting level value to 0 disables RTS signal activation.
 514:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *
 515:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         * Return:
 516:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *  None
 517:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *
 518:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         *******************************************************************************/
 519:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         void ModbusUART_UartSetRtsFifoLevel(uint32 level)
 520:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         {
 521:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             uint32 uartFlowCtrl;
 522:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 523:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             uartFlowCtrl = ModbusUART_UART_FLOW_CTRL_REG;
 524:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 525:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             uartFlowCtrl &= ((uint32) ~ModbusUART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear leve
 526:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             uartFlowCtrl |= ((uint32) (ModbusUART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 527:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 528:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 529:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         }
 530:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     #endif /* !(ModbusUART_CY_SCBIP_V0 || ModbusUART_CY_SCBIP_V1) */
 531:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 532:.\Generated_Source\PSoC4/ModbusUART_UART.c **** #endif /* (ModbusUART_UART_RX_DIRECTION) */
 533:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 534:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 535:.\Generated_Source\PSoC4/ModbusUART_UART.c **** #if(ModbusUART_UART_TX_DIRECTION)
 536:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     /*******************************************************************************
 537:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Function Name: ModbusUART_UartPutString
 538:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     ********************************************************************************
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 17


 539:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 540:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Summary:
 541:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 542:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  next available bus time.
 543:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  This function is blocking and waits until there is space available to put
 544:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  all the requested data into the  transmit buffer.
 545:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 546:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Parameters:
 547:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  string: pointer to the null terminated string array to be placed in the
 548:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *          transmit buffer.
 549:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 550:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Return:
 551:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  None
 552:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 553:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *******************************************************************************/
 554:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     void ModbusUART_UartPutString(const char8 string[])
 555:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     {
 375              		.loc 1 555 0
 376              		.cfi_startproc
 377 0000 80B5     		push	{r7, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 7, -8
 380              		.cfi_offset 14, -4
 381 0002 84B0     		sub	sp, sp, #16
 382              		.cfi_def_cfa_offset 24
 383 0004 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
 385 0006 7860     		str	r0, [r7, #4]
 556:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         uint32 bufIndex;
 557:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 558:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         bufIndex = 0u;
 386              		.loc 1 558 0
 387 0008 0023     		mov	r3, #0
 388 000a FB60     		str	r3, [r7, #12]
 559:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 560:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         /* Blocks the control flow until all data has been sent */
 561:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 389              		.loc 1 561 0
 390 000c 09E0     		b	.L23
 391              	.L24:
 562:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         {
 563:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             ModbusUART_UartPutChar((uint32) string[bufIndex]);
 392              		.loc 1 563 0
 393 000e 7A68     		ldr	r2, [r7, #4]
 394 0010 FB68     		ldr	r3, [r7, #12]
 395 0012 D318     		add	r3, r2, r3
 396 0014 1B78     		ldrb	r3, [r3]
 397 0016 181C     		mov	r0, r3
 398 0018 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 564:.\Generated_Source\PSoC4/ModbusUART_UART.c ****             bufIndex++;
 399              		.loc 1 564 0
 400 001c FB68     		ldr	r3, [r7, #12]
 401 001e 0133     		add	r3, r3, #1
 402 0020 FB60     		str	r3, [r7, #12]
 403              	.L23:
 561:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 404              		.loc 1 561 0 discriminator 1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 18


 405 0022 7A68     		ldr	r2, [r7, #4]
 406 0024 FB68     		ldr	r3, [r7, #12]
 407 0026 D318     		add	r3, r2, r3
 408 0028 1B78     		ldrb	r3, [r3]
 409 002a 002B     		cmp	r3, #0
 410 002c EFD1     		bne	.L24
 565:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         }
 566:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     }
 411              		.loc 1 566 0
 412 002e BD46     		mov	sp, r7
 413 0030 04B0     		add	sp, sp, #16
 414              		@ sp needed
 415 0032 80BD     		pop	{r7, pc}
 416              		.cfi_endproc
 417              	.LFE5:
 418              		.size	ModbusUART_UartPutString, .-ModbusUART_UartPutString
 419              		.section	.text.ModbusUART_UartPutCRLF,"ax",%progbits
 420              		.align	2
 421              		.global	ModbusUART_UartPutCRLF
 422              		.code	16
 423              		.thumb_func
 424              		.type	ModbusUART_UartPutCRLF, %function
 425              	ModbusUART_UartPutCRLF:
 426              	.LFB6:
 567:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 568:.\Generated_Source\PSoC4/ModbusUART_UART.c **** 
 569:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     /*******************************************************************************
 570:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Function Name: ModbusUART_UartPutCRLF
 571:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     ********************************************************************************
 572:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 573:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Summary:
 574:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  Places a byte of data followed by a carriage return (0x0D) and
 575:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  line feed (0x0A) into the transmit buffer.
 576:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  This function is blocking and waits until there is space available to put
 577:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  all the requested data into the  transmit buffer.
 578:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 579:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Parameters:
 580:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  txDataByte : the data to be transmitted.
 581:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 582:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     * Return:
 583:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *  None
 584:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *
 585:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     *******************************************************************************/
 586:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     void ModbusUART_UartPutCRLF(uint32 txDataByte)
 587:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     {
 427              		.loc 1 587 0
 428              		.cfi_startproc
 429 0000 80B5     		push	{r7, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0002 82B0     		sub	sp, sp, #8
 434              		.cfi_def_cfa_offset 16
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 437 0006 7860     		str	r0, [r7, #4]
 588:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 19


 438              		.loc 1 588 0
 439 0008 7B68     		ldr	r3, [r7, #4]
 440 000a 181C     		mov	r0, r3
 441 000c FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 589:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 442              		.loc 1 589 0
 443 0010 0D20     		mov	r0, #13
 444 0012 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 590:.\Generated_Source\PSoC4/ModbusUART_UART.c ****         ModbusUART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 445              		.loc 1 590 0
 446 0016 0A20     		mov	r0, #10
 447 0018 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 591:.\Generated_Source\PSoC4/ModbusUART_UART.c ****     }
 448              		.loc 1 591 0
 449 001c BD46     		mov	sp, r7
 450 001e 02B0     		add	sp, sp, #8
 451              		@ sp needed
 452 0020 80BD     		pop	{r7, pc}
 453              		.cfi_endproc
 454              	.LFE6:
 455              		.size	ModbusUART_UartPutCRLF, .-ModbusUART_UartPutCRLF
 456 0022 C046     		.text
 457              	.Letext0:
 458              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 459              		.section	.debug_info,"",%progbits
 460              	.Ldebug_info0:
 461 0000 FA010000 		.4byte	0x1fa
 462 0004 0400     		.2byte	0x4
 463 0006 00000000 		.4byte	.Ldebug_abbrev0
 464 000a 04       		.byte	0x4
 465 000b 01       		.uleb128 0x1
 466 000c 5E000000 		.4byte	.LASF30
 467 0010 01       		.byte	0x1
 468 0011 DA000000 		.4byte	.LASF31
 469 0015 16020000 		.4byte	.LASF32
 470 0019 00000000 		.4byte	.Ldebug_ranges0+0
 471 001d 00000000 		.4byte	0
 472 0021 00000000 		.4byte	.Ldebug_line0
 473 0025 02       		.uleb128 0x2
 474 0026 01       		.byte	0x1
 475 0027 06       		.byte	0x6
 476 0028 A9020000 		.4byte	.LASF0
 477 002c 02       		.uleb128 0x2
 478 002d 01       		.byte	0x1
 479 002e 08       		.byte	0x8
 480 002f 05010000 		.4byte	.LASF1
 481 0033 02       		.uleb128 0x2
 482 0034 02       		.byte	0x2
 483 0035 05       		.byte	0x5
 484 0036 74010000 		.4byte	.LASF2
 485 003a 02       		.uleb128 0x2
 486 003b 02       		.byte	0x2
 487 003c 07       		.byte	0x7
 488 003d 47010000 		.4byte	.LASF3
 489 0041 02       		.uleb128 0x2
 490 0042 04       		.byte	0x4
 491 0043 05       		.byte	0x5
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 20


 492 0044 8D020000 		.4byte	.LASF4
 493 0048 02       		.uleb128 0x2
 494 0049 04       		.byte	0x4
 495 004a 07       		.byte	0x7
 496 004b 35010000 		.4byte	.LASF5
 497 004f 02       		.uleb128 0x2
 498 0050 08       		.byte	0x8
 499 0051 05       		.byte	0x5
 500 0052 00000000 		.4byte	.LASF6
 501 0056 02       		.uleb128 0x2
 502 0057 08       		.byte	0x8
 503 0058 07       		.byte	0x7
 504 0059 B2010000 		.4byte	.LASF7
 505 005d 03       		.uleb128 0x3
 506 005e 04       		.byte	0x4
 507 005f 05       		.byte	0x5
 508 0060 696E7400 		.ascii	"int\000"
 509 0064 02       		.uleb128 0x2
 510 0065 04       		.byte	0x4
 511 0066 07       		.byte	0x7
 512 0067 44000000 		.4byte	.LASF8
 513 006b 04       		.uleb128 0x4
 514 006c 95010000 		.4byte	.LASF11
 515 0070 02       		.byte	0x2
 516 0071 A3       		.byte	0xa3
 517 0072 48000000 		.4byte	0x48
 518 0076 02       		.uleb128 0x2
 519 0077 04       		.byte	0x4
 520 0078 04       		.byte	0x4
 521 0079 58000000 		.4byte	.LASF9
 522 007d 02       		.uleb128 0x2
 523 007e 08       		.byte	0x8
 524 007f 04       		.byte	0x4
 525 0080 6D010000 		.4byte	.LASF10
 526 0084 04       		.uleb128 0x4
 527 0085 13010000 		.4byte	.LASF12
 528 0089 02       		.byte	0x2
 529 008a B2       		.byte	0xb2
 530 008b 8F000000 		.4byte	0x8f
 531 008f 02       		.uleb128 0x2
 532 0090 01       		.byte	0x1
 533 0091 08       		.byte	0x8
 534 0092 11020000 		.4byte	.LASF13
 535 0096 05       		.uleb128 0x5
 536 0097 0E000000 		.4byte	.LASF14
 537 009b 02       		.byte	0x2
 538 009c 4D01     		.2byte	0x14d
 539 009e A2000000 		.4byte	0xa2
 540 00a2 06       		.uleb128 0x6
 541 00a3 6B000000 		.4byte	0x6b
 542 00a7 02       		.uleb128 0x2
 543 00a8 04       		.byte	0x4
 544 00a9 07       		.byte	0x7
 545 00aa E6010000 		.4byte	.LASF15
 546 00ae 07       		.uleb128 0x7
 547 00af D2010000 		.4byte	.LASF33
 548 00b3 01       		.byte	0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 21


 549 00b4 E6       		.byte	0xe6
 550 00b5 00000000 		.4byte	.LFB0
 551 00b9 AC000000 		.4byte	.LFE0-.LFB0
 552 00bd 01       		.uleb128 0x1
 553 00be 9C       		.byte	0x9c
 554 00bf 08       		.uleb128 0x8
 555 00c0 19010000 		.4byte	.LASF16
 556 00c4 01       		.byte	0x1
 557 00c5 3001     		.2byte	0x130
 558 00c7 00000000 		.4byte	.LFB1
 559 00cb 34000000 		.4byte	.LFE1-.LFB1
 560 00cf 01       		.uleb128 0x1
 561 00d0 9C       		.byte	0x9c
 562 00d1 F4000000 		.4byte	0xf4
 563 00d5 09       		.uleb128 0x9
 564 00d6 AA010000 		.4byte	.LASF18
 565 00da 01       		.byte	0x1
 566 00db 3001     		.2byte	0x130
 567 00dd 6B000000 		.4byte	0x6b
 568 00e1 02       		.uleb128 0x2
 569 00e2 91       		.byte	0x91
 570 00e3 6C       		.sleb128 -20
 571 00e4 0A       		.uleb128 0xa
 572 00e5 A0020000 		.4byte	.LASF20
 573 00e9 01       		.byte	0x1
 574 00ea 3201     		.2byte	0x132
 575 00ec 6B000000 		.4byte	0x6b
 576 00f0 02       		.uleb128 0x2
 577 00f1 91       		.byte	0x91
 578 00f2 74       		.sleb128 -12
 579 00f3 00       		.byte	0
 580 00f4 08       		.uleb128 0x8
 581 00f5 6D020000 		.4byte	.LASF17
 582 00f9 01       		.byte	0x1
 583 00fa 4D01     		.2byte	0x14d
 584 00fc 00000000 		.4byte	.LFB2
 585 0100 34000000 		.4byte	.LFE2-.LFB2
 586 0104 01       		.uleb128 0x1
 587 0105 9C       		.byte	0x9c
 588 0106 29010000 		.4byte	0x129
 589 010a 09       		.uleb128 0x9
 590 010b 61010000 		.4byte	.LASF19
 591 010f 01       		.byte	0x1
 592 0110 4D01     		.2byte	0x14d
 593 0112 6B000000 		.4byte	0x6b
 594 0116 02       		.uleb128 0x2
 595 0117 91       		.byte	0x91
 596 0118 6C       		.sleb128 -20
 597 0119 0A       		.uleb128 0xa
 598 011a A0020000 		.4byte	.LASF20
 599 011e 01       		.byte	0x1
 600 011f 4F01     		.2byte	0x14f
 601 0121 6B000000 		.4byte	0x6b
 602 0125 02       		.uleb128 0x2
 603 0126 91       		.byte	0x91
 604 0127 74       		.sleb128 -12
 605 0128 00       		.byte	0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 22


 606 0129 0B       		.uleb128 0xb
 607 012a 7E010000 		.4byte	.LASF22
 608 012e 01       		.byte	0x1
 609 012f 7A01     		.2byte	0x17a
 610 0131 6B000000 		.4byte	0x6b
 611 0135 00000000 		.4byte	.LFB3
 612 0139 44000000 		.4byte	.LFE3-.LFB3
 613 013d 01       		.uleb128 0x1
 614 013e 9C       		.byte	0x9c
 615 013f 53010000 		.4byte	0x153
 616 0143 0A       		.uleb128 0xa
 617 0144 5A010000 		.4byte	.LASF21
 618 0148 01       		.byte	0x1
 619 0149 7C01     		.2byte	0x17c
 620 014b 6B000000 		.4byte	0x6b
 621 014f 02       		.uleb128 0x2
 622 0150 91       		.byte	0x91
 623 0151 74       		.sleb128 -12
 624 0152 00       		.byte	0
 625 0153 0B       		.uleb128 0xb
 626 0154 14000000 		.4byte	.LASF23
 627 0158 01       		.byte	0x1
 628 0159 AA01     		.2byte	0x1aa
 629 015b 6B000000 		.4byte	0x6b
 630 015f 00000000 		.4byte	.LFB4
 631 0163 68000000 		.4byte	.LFE4-.LFB4
 632 0167 01       		.uleb128 0x1
 633 0168 9C       		.byte	0x9c
 634 0169 9B010000 		.4byte	0x19b
 635 016d 0A       		.uleb128 0xa
 636 016e 5A010000 		.4byte	.LASF21
 637 0172 01       		.byte	0x1
 638 0173 AC01     		.2byte	0x1ac
 639 0175 6B000000 		.4byte	0x6b
 640 0179 02       		.uleb128 0x2
 641 017a 91       		.byte	0x91
 642 017b 74       		.sleb128 -12
 643 017c 0A       		.uleb128 0xa
 644 017d 96020000 		.4byte	.LASF24
 645 0181 01       		.byte	0x1
 646 0182 AD01     		.2byte	0x1ad
 647 0184 6B000000 		.4byte	0x6b
 648 0188 02       		.uleb128 0x2
 649 0189 91       		.byte	0x91
 650 018a 6C       		.sleb128 -20
 651 018b 0A       		.uleb128 0xa
 652 018c 9C010000 		.4byte	.LASF25
 653 0190 01       		.byte	0x1
 654 0191 AE01     		.2byte	0x1ae
 655 0193 6B000000 		.4byte	0x6b
 656 0197 02       		.uleb128 0x2
 657 0198 91       		.byte	0x91
 658 0199 70       		.sleb128 -16
 659 019a 00       		.byte	0
 660 019b 0C       		.uleb128 0xc
 661 019c 2B000000 		.4byte	.LASF26
 662 01a0 01       		.byte	0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 23


 663 01a1 2A02     		.2byte	0x22a
 664 01a3 00000000 		.4byte	.LFB5
 665 01a7 34000000 		.4byte	.LFE5-.LFB5
 666 01ab 01       		.uleb128 0x1
 667 01ac 9C       		.byte	0x9c
 668 01ad D0010000 		.4byte	0x1d0
 669 01b1 09       		.uleb128 0x9
 670 01b2 51000000 		.4byte	.LASF27
 671 01b6 01       		.byte	0x1
 672 01b7 2A02     		.2byte	0x22a
 673 01b9 D0010000 		.4byte	0x1d0
 674 01bd 02       		.uleb128 0x2
 675 01be 91       		.byte	0x91
 676 01bf 6C       		.sleb128 -20
 677 01c0 0A       		.uleb128 0xa
 678 01c1 C9010000 		.4byte	.LASF28
 679 01c5 01       		.byte	0x1
 680 01c6 2C02     		.2byte	0x22c
 681 01c8 6B000000 		.4byte	0x6b
 682 01cc 02       		.uleb128 0x2
 683 01cd 91       		.byte	0x91
 684 01ce 74       		.sleb128 -12
 685 01cf 00       		.byte	0
 686 01d0 0D       		.uleb128 0xd
 687 01d1 04       		.byte	0x4
 688 01d2 D6010000 		.4byte	0x1d6
 689 01d6 0E       		.uleb128 0xe
 690 01d7 84000000 		.4byte	0x84
 691 01db 0F       		.uleb128 0xf
 692 01dc EF010000 		.4byte	.LASF34
 693 01e0 01       		.byte	0x1
 694 01e1 4A02     		.2byte	0x24a
 695 01e3 00000000 		.4byte	.LFB6
 696 01e7 22000000 		.4byte	.LFE6-.LFB6
 697 01eb 01       		.uleb128 0x1
 698 01ec 9C       		.byte	0x9c
 699 01ed 09       		.uleb128 0x9
 700 01ee 06020000 		.4byte	.LASF29
 701 01f2 01       		.byte	0x1
 702 01f3 4A02     		.2byte	0x24a
 703 01f5 6B000000 		.4byte	0x6b
 704 01f9 02       		.uleb128 0x2
 705 01fa 91       		.byte	0x91
 706 01fb 74       		.sleb128 -12
 707 01fc 00       		.byte	0
 708 01fd 00       		.byte	0
 709              		.section	.debug_abbrev,"",%progbits
 710              	.Ldebug_abbrev0:
 711 0000 01       		.uleb128 0x1
 712 0001 11       		.uleb128 0x11
 713 0002 01       		.byte	0x1
 714 0003 25       		.uleb128 0x25
 715 0004 0E       		.uleb128 0xe
 716 0005 13       		.uleb128 0x13
 717 0006 0B       		.uleb128 0xb
 718 0007 03       		.uleb128 0x3
 719 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 24


 720 0009 1B       		.uleb128 0x1b
 721 000a 0E       		.uleb128 0xe
 722 000b 55       		.uleb128 0x55
 723 000c 17       		.uleb128 0x17
 724 000d 11       		.uleb128 0x11
 725 000e 01       		.uleb128 0x1
 726 000f 10       		.uleb128 0x10
 727 0010 17       		.uleb128 0x17
 728 0011 00       		.byte	0
 729 0012 00       		.byte	0
 730 0013 02       		.uleb128 0x2
 731 0014 24       		.uleb128 0x24
 732 0015 00       		.byte	0
 733 0016 0B       		.uleb128 0xb
 734 0017 0B       		.uleb128 0xb
 735 0018 3E       		.uleb128 0x3e
 736 0019 0B       		.uleb128 0xb
 737 001a 03       		.uleb128 0x3
 738 001b 0E       		.uleb128 0xe
 739 001c 00       		.byte	0
 740 001d 00       		.byte	0
 741 001e 03       		.uleb128 0x3
 742 001f 24       		.uleb128 0x24
 743 0020 00       		.byte	0
 744 0021 0B       		.uleb128 0xb
 745 0022 0B       		.uleb128 0xb
 746 0023 3E       		.uleb128 0x3e
 747 0024 0B       		.uleb128 0xb
 748 0025 03       		.uleb128 0x3
 749 0026 08       		.uleb128 0x8
 750 0027 00       		.byte	0
 751 0028 00       		.byte	0
 752 0029 04       		.uleb128 0x4
 753 002a 16       		.uleb128 0x16
 754 002b 00       		.byte	0
 755 002c 03       		.uleb128 0x3
 756 002d 0E       		.uleb128 0xe
 757 002e 3A       		.uleb128 0x3a
 758 002f 0B       		.uleb128 0xb
 759 0030 3B       		.uleb128 0x3b
 760 0031 0B       		.uleb128 0xb
 761 0032 49       		.uleb128 0x49
 762 0033 13       		.uleb128 0x13
 763 0034 00       		.byte	0
 764 0035 00       		.byte	0
 765 0036 05       		.uleb128 0x5
 766 0037 16       		.uleb128 0x16
 767 0038 00       		.byte	0
 768 0039 03       		.uleb128 0x3
 769 003a 0E       		.uleb128 0xe
 770 003b 3A       		.uleb128 0x3a
 771 003c 0B       		.uleb128 0xb
 772 003d 3B       		.uleb128 0x3b
 773 003e 05       		.uleb128 0x5
 774 003f 49       		.uleb128 0x49
 775 0040 13       		.uleb128 0x13
 776 0041 00       		.byte	0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 25


 777 0042 00       		.byte	0
 778 0043 06       		.uleb128 0x6
 779 0044 35       		.uleb128 0x35
 780 0045 00       		.byte	0
 781 0046 49       		.uleb128 0x49
 782 0047 13       		.uleb128 0x13
 783 0048 00       		.byte	0
 784 0049 00       		.byte	0
 785 004a 07       		.uleb128 0x7
 786 004b 2E       		.uleb128 0x2e
 787 004c 00       		.byte	0
 788 004d 3F       		.uleb128 0x3f
 789 004e 19       		.uleb128 0x19
 790 004f 03       		.uleb128 0x3
 791 0050 0E       		.uleb128 0xe
 792 0051 3A       		.uleb128 0x3a
 793 0052 0B       		.uleb128 0xb
 794 0053 3B       		.uleb128 0x3b
 795 0054 0B       		.uleb128 0xb
 796 0055 27       		.uleb128 0x27
 797 0056 19       		.uleb128 0x19
 798 0057 11       		.uleb128 0x11
 799 0058 01       		.uleb128 0x1
 800 0059 12       		.uleb128 0x12
 801 005a 06       		.uleb128 0x6
 802 005b 40       		.uleb128 0x40
 803 005c 18       		.uleb128 0x18
 804 005d 9742     		.uleb128 0x2117
 805 005f 19       		.uleb128 0x19
 806 0060 00       		.byte	0
 807 0061 00       		.byte	0
 808 0062 08       		.uleb128 0x8
 809 0063 2E       		.uleb128 0x2e
 810 0064 01       		.byte	0x1
 811 0065 3F       		.uleb128 0x3f
 812 0066 19       		.uleb128 0x19
 813 0067 03       		.uleb128 0x3
 814 0068 0E       		.uleb128 0xe
 815 0069 3A       		.uleb128 0x3a
 816 006a 0B       		.uleb128 0xb
 817 006b 3B       		.uleb128 0x3b
 818 006c 05       		.uleb128 0x5
 819 006d 27       		.uleb128 0x27
 820 006e 19       		.uleb128 0x19
 821 006f 11       		.uleb128 0x11
 822 0070 01       		.uleb128 0x1
 823 0071 12       		.uleb128 0x12
 824 0072 06       		.uleb128 0x6
 825 0073 40       		.uleb128 0x40
 826 0074 18       		.uleb128 0x18
 827 0075 9742     		.uleb128 0x2117
 828 0077 19       		.uleb128 0x19
 829 0078 01       		.uleb128 0x1
 830 0079 13       		.uleb128 0x13
 831 007a 00       		.byte	0
 832 007b 00       		.byte	0
 833 007c 09       		.uleb128 0x9
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 26


 834 007d 05       		.uleb128 0x5
 835 007e 00       		.byte	0
 836 007f 03       		.uleb128 0x3
 837 0080 0E       		.uleb128 0xe
 838 0081 3A       		.uleb128 0x3a
 839 0082 0B       		.uleb128 0xb
 840 0083 3B       		.uleb128 0x3b
 841 0084 05       		.uleb128 0x5
 842 0085 49       		.uleb128 0x49
 843 0086 13       		.uleb128 0x13
 844 0087 02       		.uleb128 0x2
 845 0088 18       		.uleb128 0x18
 846 0089 00       		.byte	0
 847 008a 00       		.byte	0
 848 008b 0A       		.uleb128 0xa
 849 008c 34       		.uleb128 0x34
 850 008d 00       		.byte	0
 851 008e 03       		.uleb128 0x3
 852 008f 0E       		.uleb128 0xe
 853 0090 3A       		.uleb128 0x3a
 854 0091 0B       		.uleb128 0xb
 855 0092 3B       		.uleb128 0x3b
 856 0093 05       		.uleb128 0x5
 857 0094 49       		.uleb128 0x49
 858 0095 13       		.uleb128 0x13
 859 0096 02       		.uleb128 0x2
 860 0097 18       		.uleb128 0x18
 861 0098 00       		.byte	0
 862 0099 00       		.byte	0
 863 009a 0B       		.uleb128 0xb
 864 009b 2E       		.uleb128 0x2e
 865 009c 01       		.byte	0x1
 866 009d 3F       		.uleb128 0x3f
 867 009e 19       		.uleb128 0x19
 868 009f 03       		.uleb128 0x3
 869 00a0 0E       		.uleb128 0xe
 870 00a1 3A       		.uleb128 0x3a
 871 00a2 0B       		.uleb128 0xb
 872 00a3 3B       		.uleb128 0x3b
 873 00a4 05       		.uleb128 0x5
 874 00a5 27       		.uleb128 0x27
 875 00a6 19       		.uleb128 0x19
 876 00a7 49       		.uleb128 0x49
 877 00a8 13       		.uleb128 0x13
 878 00a9 11       		.uleb128 0x11
 879 00aa 01       		.uleb128 0x1
 880 00ab 12       		.uleb128 0x12
 881 00ac 06       		.uleb128 0x6
 882 00ad 40       		.uleb128 0x40
 883 00ae 18       		.uleb128 0x18
 884 00af 9642     		.uleb128 0x2116
 885 00b1 19       		.uleb128 0x19
 886 00b2 01       		.uleb128 0x1
 887 00b3 13       		.uleb128 0x13
 888 00b4 00       		.byte	0
 889 00b5 00       		.byte	0
 890 00b6 0C       		.uleb128 0xc
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 27


 891 00b7 2E       		.uleb128 0x2e
 892 00b8 01       		.byte	0x1
 893 00b9 3F       		.uleb128 0x3f
 894 00ba 19       		.uleb128 0x19
 895 00bb 03       		.uleb128 0x3
 896 00bc 0E       		.uleb128 0xe
 897 00bd 3A       		.uleb128 0x3a
 898 00be 0B       		.uleb128 0xb
 899 00bf 3B       		.uleb128 0x3b
 900 00c0 05       		.uleb128 0x5
 901 00c1 27       		.uleb128 0x27
 902 00c2 19       		.uleb128 0x19
 903 00c3 11       		.uleb128 0x11
 904 00c4 01       		.uleb128 0x1
 905 00c5 12       		.uleb128 0x12
 906 00c6 06       		.uleb128 0x6
 907 00c7 40       		.uleb128 0x40
 908 00c8 18       		.uleb128 0x18
 909 00c9 9642     		.uleb128 0x2116
 910 00cb 19       		.uleb128 0x19
 911 00cc 01       		.uleb128 0x1
 912 00cd 13       		.uleb128 0x13
 913 00ce 00       		.byte	0
 914 00cf 00       		.byte	0
 915 00d0 0D       		.uleb128 0xd
 916 00d1 0F       		.uleb128 0xf
 917 00d2 00       		.byte	0
 918 00d3 0B       		.uleb128 0xb
 919 00d4 0B       		.uleb128 0xb
 920 00d5 49       		.uleb128 0x49
 921 00d6 13       		.uleb128 0x13
 922 00d7 00       		.byte	0
 923 00d8 00       		.byte	0
 924 00d9 0E       		.uleb128 0xe
 925 00da 26       		.uleb128 0x26
 926 00db 00       		.byte	0
 927 00dc 49       		.uleb128 0x49
 928 00dd 13       		.uleb128 0x13
 929 00de 00       		.byte	0
 930 00df 00       		.byte	0
 931 00e0 0F       		.uleb128 0xf
 932 00e1 2E       		.uleb128 0x2e
 933 00e2 01       		.byte	0x1
 934 00e3 3F       		.uleb128 0x3f
 935 00e4 19       		.uleb128 0x19
 936 00e5 03       		.uleb128 0x3
 937 00e6 0E       		.uleb128 0xe
 938 00e7 3A       		.uleb128 0x3a
 939 00e8 0B       		.uleb128 0xb
 940 00e9 3B       		.uleb128 0x3b
 941 00ea 05       		.uleb128 0x5
 942 00eb 27       		.uleb128 0x27
 943 00ec 19       		.uleb128 0x19
 944 00ed 11       		.uleb128 0x11
 945 00ee 01       		.uleb128 0x1
 946 00ef 12       		.uleb128 0x12
 947 00f0 06       		.uleb128 0x6
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 28


 948 00f1 40       		.uleb128 0x40
 949 00f2 18       		.uleb128 0x18
 950 00f3 9642     		.uleb128 0x2116
 951 00f5 19       		.uleb128 0x19
 952 00f6 00       		.byte	0
 953 00f7 00       		.byte	0
 954 00f8 00       		.byte	0
 955              		.section	.debug_aranges,"",%progbits
 956 0000 4C000000 		.4byte	0x4c
 957 0004 0200     		.2byte	0x2
 958 0006 00000000 		.4byte	.Ldebug_info0
 959 000a 04       		.byte	0x4
 960 000b 00       		.byte	0
 961 000c 0000     		.2byte	0
 962 000e 0000     		.2byte	0
 963 0010 00000000 		.4byte	.LFB0
 964 0014 AC000000 		.4byte	.LFE0-.LFB0
 965 0018 00000000 		.4byte	.LFB1
 966 001c 34000000 		.4byte	.LFE1-.LFB1
 967 0020 00000000 		.4byte	.LFB2
 968 0024 34000000 		.4byte	.LFE2-.LFB2
 969 0028 00000000 		.4byte	.LFB3
 970 002c 44000000 		.4byte	.LFE3-.LFB3
 971 0030 00000000 		.4byte	.LFB4
 972 0034 68000000 		.4byte	.LFE4-.LFB4
 973 0038 00000000 		.4byte	.LFB5
 974 003c 34000000 		.4byte	.LFE5-.LFB5
 975 0040 00000000 		.4byte	.LFB6
 976 0044 22000000 		.4byte	.LFE6-.LFB6
 977 0048 00000000 		.4byte	0
 978 004c 00000000 		.4byte	0
 979              		.section	.debug_ranges,"",%progbits
 980              	.Ldebug_ranges0:
 981 0000 00000000 		.4byte	.LFB0
 982 0004 AC000000 		.4byte	.LFE0
 983 0008 00000000 		.4byte	.LFB1
 984 000c 34000000 		.4byte	.LFE1
 985 0010 00000000 		.4byte	.LFB2
 986 0014 34000000 		.4byte	.LFE2
 987 0018 00000000 		.4byte	.LFB3
 988 001c 44000000 		.4byte	.LFE3
 989 0020 00000000 		.4byte	.LFB4
 990 0024 68000000 		.4byte	.LFE4
 991 0028 00000000 		.4byte	.LFB5
 992 002c 34000000 		.4byte	.LFE5
 993 0030 00000000 		.4byte	.LFB6
 994 0034 22000000 		.4byte	.LFE6
 995 0038 00000000 		.4byte	0
 996 003c 00000000 		.4byte	0
 997              		.section	.debug_line,"",%progbits
 998              	.Ldebug_line0:
 999 0000 03010000 		.section	.debug_str,"MS",%progbits,1
 999      02004E00 
 999      00000201 
 999      FB0E0D00 
 999      01010101 
 1000              	.LASF6:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 29


 1001 0000 6C6F6E67 		.ascii	"long long int\000"
 1001      206C6F6E 
 1001      6720696E 
 1001      7400
 1002              	.LASF14:
 1003 000e 72656733 		.ascii	"reg32\000"
 1003      3200
 1004              	.LASF23:
 1005 0014 4D6F6462 		.ascii	"ModbusUART_UartGetByte\000"
 1005      75735541 
 1005      52545F55 
 1005      61727447 
 1005      65744279 
 1006              	.LASF26:
 1007 002b 4D6F6462 		.ascii	"ModbusUART_UartPutString\000"
 1007      75735541 
 1007      52545F55 
 1007      61727450 
 1007      75745374 
 1008              	.LASF8:
 1009 0044 756E7369 		.ascii	"unsigned int\000"
 1009      676E6564 
 1009      20696E74 
 1009      00
 1010              	.LASF27:
 1011 0051 73747269 		.ascii	"string\000"
 1011      6E6700
 1012              	.LASF9:
 1013 0058 666C6F61 		.ascii	"float\000"
 1013      7400
 1014              	.LASF30:
 1015 005e 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1015      4320342E 
 1015      382E3420 
 1015      32303134 
 1015      30353236 
 1016 0091 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1016      20726576 
 1016      6973696F 
 1016      6E203231 
 1016      31333538 
 1017 00c4 30202D66 		.ascii	"0 -ffunction-sections\000"
 1017      66756E63 
 1017      74696F6E 
 1017      2D736563 
 1017      74696F6E 
 1018              	.LASF31:
 1019 00da 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ModbusUART_UART.c\000"
 1019      6E657261 
 1019      7465645F 
 1019      536F7572 
 1019      63655C50 
 1020              	.LASF1:
 1021 0105 756E7369 		.ascii	"unsigned char\000"
 1021      676E6564 
 1021      20636861 
 1021      7200
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 30


 1022              	.LASF12:
 1023 0113 63686172 		.ascii	"char8\000"
 1023      3800
 1024              	.LASF16:
 1025 0119 4D6F6462 		.ascii	"ModbusUART_UartSetRxAddress\000"
 1025      75735541 
 1025      52545F55 
 1025      61727453 
 1025      65745278 
 1026              	.LASF5:
 1027 0135 6C6F6E67 		.ascii	"long unsigned int\000"
 1027      20756E73 
 1027      69676E65 
 1027      6420696E 
 1027      7400
 1028              	.LASF3:
 1029 0147 73686F72 		.ascii	"short unsigned int\000"
 1029      7420756E 
 1029      7369676E 
 1029      65642069 
 1029      6E7400
 1030              	.LASF21:
 1031 015a 72784461 		.ascii	"rxData\000"
 1031      746100
 1032              	.LASF19:
 1033 0161 61646472 		.ascii	"addressMask\000"
 1033      6573734D 
 1033      61736B00 
 1034              	.LASF10:
 1035 016d 646F7562 		.ascii	"double\000"
 1035      6C6500
 1036              	.LASF2:
 1037 0174 73686F72 		.ascii	"short int\000"
 1037      7420696E 
 1037      7400
 1038              	.LASF22:
 1039 017e 4D6F6462 		.ascii	"ModbusUART_UartGetChar\000"
 1039      75735541 
 1039      52545F55 
 1039      61727447 
 1039      65744368 
 1040              	.LASF11:
 1041 0195 75696E74 		.ascii	"uint32\000"
 1041      333200
 1042              	.LASF25:
 1043 019c 696E7453 		.ascii	"intSourceMask\000"
 1043      6F757263 
 1043      654D6173 
 1043      6B00
 1044              	.LASF18:
 1045 01aa 61646472 		.ascii	"address\000"
 1045      65737300 
 1046              	.LASF7:
 1047 01b2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1047      206C6F6E 
 1047      6720756E 
 1047      7369676E 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 31


 1047      65642069 
 1048              	.LASF28:
 1049 01c9 62756649 		.ascii	"bufIndex\000"
 1049      6E646578 
 1049      00
 1050              	.LASF33:
 1051 01d2 4D6F6462 		.ascii	"ModbusUART_UartInit\000"
 1051      75735541 
 1051      52545F55 
 1051      61727449 
 1051      6E697400 
 1052              	.LASF15:
 1053 01e6 73697A65 		.ascii	"sizetype\000"
 1053      74797065 
 1053      00
 1054              	.LASF34:
 1055 01ef 4D6F6462 		.ascii	"ModbusUART_UartPutCRLF\000"
 1055      75735541 
 1055      52545F55 
 1055      61727450 
 1055      75744352 
 1056              	.LASF29:
 1057 0206 74784461 		.ascii	"txDataByte\000"
 1057      74614279 
 1057      746500
 1058              	.LASF13:
 1059 0211 63686172 		.ascii	"char\000"
 1059      00
 1060              	.LASF32:
 1061 0216 433A5C55 		.ascii	"C:\\Users\\Sam\\OneDrive\\Github\\PSoC-4-Motor-Cont"
 1061      73657273 
 1061      5C53616D 
 1061      5C4F6E65 
 1061      44726976 
 1062 0244 726F6C6C 		.ascii	"roller\\PSoC 4 Encoder Modbus Slave.cydsn\000"
 1062      65725C50 
 1062      536F4320 
 1062      3420456E 
 1062      636F6465 
 1063              	.LASF17:
 1064 026d 4D6F6462 		.ascii	"ModbusUART_UartSetRxAddressMask\000"
 1064      75735541 
 1064      52545F55 
 1064      61727453 
 1064      65745278 
 1065              	.LASF4:
 1066 028d 6C6F6E67 		.ascii	"long int\000"
 1066      20696E74 
 1066      00
 1067              	.LASF24:
 1068 0296 746D7053 		.ascii	"tmpStatus\000"
 1068      74617475 
 1068      7300
 1069              	.LASF20:
 1070 02a0 6D617463 		.ascii	"matchReg\000"
 1070      68526567 
 1070      00
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccQW0VFu.s 			page 32


 1071              	.LASF0:
 1072 02a9 7369676E 		.ascii	"signed char\000"
 1072      65642063 
 1072      68617200 
 1073              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
