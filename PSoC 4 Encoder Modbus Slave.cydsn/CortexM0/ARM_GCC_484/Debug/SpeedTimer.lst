ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SpeedTimer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SpeedTimer_initVar
  18              		.bss
  19              		.type	SpeedTimer_initVar, %object
  20              		.size	SpeedTimer_initVar, 1
  21              	SpeedTimer_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.SpeedTimer_Init,"ax",%progbits
  24              		.align	2
  25              		.global	SpeedTimer_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	SpeedTimer_Init, %function
  29              	SpeedTimer_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\SpeedTimer.c"
   1:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/SpeedTimer.c **** * File Name: SpeedTimer.c
   3:.\Generated_Source\PSoC4/SpeedTimer.c **** * Version 2.70
   4:.\Generated_Source\PSoC4/SpeedTimer.c **** *
   5:.\Generated_Source\PSoC4/SpeedTimer.c **** * Description:
   6:.\Generated_Source\PSoC4/SpeedTimer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC4/SpeedTimer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC4/SpeedTimer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC4/SpeedTimer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC4/SpeedTimer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC4/SpeedTimer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC4/SpeedTimer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC4/SpeedTimer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC4/SpeedTimer.c **** *
  15:.\Generated_Source\PSoC4/SpeedTimer.c **** * Note:
  16:.\Generated_Source\PSoC4/SpeedTimer.c **** *
  17:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC4/SpeedTimer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/SpeedTimer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/SpeedTimer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/SpeedTimer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  24:.\Generated_Source\PSoC4/SpeedTimer.c **** #include "SpeedTimer.h"
  25:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  26:.\Generated_Source\PSoC4/SpeedTimer.c **** uint8 SpeedTimer_initVar = 0u;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 2


  27:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  28:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  29:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_Init
  31:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
  32:.\Generated_Source\PSoC4/SpeedTimer.c **** *
  33:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
  34:.\Generated_Source\PSoC4/SpeedTimer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC4/SpeedTimer.c **** *
  36:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
  37:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
  38:.\Generated_Source\PSoC4/SpeedTimer.c **** *
  39:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
  40:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
  41:.\Generated_Source\PSoC4/SpeedTimer.c **** *
  42:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_Init(void) 
  44:.\Generated_Source\PSoC4/SpeedTimer.c **** {
  32              		.loc 1 44 0
  33              		.cfi_startproc
  34 0000 90B5     		push	{r4, r7, lr}
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  45:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if(!SpeedTimer_UsingFixedFunction)
  46:.\Generated_Source\PSoC4/SpeedTimer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC4/SpeedTimer.c ****             uint8 SpeedTimer_interruptState;
  48:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  50:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (SpeedTimer_UsingFixedFunction)
  51:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL &= SpeedTimer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  54:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC4/SpeedTimer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC4/SpeedTimer.c ****             SpeedTimer_CONTROL2 &= ((uint8)(~SpeedTimer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC4/SpeedTimer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  59:.\Generated_Source\PSoC4/SpeedTimer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC4/SpeedTimer.c ****             SpeedTimer_CONTROL3 &= ((uint8)(~SpeedTimer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC4/SpeedTimer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  63:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC4/SpeedTimer.c ****         #if (SpeedTimer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC4/SpeedTimer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC4/SpeedTimer.c ****             SpeedTimer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC4/SpeedTimer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  69:.\Generated_Source\PSoC4/SpeedTimer.c ****         #if (SpeedTimer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC4/SpeedTimer.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC4/SpeedTimer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC4/SpeedTimer.c ****                 interrupt) is enabled*/
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 3


  73:.\Generated_Source\PSoC4/SpeedTimer.c ****                 SpeedTimer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC4/SpeedTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  76:.\Generated_Source\PSoC4/SpeedTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC4/SpeedTimer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC4/SpeedTimer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC4/SpeedTimer.c ****                 SpeedTimer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC4/SpeedTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  82:.\Generated_Source\PSoC4/SpeedTimer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  84:.\Generated_Source\PSoC4/SpeedTimer.c ****         #if (SpeedTimer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC4/SpeedTimer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC4/SpeedTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC4/SpeedTimer.c ****                 SpeedTimer_CONTROL2 |= SpeedTimer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC4/SpeedTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  90:.\Generated_Source\PSoC4/SpeedTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC4/SpeedTimer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC4/SpeedTimer.c ****                 SpeedTimer_CONTROL3 &= ((uint8)(~SpeedTimer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC4/SpeedTimer.c ****                 SpeedTimer_CONTROL3 |= SpeedTimer_CTRL_RCOD;
  94:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  95:.\Generated_Source\PSoC4/SpeedTimer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC4/SpeedTimer.c ****                 SpeedTimer_CONTROL3 &= ((uint8)(~SpeedTimer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC4/SpeedTimer.c ****                 SpeedTimer_CONTROL3 |= SpeedTimer_CTRL_ENBL;
  98:.\Generated_Source\PSoC4/SpeedTimer.c **** 
  99:.\Generated_Source\PSoC4/SpeedTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC4/SpeedTimer.c ****                 SpeedTimer_CONTROL3 |= SpeedTimer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC4/SpeedTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 103:.\Generated_Source\PSoC4/SpeedTimer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 105:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_RT1 &= ((uint8)(~SpeedTimer_RT1_MASK));
 107:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_RT1 |= SpeedTimer_SYNC;
 108:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 109:.\Generated_Source\PSoC4/SpeedTimer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_RT1 &= ((uint8)(~SpeedTimer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_RT1 |= SpeedTimer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 113:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL2 |= SpeedTimer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 117:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC4/SpeedTimer.c ****     SpeedTimer_WritePeriod(SpeedTimer_INIT_PERIOD);
  43              		.loc 1 118 0
  44 0006 3120     		mov	r0, #49
  45 0008 FFF7FEFF 		bl	SpeedTimer_WritePeriod
 119:.\Generated_Source\PSoC4/SpeedTimer.c ****     SpeedTimer_WriteCounter(SpeedTimer_INIT_PERIOD);
  46              		.loc 1 119 0
  47 000c 3120     		mov	r0, #49
  48 000e FFF7FEFF 		bl	SpeedTimer_WriteCounter
 120:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 121:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (SpeedTimer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CAPTURE_COUNT_CTRL |= SpeedTimer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_SetCaptureCount(SpeedTimer_INIT_CAPTURE_COUNT);
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 4


 124:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 126:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (!SpeedTimer_UsingFixedFunction)
 127:.\Generated_Source\PSoC4/SpeedTimer.c ****         #if (SpeedTimer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC4/SpeedTimer.c ****             SpeedTimer_SetCaptureMode(SpeedTimer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC4/SpeedTimer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 131:.\Generated_Source\PSoC4/SpeedTimer.c ****         #if (SpeedTimer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC4/SpeedTimer.c ****             #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC4/SpeedTimer.c ****                 if (0u == (SpeedTimer_CONTROL & SpeedTimer__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC4/SpeedTimer.c ****                 {
 135:.\Generated_Source\PSoC4/SpeedTimer.c ****                     SpeedTimer_SetTriggerMode(SpeedTimer_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC4/SpeedTimer.c ****                 }
 137:.\Generated_Source\PSoC4/SpeedTimer.c ****             #endif /* (!SpeedTimer_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC4/SpeedTimer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 140:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_interruptState = CyEnterCriticalSection();
  49              		.loc 1 142 0
  50 0012 FC1D     		add	r4, r7, #7
  51 0014 FFF7FEFF 		bl	CyEnterCriticalSection
  52 0018 031C     		mov	r3, r0
  53 001a 2370     		strb	r3, [r4]
 143:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 144:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_STATUS_AUX_CTRL |= SpeedTimer_STATUS_ACTL_INT_EN_MASK;
  54              		.loc 1 145 0
  55 001c 0A4B     		ldr	r3, .L2
  56 001e 0A4A     		ldr	r2, .L2
  57 0020 1278     		ldrb	r2, [r2]
  58 0022 D2B2     		uxtb	r2, r2
  59 0024 1021     		mov	r1, #16
  60 0026 0A43     		orr	r2, r1
  61 0028 D2B2     		uxtb	r2, r2
  62 002a 1A70     		strb	r2, [r3]
 146:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 147:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC4/SpeedTimer.c ****         CyExitCriticalSection(SpeedTimer_interruptState);
  63              		.loc 1 148 0
  64 002c FB1D     		add	r3, r7, #7
  65 002e 1B78     		ldrb	r3, [r3]
  66 0030 181C     		mov	r0, r3
  67 0032 FFF7FEFF 		bl	CyExitCriticalSection
 149:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 150:.\Generated_Source\PSoC4/SpeedTimer.c ****         #if (SpeedTimer_EnableTriggerMode)
 151:.\Generated_Source\PSoC4/SpeedTimer.c ****             SpeedTimer_EnableTrigger();
 152:.\Generated_Source\PSoC4/SpeedTimer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC4/SpeedTimer.c **** 		
 154:.\Generated_Source\PSoC4/SpeedTimer.c **** 		
 155:.\Generated_Source\PSoC4/SpeedTimer.c ****         #if (SpeedTimer_InterruptOnCaptureCount && !SpeedTimer_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC4/SpeedTimer.c ****             SpeedTimer_SetInterruptCount(SpeedTimer_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC4/SpeedTimer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 159:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_ClearFIFO();
  68              		.loc 1 159 0
  69 0036 FFF7FEFF 		bl	SpeedTimer_ClearFIFO
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 5


 160:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* Configure additional features of UDB implementation */
 161:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 162:.\Generated_Source\PSoC4/SpeedTimer.c ****     SpeedTimer_SetInterruptMode(SpeedTimer_INIT_INTERRUPT_MODE);
  70              		.loc 1 162 0
  71 003a 0120     		mov	r0, #1
  72 003c FFF7FEFF 		bl	SpeedTimer_SetInterruptMode
 163:.\Generated_Source\PSoC4/SpeedTimer.c **** }
  73              		.loc 1 163 0
  74 0040 BD46     		mov	sp, r7
  75 0042 03B0     		add	sp, sp, #12
  76              		@ sp needed
  77 0044 90BD     		pop	{r4, r7, pc}
  78              	.L3:
  79 0046 C046     		.align	2
  80              	.L2:
  81 0048 91000F40 		.word	1074725009
  82              		.cfi_endproc
  83              	.LFE0:
  84              		.size	SpeedTimer_Init, .-SpeedTimer_Init
  85              		.section	.text.SpeedTimer_Enable,"ax",%progbits
  86              		.align	2
  87              		.global	SpeedTimer_Enable
  88              		.code	16
  89              		.thumb_func
  90              		.type	SpeedTimer_Enable, %function
  91              	SpeedTimer_Enable:
  92              	.LFB1:
 164:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 165:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 166:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_Enable
 168:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 169:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 170:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 171:.\Generated_Source\PSoC4/SpeedTimer.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 173:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 174:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 175:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 176:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 177:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 178:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 179:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_Enable(void) 
 181:.\Generated_Source\PSoC4/SpeedTimer.c **** {
  93              		.loc 1 181 0
  94              		.cfi_startproc
  95 0000 80B5     		push	{r7, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 7, -8
  98              		.cfi_offset 14, -4
  99 0002 00AF     		add	r7, sp, #0
 100              		.cfi_def_cfa_register 7
 182:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (SpeedTimer_UsingFixedFunction)
 184:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_GLOBAL_ENABLE |= SpeedTimer_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_GLOBAL_STBY_ENABLE |= SpeedTimer_BLOCK_STBY_EN_MASK;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 6


 186:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 188:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED || SpeedTimer_UsingFixedFunction)
 190:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL |= SpeedTimer_CTRL_ENABLE;
 101              		.loc 1 190 0
 102 0004 054B     		ldr	r3, .L5
 103 0006 054A     		ldr	r2, .L5
 104 0008 1278     		ldrb	r2, [r2]
 105 000a D2B2     		uxtb	r2, r2
 106 000c 8021     		mov	r1, #128
 107 000e 4942     		neg	r1, r1
 108 0010 0A43     		orr	r2, r1
 109 0012 D2B2     		uxtb	r2, r2
 110 0014 1A70     		strb	r2, [r3]
 191:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 111              		.loc 1 192 0
 112 0016 BD46     		mov	sp, r7
 113              		@ sp needed
 114 0018 80BD     		pop	{r7, pc}
 115              	.L6:
 116 001a C046     		.align	2
 117              	.L5:
 118 001c 71000F40 		.word	1074724977
 119              		.cfi_endproc
 120              	.LFE1:
 121              		.size	SpeedTimer_Enable, .-SpeedTimer_Enable
 122              		.section	.text.SpeedTimer_Start,"ax",%progbits
 123              		.align	2
 124              		.global	SpeedTimer_Start
 125              		.code	16
 126              		.thumb_func
 127              		.type	SpeedTimer_Start, %function
 128              	SpeedTimer_Start:
 129              	.LFB2:
 193:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 194:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 195:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_Start
 197:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 198:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 199:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 200:.\Generated_Source\PSoC4/SpeedTimer.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC4/SpeedTimer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC4/SpeedTimer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 204:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 205:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 206:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 207:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 208:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 209:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 210:.\Generated_Source\PSoC4/SpeedTimer.c **** * Global variables:
 211:.\Generated_Source\PSoC4/SpeedTimer.c **** *  SpeedTimer_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC4/SpeedTimer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC4/SpeedTimer.c **** *
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 7


 214:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_Start(void) 
 216:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 130              		.loc 1 216 0
 131              		.cfi_startproc
 132 0000 80B5     		push	{r7, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 7, -8
 135              		.cfi_offset 14, -4
 136 0002 00AF     		add	r7, sp, #0
 137              		.cfi_def_cfa_register 7
 217:.\Generated_Source\PSoC4/SpeedTimer.c ****     if(SpeedTimer_initVar == 0u)
 138              		.loc 1 217 0
 139 0004 064B     		ldr	r3, .L9
 140 0006 1B78     		ldrb	r3, [r3]
 141 0008 002B     		cmp	r3, #0
 142 000a 04D1     		bne	.L8
 218:.\Generated_Source\PSoC4/SpeedTimer.c ****     {
 219:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_Init();
 143              		.loc 1 219 0
 144 000c FFF7FEFF 		bl	SpeedTimer_Init
 220:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 221:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_initVar = 1u;   /* Clear this bit for Initialization */
 145              		.loc 1 221 0
 146 0010 034B     		ldr	r3, .L9
 147 0012 0122     		mov	r2, #1
 148 0014 1A70     		strb	r2, [r3]
 149              	.L8:
 222:.\Generated_Source\PSoC4/SpeedTimer.c ****     }
 223:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 224:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC4/SpeedTimer.c ****     SpeedTimer_Enable();
 150              		.loc 1 225 0
 151 0016 FFF7FEFF 		bl	SpeedTimer_Enable
 226:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 152              		.loc 1 226 0
 153 001a BD46     		mov	sp, r7
 154              		@ sp needed
 155 001c 80BD     		pop	{r7, pc}
 156              	.L10:
 157 001e C046     		.align	2
 158              	.L9:
 159 0020 00000000 		.word	SpeedTimer_initVar
 160              		.cfi_endproc
 161              	.LFE2:
 162              		.size	SpeedTimer_Start, .-SpeedTimer_Start
 163              		.section	.text.SpeedTimer_Stop,"ax",%progbits
 164              		.align	2
 165              		.global	SpeedTimer_Stop
 166              		.code	16
 167              		.thumb_func
 168              		.type	SpeedTimer_Stop, %function
 169              	SpeedTimer_Stop:
 170              	.LFB3:
 227:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 228:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 229:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 8


 230:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_Stop
 231:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 232:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 233:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 234:.\Generated_Source\PSoC4/SpeedTimer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC4/SpeedTimer.c **** *  interrupts.
 236:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 237:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 238:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 239:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 240:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 241:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 242:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 243:.\Generated_Source\PSoC4/SpeedTimer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC4/SpeedTimer.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 246:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_Stop(void) 
 248:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 171              		.loc 1 248 0
 172              		.cfi_startproc
 173 0000 80B5     		push	{r7, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if(!SpeedTimer_UDB_CONTROL_REG_REMOVED || SpeedTimer_UsingFixedFunction)
 251:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL &= ((uint8)(~SpeedTimer_CTRL_ENABLE));
 179              		.loc 1 251 0
 180 0004 044B     		ldr	r3, .L12
 181 0006 044A     		ldr	r2, .L12
 182 0008 1278     		ldrb	r2, [r2]
 183 000a D1B2     		uxtb	r1, r2
 184 000c 7F22     		mov	r2, #127
 185 000e 0A40     		and	r2, r1
 186 0010 D2B2     		uxtb	r2, r2
 187 0012 1A70     		strb	r2, [r3]
 252:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 254:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (SpeedTimer_UsingFixedFunction)
 256:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_GLOBAL_ENABLE &= ((uint8)(~SpeedTimer_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_GLOBAL_STBY_ENABLE &= ((uint8)(~SpeedTimer_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 188              		.loc 1 259 0
 189 0014 BD46     		mov	sp, r7
 190              		@ sp needed
 191 0016 80BD     		pop	{r7, pc}
 192              	.L13:
 193              		.align	2
 194              	.L12:
 195 0018 71000F40 		.word	1074724977
 196              		.cfi_endproc
 197              	.LFE3:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 9


 198              		.size	SpeedTimer_Stop, .-SpeedTimer_Stop
 199              		.section	.text.SpeedTimer_SetInterruptMode,"ax",%progbits
 200              		.align	2
 201              		.global	SpeedTimer_SetInterruptMode
 202              		.code	16
 203              		.thumb_func
 204              		.type	SpeedTimer_SetInterruptMode, %function
 205              	SpeedTimer_SetInterruptMode:
 206              	.LFB4:
 260:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 261:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 262:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_SetInterruptMode
 264:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 266:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 267:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC4/SpeedTimer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC4/SpeedTimer.c **** *  be selected.
 270:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 271:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 272:.\Generated_Source\PSoC4/SpeedTimer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC4/SpeedTimer.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 275:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 276:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 277:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 278:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 207              		.loc 1 280 0
 208              		.cfi_startproc
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 021C     		mov	r2, r0
 218 0008 FB1D     		add	r3, r7, #7
 219 000a 1A70     		strb	r2, [r3]
 281:.\Generated_Source\PSoC4/SpeedTimer.c ****     SpeedTimer_STATUS_MASK = interruptMode;
 220              		.loc 1 281 0
 221 000c 034B     		ldr	r3, .L15
 222 000e FA1D     		add	r2, r7, #7
 223 0010 1278     		ldrb	r2, [r2]
 224 0012 1A70     		strb	r2, [r3]
 282:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 225              		.loc 1 282 0
 226 0014 BD46     		mov	sp, r7
 227 0016 02B0     		add	sp, sp, #8
 228              		@ sp needed
 229 0018 80BD     		pop	{r7, pc}
 230              	.L16:
 231 001a C046     		.align	2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 10


 232              	.L15:
 233 001c 81000F40 		.word	1074724993
 234              		.cfi_endproc
 235              	.LFE4:
 236              		.size	SpeedTimer_SetInterruptMode, .-SpeedTimer_SetInterruptMode
 237              		.section	.text.SpeedTimer_SoftwareCapture,"ax",%progbits
 238              		.align	2
 239              		.global	SpeedTimer_SoftwareCapture
 240              		.code	16
 241              		.thumb_func
 242              		.type	SpeedTimer_SoftwareCapture, %function
 243              	SpeedTimer_SoftwareCapture:
 244              	.LFB5:
 283:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 284:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 285:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_SoftwareCapture
 287:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 289:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 290:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 292:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 293:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 294:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 295:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 296:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 297:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 298:.\Generated_Source\PSoC4/SpeedTimer.c **** * Side Effects:
 299:.\Generated_Source\PSoC4/SpeedTimer.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 301:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 245              		.loc 1 303 0
 246              		.cfi_startproc
 247 0000 80B5     		push	{r7, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 304:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if(SpeedTimer_UsingFixedFunction)
 306:.\Generated_Source\PSoC4/SpeedTimer.c ****         (void)CY_GET_REG16(SpeedTimer_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC4/SpeedTimer.c ****     #else
 308:.\Generated_Source\PSoC4/SpeedTimer.c ****         (void)CY_GET_REG8(SpeedTimer_COUNTER_LSB_PTR_8BIT);
 253              		.loc 1 308 0
 254 0004 014B     		ldr	r3, .L18
 255 0006 1B78     		ldrb	r3, [r3]
 309:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif/* (SpeedTimer_UsingFixedFunction) */
 310:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 256              		.loc 1 311 0
 257 0008 BD46     		mov	sp, r7
 258              		@ sp needed
 259 000a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 11


 260              	.L19:
 261              		.align	2
 262              	.L18:
 263 000c 01000F40 		.word	1074724865
 264              		.cfi_endproc
 265              	.LFE5:
 266              		.size	SpeedTimer_SoftwareCapture, .-SpeedTimer_SoftwareCapture
 267              		.section	.text.SpeedTimer_ReadStatusRegister,"ax",%progbits
 268              		.align	2
 269              		.global	SpeedTimer_ReadStatusRegister
 270              		.code	16
 271              		.thumb_func
 272              		.type	SpeedTimer_ReadStatusRegister, %function
 273              	SpeedTimer_ReadStatusRegister:
 274              	.LFB6:
 312:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 313:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 314:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_ReadStatusRegister
 316:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 317:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 318:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 319:.\Generated_Source\PSoC4/SpeedTimer.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC4/SpeedTimer.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC4/SpeedTimer.c **** *  be permuteable.
 322:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 323:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 324:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 325:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 326:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 327:.\Generated_Source\PSoC4/SpeedTimer.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 329:.\Generated_Source\PSoC4/SpeedTimer.c **** * Side Effects:
 330:.\Generated_Source\PSoC4/SpeedTimer.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 332:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC4/SpeedTimer.c **** uint8   SpeedTimer_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 275              		.loc 1 334 0
 276              		.cfi_startproc
 277 0000 80B5     		push	{r7, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 281 0002 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 335:.\Generated_Source\PSoC4/SpeedTimer.c ****     return (SpeedTimer_STATUS);
 283              		.loc 1 335 0
 284 0004 024B     		ldr	r3, .L22
 285 0006 1B78     		ldrb	r3, [r3]
 286 0008 DBB2     		uxtb	r3, r3
 336:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 287              		.loc 1 336 0
 288 000a 181C     		mov	r0, r3
 289 000c BD46     		mov	sp, r7
 290              		@ sp needed
 291 000e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 12


 292              	.L23:
 293              		.align	2
 294              	.L22:
 295 0010 61000F40 		.word	1074724961
 296              		.cfi_endproc
 297              	.LFE6:
 298              		.size	SpeedTimer_ReadStatusRegister, .-SpeedTimer_ReadStatusRegister
 299              		.section	.text.SpeedTimer_ReadControlRegister,"ax",%progbits
 300              		.align	2
 301              		.global	SpeedTimer_ReadControlRegister
 302              		.code	16
 303              		.thumb_func
 304              		.type	SpeedTimer_ReadControlRegister, %function
 305              	SpeedTimer_ReadControlRegister:
 306              	.LFB7:
 337:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 338:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 339:.\Generated_Source\PSoC4/SpeedTimer.c **** #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 341:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 342:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_ReadControlRegister
 344:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 345:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 346:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 347:.\Generated_Source\PSoC4/SpeedTimer.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 349:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 350:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 351:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 352:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 353:.\Generated_Source\PSoC4/SpeedTimer.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 355:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC4/SpeedTimer.c **** uint8 SpeedTimer_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 307              		.loc 1 357 0
 308              		.cfi_startproc
 309 0000 80B5     		push	{r7, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 358:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC4/SpeedTimer.c ****         return ((uint8)SpeedTimer_CONTROL);
 315              		.loc 1 359 0
 316 0004 024B     		ldr	r3, .L26
 317 0006 1B78     		ldrb	r3, [r3]
 318 0008 DBB2     		uxtb	r3, r3
 360:.\Generated_Source\PSoC4/SpeedTimer.c ****     #else
 361:.\Generated_Source\PSoC4/SpeedTimer.c ****         return (0);
 362:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* (!SpeedTimer_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 319              		.loc 1 363 0
 320 000a 181C     		mov	r0, r3
 321 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 13


 322              		@ sp needed
 323 000e 80BD     		pop	{r7, pc}
 324              	.L27:
 325              		.align	2
 326              	.L26:
 327 0010 71000F40 		.word	1074724977
 328              		.cfi_endproc
 329              	.LFE7:
 330              		.size	SpeedTimer_ReadControlRegister, .-SpeedTimer_ReadControlRegister
 331              		.section	.text.SpeedTimer_WriteControlRegister,"ax",%progbits
 332              		.align	2
 333              		.global	SpeedTimer_WriteControlRegister
 334              		.code	16
 335              		.thumb_func
 336              		.type	SpeedTimer_WriteControlRegister, %function
 337              	SpeedTimer_WriteControlRegister:
 338              	.LFB8:
 364:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 365:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 366:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_WriteControlRegister
 368:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 369:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 370:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 371:.\Generated_Source\PSoC4/SpeedTimer.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 373:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 374:.\Generated_Source\PSoC4/SpeedTimer.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 376:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 377:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 378:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_WriteControlRegister(uint8 control) 
 380:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 339              		.loc 1 380 0
 340              		.cfi_startproc
 341 0000 80B5     		push	{r7, lr}
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 7, -8
 344              		.cfi_offset 14, -4
 345 0002 82B0     		sub	sp, sp, #8
 346              		.cfi_def_cfa_offset 16
 347 0004 00AF     		add	r7, sp, #0
 348              		.cfi_def_cfa_register 7
 349 0006 021C     		mov	r2, r0
 350 0008 FB1D     		add	r3, r7, #7
 351 000a 1A70     		strb	r2, [r3]
 381:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL = control;
 352              		.loc 1 382 0
 353 000c 034B     		ldr	r3, .L29
 354 000e FA1D     		add	r2, r7, #7
 355 0010 1278     		ldrb	r2, [r2]
 356 0012 1A70     		strb	r2, [r3]
 383:.\Generated_Source\PSoC4/SpeedTimer.c ****     #else
 384:.\Generated_Source\PSoC4/SpeedTimer.c ****         control = 0u;
 385:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* (!SpeedTimer_UDB_CONTROL_REG_REMOVED) */
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 14


 386:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 357              		.loc 1 386 0
 358 0014 BD46     		mov	sp, r7
 359 0016 02B0     		add	sp, sp, #8
 360              		@ sp needed
 361 0018 80BD     		pop	{r7, pc}
 362              	.L30:
 363 001a C046     		.align	2
 364              	.L29:
 365 001c 71000F40 		.word	1074724977
 366              		.cfi_endproc
 367              	.LFE8:
 368              		.size	SpeedTimer_WriteControlRegister, .-SpeedTimer_WriteControlRegister
 369              		.section	.text.SpeedTimer_ReadPeriod,"ax",%progbits
 370              		.align	2
 371              		.global	SpeedTimer_ReadPeriod
 372              		.code	16
 373              		.thumb_func
 374              		.type	SpeedTimer_ReadPeriod, %function
 375              	SpeedTimer_ReadPeriod:
 376              	.LFB9:
 387:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 388:.\Generated_Source\PSoC4/SpeedTimer.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 390:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 391:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_ReadPeriod
 393:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 394:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 395:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 396:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 398:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 399:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 400:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 401:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 402:.\Generated_Source\PSoC4/SpeedTimer.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 404:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC4/SpeedTimer.c **** uint8 SpeedTimer_ReadPeriod(void) 
 406:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 377              		.loc 1 406 0
 378              		.cfi_startproc
 379 0000 80B5     		push	{r7, lr}
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
 407:.\Generated_Source\PSoC4/SpeedTimer.c ****    #if(SpeedTimer_UsingFixedFunction)
 408:.\Generated_Source\PSoC4/SpeedTimer.c ****        return ((uint8)CY_GET_REG16(SpeedTimer_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC4/SpeedTimer.c ****    #else
 410:.\Generated_Source\PSoC4/SpeedTimer.c ****        return (CY_GET_REG8(SpeedTimer_PERIOD_LSB_PTR));
 385              		.loc 1 410 0
 386 0004 024B     		ldr	r3, .L33
 387 0006 1B78     		ldrb	r3, [r3]
 388 0008 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 15


 411:.\Generated_Source\PSoC4/SpeedTimer.c ****    #endif /* (SpeedTimer_UsingFixedFunction) */
 412:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 389              		.loc 1 412 0
 390 000a 181C     		mov	r0, r3
 391 000c BD46     		mov	sp, r7
 392              		@ sp needed
 393 000e 80BD     		pop	{r7, pc}
 394              	.L34:
 395              		.align	2
 396              	.L33:
 397 0010 21000F40 		.word	1074724897
 398              		.cfi_endproc
 399              	.LFE9:
 400              		.size	SpeedTimer_ReadPeriod, .-SpeedTimer_ReadPeriod
 401              		.section	.text.SpeedTimer_WritePeriod,"ax",%progbits
 402              		.align	2
 403              		.global	SpeedTimer_WritePeriod
 404              		.code	16
 405              		.thumb_func
 406              		.type	SpeedTimer_WritePeriod, %function
 407              	SpeedTimer_WritePeriod:
 408              	.LFB10:
 413:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 414:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 415:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_WritePeriod
 417:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 418:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 419:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 420:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC4/SpeedTimer.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 423:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 424:.\Generated_Source\PSoC4/SpeedTimer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC4/SpeedTimer.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 427:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 428:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 429:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 430:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_WritePeriod(uint8 period) 
 432:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 409              		.loc 1 432 0
 410              		.cfi_startproc
 411 0000 80B5     		push	{r7, lr}
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 7, -8
 414              		.cfi_offset 14, -4
 415 0002 82B0     		sub	sp, sp, #8
 416              		.cfi_def_cfa_offset 16
 417 0004 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 419 0006 021C     		mov	r2, r0
 420 0008 FB1D     		add	r3, r7, #7
 421 000a 1A70     		strb	r2, [r3]
 433:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if(SpeedTimer_UsingFixedFunction)
 434:.\Generated_Source\PSoC4/SpeedTimer.c ****         uint16 period_temp = (uint16)period;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 16


 435:.\Generated_Source\PSoC4/SpeedTimer.c ****         CY_SET_REG16(SpeedTimer_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC4/SpeedTimer.c ****     #else
 437:.\Generated_Source\PSoC4/SpeedTimer.c ****         CY_SET_REG8(SpeedTimer_PERIOD_LSB_PTR, period);
 422              		.loc 1 437 0
 423 000c 034B     		ldr	r3, .L36
 424 000e FA1D     		add	r2, r7, #7
 425 0010 1278     		ldrb	r2, [r2]
 426 0012 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 427              		.loc 1 439 0
 428 0014 BD46     		mov	sp, r7
 429 0016 02B0     		add	sp, sp, #8
 430              		@ sp needed
 431 0018 80BD     		pop	{r7, pc}
 432              	.L37:
 433 001a C046     		.align	2
 434              	.L36:
 435 001c 21000F40 		.word	1074724897
 436              		.cfi_endproc
 437              	.LFE10:
 438              		.size	SpeedTimer_WritePeriod, .-SpeedTimer_WritePeriod
 439              		.section	.text.SpeedTimer_ReadCapture,"ax",%progbits
 440              		.align	2
 441              		.global	SpeedTimer_ReadCapture
 442              		.code	16
 443              		.thumb_func
 444              		.type	SpeedTimer_ReadCapture, %function
 445              	SpeedTimer_ReadCapture:
 446              	.LFB11:
 440:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 441:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 442:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 443:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_ReadCapture
 444:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 445:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 446:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 447:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 449:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 450:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 451:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 452:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 453:.\Generated_Source\PSoC4/SpeedTimer.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 455:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC4/SpeedTimer.c **** uint8 SpeedTimer_ReadCapture(void) 
 457:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 447              		.loc 1 457 0
 448              		.cfi_startproc
 449 0000 80B5     		push	{r7, lr}
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 7, -8
 452              		.cfi_offset 14, -4
 453 0002 00AF     		add	r7, sp, #0
 454              		.cfi_def_cfa_register 7
 458:.\Generated_Source\PSoC4/SpeedTimer.c ****    #if(SpeedTimer_UsingFixedFunction)
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 17


 459:.\Generated_Source\PSoC4/SpeedTimer.c ****        return ((uint8)CY_GET_REG16(SpeedTimer_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC4/SpeedTimer.c ****    #else
 461:.\Generated_Source\PSoC4/SpeedTimer.c ****        return (CY_GET_REG8(SpeedTimer_CAPTURE_LSB_PTR));
 455              		.loc 1 461 0
 456 0004 024B     		ldr	r3, .L40
 457 0006 1B78     		ldrb	r3, [r3]
 458 0008 DBB2     		uxtb	r3, r3
 462:.\Generated_Source\PSoC4/SpeedTimer.c ****    #endif /* (SpeedTimer_UsingFixedFunction) */
 463:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 459              		.loc 1 463 0
 460 000a 181C     		mov	r0, r3
 461 000c BD46     		mov	sp, r7
 462              		@ sp needed
 463 000e 80BD     		pop	{r7, pc}
 464              	.L41:
 465              		.align	2
 466              	.L40:
 467 0010 41000F40 		.word	1074724929
 468              		.cfi_endproc
 469              	.LFE11:
 470              		.size	SpeedTimer_ReadCapture, .-SpeedTimer_ReadCapture
 471              		.section	.text.SpeedTimer_WriteCounter,"ax",%progbits
 472              		.align	2
 473              		.global	SpeedTimer_WriteCounter
 474              		.code	16
 475              		.thumb_func
 476              		.type	SpeedTimer_WriteCounter, %function
 477              	SpeedTimer_WriteCounter:
 478              	.LFB12:
 464:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 465:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 466:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_WriteCounter
 468:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 470:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 471:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 473:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 474:.\Generated_Source\PSoC4/SpeedTimer.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 476:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 477:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 478:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 479:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_WriteCounter(uint8 counter) 
 481:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 479              		.loc 1 481 0
 480              		.cfi_startproc
 481 0000 80B5     		push	{r7, lr}
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 7, -8
 484              		.cfi_offset 14, -4
 485 0002 82B0     		sub	sp, sp, #8
 486              		.cfi_def_cfa_offset 16
 487 0004 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 18


 489 0006 021C     		mov	r2, r0
 490 0008 FB1D     		add	r3, r7, #7
 491 000a 1A70     		strb	r2, [r3]
 482:.\Generated_Source\PSoC4/SpeedTimer.c ****    #if(SpeedTimer_UsingFixedFunction)
 483:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:.\Generated_Source\PSoC4/SpeedTimer.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC4/SpeedTimer.c ****          */
 486:.\Generated_Source\PSoC4/SpeedTimer.c ****         CY_SET_REG16(SpeedTimer_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC4/SpeedTimer.c ****         
 488:.\Generated_Source\PSoC4/SpeedTimer.c ****     #else
 489:.\Generated_Source\PSoC4/SpeedTimer.c ****         CY_SET_REG8(SpeedTimer_COUNTER_LSB_PTR, counter);
 492              		.loc 1 489 0
 493 000c 034B     		ldr	r3, .L43
 494 000e FA1D     		add	r2, r7, #7
 495 0010 1278     		ldrb	r2, [r2]
 496 0012 1A70     		strb	r2, [r3]
 490:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 497              		.loc 1 491 0
 498 0014 BD46     		mov	sp, r7
 499 0016 02B0     		add	sp, sp, #8
 500              		@ sp needed
 501 0018 80BD     		pop	{r7, pc}
 502              	.L44:
 503 001a C046     		.align	2
 504              	.L43:
 505 001c 01000F40 		.word	1074724865
 506              		.cfi_endproc
 507              	.LFE12:
 508              		.size	SpeedTimer_WriteCounter, .-SpeedTimer_WriteCounter
 509              		.section	.text.SpeedTimer_ReadCounter,"ax",%progbits
 510              		.align	2
 511              		.global	SpeedTimer_ReadCounter
 512              		.code	16
 513              		.thumb_func
 514              		.type	SpeedTimer_ReadCounter, %function
 515              	SpeedTimer_ReadCounter:
 516              	.LFB13:
 492:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 493:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 494:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_ReadCounter
 496:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 497:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 498:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 499:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 501:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 502:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 503:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 504:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 505:.\Generated_Source\PSoC4/SpeedTimer.c **** *  Present compare value.
 506:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 507:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC4/SpeedTimer.c **** uint8 SpeedTimer_ReadCounter(void) 
 509:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 517              		.loc 1 509 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 19


 518              		.cfi_startproc
 519 0000 80B5     		push	{r7, lr}
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 7, -8
 522              		.cfi_offset 14, -4
 523 0002 00AF     		add	r7, sp, #0
 524              		.cfi_def_cfa_register 7
 510:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if(SpeedTimer_UsingFixedFunction)
 514:.\Generated_Source\PSoC4/SpeedTimer.c ****         (void)CY_GET_REG16(SpeedTimer_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC4/SpeedTimer.c ****     #else
 516:.\Generated_Source\PSoC4/SpeedTimer.c ****         (void)CY_GET_REG8(SpeedTimer_COUNTER_LSB_PTR_8BIT);
 525              		.loc 1 516 0
 526 0004 034B     		ldr	r3, .L47
 527 0006 1B78     		ldrb	r3, [r3]
 517:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif/* (SpeedTimer_UsingFixedFunction) */
 518:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 519:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if(SpeedTimer_UsingFixedFunction)
 521:.\Generated_Source\PSoC4/SpeedTimer.c ****         return ((uint8)CY_GET_REG16(SpeedTimer_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC4/SpeedTimer.c ****     #else
 523:.\Generated_Source\PSoC4/SpeedTimer.c ****         return (CY_GET_REG8(SpeedTimer_CAPTURE_LSB_PTR));
 528              		.loc 1 523 0
 529 0008 034B     		ldr	r3, .L47+4
 530 000a 1B78     		ldrb	r3, [r3]
 531 000c DBB2     		uxtb	r3, r3
 524:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* (SpeedTimer_UsingFixedFunction) */
 525:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 532              		.loc 1 525 0
 533 000e 181C     		mov	r0, r3
 534 0010 BD46     		mov	sp, r7
 535              		@ sp needed
 536 0012 80BD     		pop	{r7, pc}
 537              	.L48:
 538              		.align	2
 539              	.L47:
 540 0014 01000F40 		.word	1074724865
 541 0018 41000F40 		.word	1074724929
 542              		.cfi_endproc
 543              	.LFE13:
 544              		.size	SpeedTimer_ReadCounter, .-SpeedTimer_ReadCounter
 545              		.section	.text.SpeedTimer_ClearFIFO,"ax",%progbits
 546              		.align	2
 547              		.global	SpeedTimer_ClearFIFO
 548              		.code	16
 549              		.thumb_func
 550              		.type	SpeedTimer_ClearFIFO, %function
 551              	SpeedTimer_ClearFIFO:
 552              	.LFB14:
 526:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 527:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 528:.\Generated_Source\PSoC4/SpeedTimer.c **** #if(!SpeedTimer_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 530:.\Generated_Source\PSoC4/SpeedTimer.c ****     
 531:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 20


 532:.\Generated_Source\PSoC4/SpeedTimer.c ****  * The functions below this point are only available using the UDB
 533:.\Generated_Source\PSoC4/SpeedTimer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC4/SpeedTimer.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 536:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 537:.\Generated_Source\PSoC4/SpeedTimer.c **** #if (SpeedTimer_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 539:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 540:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_SetCaptureMode
 542:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 543:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 544:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 545:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 547:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 548:.\Generated_Source\PSoC4/SpeedTimer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC4/SpeedTimer.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC4/SpeedTimer.c **** *  #define SpeedTimer__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC4/SpeedTimer.c **** #define SpeedTimer__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC4/SpeedTimer.c **** #define SpeedTimer__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC4/SpeedTimer.c **** #define SpeedTimer__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC4/SpeedTimer.c **** #define SpeedTimer__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC4/SpeedTimer.c ****  identifiers
 556:.\Generated_Source\PSoC4/SpeedTimer.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC4/SpeedTimer.c **** *  SpeedTimer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC4/SpeedTimer.c **** *  SpeedTimer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC4/SpeedTimer.c **** *  SpeedTimer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC4/SpeedTimer.c **** *  SpeedTimer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 562:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 563:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 564:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 565:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 568:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC4/SpeedTimer.c ****     captureMode = ((uint8)((uint8)captureMode << SpeedTimer_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC4/SpeedTimer.c ****     captureMode &= (SpeedTimer_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 572:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL &= ((uint8)(~SpeedTimer_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 576:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* (!SpeedTimer_UDB_CONTROL_REG_REMOVED) */
 579:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 580:.\Generated_Source\PSoC4/SpeedTimer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 582:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 583:.\Generated_Source\PSoC4/SpeedTimer.c **** #if (SpeedTimer_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 585:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 586:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_SetTriggerMode
 588:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 21


 589:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 590:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 591:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 593:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 594:.\Generated_Source\PSoC4/SpeedTimer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC4/SpeedTimer.c ****     #define SpeedTimer__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC4/SpeedTimer.c ****     #define SpeedTimer__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC4/SpeedTimer.c ****     #define SpeedTimer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC4/SpeedTimer.c ****     #define SpeedTimer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC4/SpeedTimer.c ****     #define SpeedTimer__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 601:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 602:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 603:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 604:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 607:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC4/SpeedTimer.c ****     triggerMode &= SpeedTimer_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 610:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 611:.\Generated_Source\PSoC4/SpeedTimer.c ****     
 612:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL &= ((uint8)(~SpeedTimer_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 615:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL |= (triggerMode | SpeedTimer__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 619:.\Generated_Source\PSoC4/SpeedTimer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 621:.\Generated_Source\PSoC4/SpeedTimer.c **** #if (SpeedTimer_EnableTriggerMode)
 622:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 623:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 624:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 625:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_EnableTrigger
 626:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 627:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 628:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 629:.\Generated_Source\PSoC4/SpeedTimer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 631:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 632:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 633:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 634:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 635:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 636:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 637:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_EnableTrigger(void) 
 639:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 640:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 641:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL |= SpeedTimer_CTRL_TRIG_EN;
 642:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 644:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 645:.\Generated_Source\PSoC4/SpeedTimer.c **** 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 22


 646:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_DisableTrigger
 648:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 649:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 650:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 651:.\Generated_Source\PSoC4/SpeedTimer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 653:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 654:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 655:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 656:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 657:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 658:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 659:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_DisableTrigger(void) 
 661:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 662:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is remove
 663:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL &= ((uint8)(~SpeedTimer_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 666:.\Generated_Source\PSoC4/SpeedTimer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 668:.\Generated_Source\PSoC4/SpeedTimer.c **** #if(SpeedTimer_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 670:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 671:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_SetInterruptCount
 673:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 675:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 676:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 678:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 679:.\Generated_Source\PSoC4/SpeedTimer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC4/SpeedTimer.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC4/SpeedTimer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:.\Generated_Source\PSoC4/SpeedTimer.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 684:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 685:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 686:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 687:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 690:.\Generated_Source\PSoC4/SpeedTimer.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC4/SpeedTimer.c ****     interruptCount &= SpeedTimer_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 693:.\Generated_Source\PSoC4/SpeedTimer.c ****     #if (!SpeedTimer_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL &= ((uint8)(~SpeedTimer_CTRL_INTCNT_MASK));
 696:.\Generated_Source\PSoC4/SpeedTimer.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC4/SpeedTimer.c ****         SpeedTimer_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC4/SpeedTimer.c ****     #endif /* (!SpeedTimer_UDB_CONTROL_REG_REMOVED) */
 699:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 700:.\Generated_Source\PSoC4/SpeedTimer.c **** #endif /* SpeedTimer_InterruptOnCaptureCount */
 701:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 702:.\Generated_Source\PSoC4/SpeedTimer.c **** 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 23


 703:.\Generated_Source\PSoC4/SpeedTimer.c **** #if (SpeedTimer_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 705:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 706:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 707:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_SetCaptureCount
 708:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 709:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 710:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 711:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 713:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 714:.\Generated_Source\PSoC4/SpeedTimer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC4/SpeedTimer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC4/SpeedTimer.c **** *                captures.
 717:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 718:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 719:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 720:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 721:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 724:.\Generated_Source\PSoC4/SpeedTimer.c ****     SpeedTimer_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 726:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 727:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 728:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_ReadCaptureCount
 730:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 731:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 732:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 733:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 735:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 736:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 737:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 738:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
 739:.\Generated_Source\PSoC4/SpeedTimer.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 741:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC4/SpeedTimer.c **** uint8 SpeedTimer_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 744:.\Generated_Source\PSoC4/SpeedTimer.c ****     return ((uint8)SpeedTimer_CAP_COUNT);
 745:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 746:.\Generated_Source\PSoC4/SpeedTimer.c **** #endif /* SpeedTimer_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 748:.\Generated_Source\PSoC4/SpeedTimer.c **** 
 749:.\Generated_Source\PSoC4/SpeedTimer.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC4/SpeedTimer.c **** * Function Name: SpeedTimer_ClearFIFO
 751:.\Generated_Source\PSoC4/SpeedTimer.c **** ********************************************************************************
 752:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 753:.\Generated_Source\PSoC4/SpeedTimer.c **** * Summary:
 754:.\Generated_Source\PSoC4/SpeedTimer.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 756:.\Generated_Source\PSoC4/SpeedTimer.c **** * Parameters:
 757:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 758:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 759:.\Generated_Source\PSoC4/SpeedTimer.c **** * Return:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 24


 760:.\Generated_Source\PSoC4/SpeedTimer.c **** *  void
 761:.\Generated_Source\PSoC4/SpeedTimer.c **** *
 762:.\Generated_Source\PSoC4/SpeedTimer.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC4/SpeedTimer.c **** void SpeedTimer_ClearFIFO(void) 
 764:.\Generated_Source\PSoC4/SpeedTimer.c **** {
 553              		.loc 1 764 0
 554              		.cfi_startproc
 555 0000 80B5     		push	{r7, lr}
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
 559 0002 00AF     		add	r7, sp, #0
 560              		.cfi_def_cfa_register 7
 765:.\Generated_Source\PSoC4/SpeedTimer.c ****     while(0u != (SpeedTimer_ReadStatusRegister() & SpeedTimer_STATUS_FIFONEMP))
 561              		.loc 1 765 0
 562 0004 01E0     		b	.L50
 563              	.L51:
 766:.\Generated_Source\PSoC4/SpeedTimer.c ****     {
 767:.\Generated_Source\PSoC4/SpeedTimer.c ****         (void)SpeedTimer_ReadCapture();
 564              		.loc 1 767 0
 565 0006 FFF7FEFF 		bl	SpeedTimer_ReadCapture
 566              	.L50:
 765:.\Generated_Source\PSoC4/SpeedTimer.c ****     while(0u != (SpeedTimer_ReadStatusRegister() & SpeedTimer_STATUS_FIFONEMP))
 567              		.loc 1 765 0 discriminator 1
 568 000a FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
 569 000e 031C     		mov	r3, r0
 570 0010 1A1C     		mov	r2, r3
 571 0012 0823     		mov	r3, #8
 572 0014 1340     		and	r3, r2
 573 0016 F6D1     		bne	.L51
 768:.\Generated_Source\PSoC4/SpeedTimer.c ****     }
 769:.\Generated_Source\PSoC4/SpeedTimer.c **** }
 574              		.loc 1 769 0
 575 0018 BD46     		mov	sp, r7
 576              		@ sp needed
 577 001a 80BD     		pop	{r7, pc}
 578              		.cfi_endproc
 579              	.LFE14:
 580              		.size	SpeedTimer_ClearFIFO, .-SpeedTimer_ClearFIFO
 581              		.text
 582              	.Letext0:
 583              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 584              		.section	.debug_info,"",%progbits
 585              	.Ldebug_info0:
 586 0000 32020000 		.4byte	0x232
 587 0004 0400     		.2byte	0x4
 588 0006 00000000 		.4byte	.Ldebug_abbrev0
 589 000a 04       		.byte	0x4
 590 000b 01       		.uleb128 0x1
 591 000c A2000000 		.4byte	.LASF34
 592 0010 01       		.byte	0x1
 593 0011 7E010000 		.4byte	.LASF35
 594 0015 F7010000 		.4byte	.LASF36
 595 0019 00000000 		.4byte	.Ldebug_ranges0+0
 596 001d 00000000 		.4byte	0
 597 0021 00000000 		.4byte	.Ldebug_line0
 598 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 25


 599 0026 01       		.byte	0x1
 600 0027 06       		.byte	0x6
 601 0028 48030000 		.4byte	.LASF0
 602 002c 02       		.uleb128 0x2
 603 002d 01       		.byte	0x1
 604 002e 08       		.byte	0x8
 605 002f 34010000 		.4byte	.LASF1
 606 0033 02       		.uleb128 0x2
 607 0034 02       		.byte	0x2
 608 0035 05       		.byte	0x5
 609 0036 EC020000 		.4byte	.LASF2
 610 003a 02       		.uleb128 0x2
 611 003b 02       		.byte	0x2
 612 003c 07       		.byte	0x7
 613 003d 79000000 		.4byte	.LASF3
 614 0041 02       		.uleb128 0x2
 615 0042 04       		.byte	0x4
 616 0043 05       		.byte	0x5
 617 0044 22030000 		.4byte	.LASF4
 618 0048 02       		.uleb128 0x2
 619 0049 04       		.byte	0x4
 620 004a 07       		.byte	0x7
 621 004b 5E010000 		.4byte	.LASF5
 622 004f 02       		.uleb128 0x2
 623 0050 08       		.byte	0x8
 624 0051 05       		.byte	0x5
 625 0052 8D020000 		.4byte	.LASF6
 626 0056 02       		.uleb128 0x2
 627 0057 08       		.byte	0x8
 628 0058 07       		.byte	0x7
 629 0059 6D020000 		.4byte	.LASF7
 630 005d 03       		.uleb128 0x3
 631 005e 04       		.byte	0x4
 632 005f 05       		.byte	0x5
 633 0060 696E7400 		.ascii	"int\000"
 634 0064 02       		.uleb128 0x2
 635 0065 04       		.byte	0x4
 636 0066 07       		.byte	0x7
 637 0067 60020000 		.4byte	.LASF8
 638 006b 04       		.uleb128 0x4
 639 006c 70010000 		.4byte	.LASF12
 640 0070 02       		.byte	0x2
 641 0071 A1       		.byte	0xa1
 642 0072 2C000000 		.4byte	0x2c
 643 0076 02       		.uleb128 0x2
 644 0077 04       		.byte	0x4
 645 0078 04       		.byte	0x4
 646 0079 9C000000 		.4byte	.LASF9
 647 007d 02       		.uleb128 0x2
 648 007e 08       		.byte	0x8
 649 007f 04       		.byte	0x4
 650 0080 DD010000 		.4byte	.LASF10
 651 0084 02       		.uleb128 0x2
 652 0085 01       		.byte	0x1
 653 0086 08       		.byte	0x8
 654 0087 2B030000 		.4byte	.LASF11
 655 008b 05       		.uleb128 0x5
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 26


 656 008c 42010000 		.4byte	.LASF13
 657 0090 02       		.byte	0x2
 658 0091 4B01     		.2byte	0x14b
 659 0093 97000000 		.4byte	0x97
 660 0097 06       		.uleb128 0x6
 661 0098 6B000000 		.4byte	0x6b
 662 009c 02       		.uleb128 0x2
 663 009d 04       		.byte	0x4
 664 009e 07       		.byte	0x7
 665 009f 84020000 		.4byte	.LASF14
 666 00a3 07       		.uleb128 0x7
 667 00a4 DC020000 		.4byte	.LASF18
 668 00a8 01       		.byte	0x1
 669 00a9 2B       		.byte	0x2b
 670 00aa 00000000 		.4byte	.LFB0
 671 00ae 4C000000 		.4byte	.LFE0-.LFB0
 672 00b2 01       		.uleb128 0x1
 673 00b3 9C       		.byte	0x9c
 674 00b4 C7000000 		.4byte	0xc7
 675 00b8 08       		.uleb128 0x8
 676 00b9 00000000 		.4byte	.LASF37
 677 00bd 01       		.byte	0x1
 678 00be 2F       		.byte	0x2f
 679 00bf 6B000000 		.4byte	0x6b
 680 00c3 02       		.uleb128 0x2
 681 00c4 91       		.byte	0x91
 682 00c5 6F       		.sleb128 -17
 683 00c6 00       		.byte	0
 684 00c7 09       		.uleb128 0x9
 685 00c8 4E020000 		.4byte	.LASF15
 686 00cc 01       		.byte	0x1
 687 00cd B4       		.byte	0xb4
 688 00ce 00000000 		.4byte	.LFB1
 689 00d2 20000000 		.4byte	.LFE1-.LFB1
 690 00d6 01       		.uleb128 0x1
 691 00d7 9C       		.byte	0x9c
 692 00d8 0A       		.uleb128 0xa
 693 00d9 A4010000 		.4byte	.LASF16
 694 00dd 01       		.byte	0x1
 695 00de D7       		.byte	0xd7
 696 00df 00000000 		.4byte	.LFB2
 697 00e3 24000000 		.4byte	.LFE2-.LFB2
 698 00e7 01       		.uleb128 0x1
 699 00e8 9C       		.byte	0x9c
 700 00e9 09       		.uleb128 0x9
 701 00ea 8C000000 		.4byte	.LASF17
 702 00ee 01       		.byte	0x1
 703 00ef F7       		.byte	0xf7
 704 00f0 00000000 		.4byte	.LFB3
 705 00f4 1C000000 		.4byte	.LFE3-.LFB3
 706 00f8 01       		.uleb128 0x1
 707 00f9 9C       		.byte	0x9c
 708 00fa 0B       		.uleb128 0xb
 709 00fb 9B020000 		.4byte	.LASF19
 710 00ff 01       		.byte	0x1
 711 0100 1701     		.2byte	0x117
 712 0102 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 27


 713 0106 20000000 		.4byte	.LFE4-.LFB4
 714 010a 01       		.uleb128 0x1
 715 010b 9C       		.byte	0x9c
 716 010c 20010000 		.4byte	0x120
 717 0110 0C       		.uleb128 0xc
 718 0111 B7020000 		.4byte	.LASF24
 719 0115 01       		.byte	0x1
 720 0116 1701     		.2byte	0x117
 721 0118 6B000000 		.4byte	0x6b
 722 011c 02       		.uleb128 0x2
 723 011d 91       		.byte	0x91
 724 011e 77       		.sleb128 -9
 725 011f 00       		.byte	0
 726 0120 0D       		.uleb128 0xd
 727 0121 5E000000 		.4byte	.LASF20
 728 0125 01       		.byte	0x1
 729 0126 2E01     		.2byte	0x12e
 730 0128 00000000 		.4byte	.LFB5
 731 012c 10000000 		.4byte	.LFE5-.LFB5
 732 0130 01       		.uleb128 0x1
 733 0131 9C       		.byte	0x9c
 734 0132 0E       		.uleb128 0xe
 735 0133 40000000 		.4byte	.LASF21
 736 0137 01       		.byte	0x1
 737 0138 4D01     		.2byte	0x14d
 738 013a 6B000000 		.4byte	0x6b
 739 013e 00000000 		.4byte	.LFB6
 740 0142 14000000 		.4byte	.LFE6-.LFB6
 741 0146 01       		.uleb128 0x1
 742 0147 9C       		.byte	0x9c
 743 0148 0E       		.uleb128 0xe
 744 0149 1A000000 		.4byte	.LASF22
 745 014d 01       		.byte	0x1
 746 014e 6401     		.2byte	0x164
 747 0150 6B000000 		.4byte	0x6b
 748 0154 00000000 		.4byte	.LFB7
 749 0158 14000000 		.4byte	.LFE7-.LFB7
 750 015c 01       		.uleb128 0x1
 751 015d 9C       		.byte	0x9c
 752 015e 0B       		.uleb128 0xb
 753 015f BD010000 		.4byte	.LASF23
 754 0163 01       		.byte	0x1
 755 0164 7B01     		.2byte	0x17b
 756 0166 00000000 		.4byte	.LFB8
 757 016a 20000000 		.4byte	.LFE8-.LFB8
 758 016e 01       		.uleb128 0x1
 759 016f 9C       		.byte	0x9c
 760 0170 84010000 		.4byte	0x184
 761 0174 0C       		.uleb128 0xc
 762 0175 76010000 		.4byte	.LASF25
 763 0179 01       		.byte	0x1
 764 017a 7B01     		.2byte	0x17b
 765 017c 6B000000 		.4byte	0x6b
 766 0180 02       		.uleb128 0x2
 767 0181 91       		.byte	0x91
 768 0182 77       		.sleb128 -9
 769 0183 00       		.byte	0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 28


 770 0184 0E       		.uleb128 0xe
 771 0185 1E010000 		.4byte	.LASF26
 772 0189 01       		.byte	0x1
 773 018a 9501     		.2byte	0x195
 774 018c 6B000000 		.4byte	0x6b
 775 0190 00000000 		.4byte	.LFB9
 776 0194 14000000 		.4byte	.LFE9-.LFB9
 777 0198 01       		.uleb128 0x1
 778 0199 9C       		.byte	0x9c
 779 019a 0B       		.uleb128 0xb
 780 019b 47010000 		.4byte	.LASF27
 781 019f 01       		.byte	0x1
 782 01a0 AF01     		.2byte	0x1af
 783 01a2 00000000 		.4byte	.LFB10
 784 01a6 20000000 		.4byte	.LFE10-.LFB10
 785 01aa 01       		.uleb128 0x1
 786 01ab 9C       		.byte	0x9c
 787 01ac C0010000 		.4byte	0x1c0
 788 01b0 0C       		.uleb128 0xc
 789 01b1 39000000 		.4byte	.LASF28
 790 01b5 01       		.byte	0x1
 791 01b6 AF01     		.2byte	0x1af
 792 01b8 6B000000 		.4byte	0x6b
 793 01bc 02       		.uleb128 0x2
 794 01bd 91       		.byte	0x91
 795 01be 77       		.sleb128 -9
 796 01bf 00       		.byte	0
 797 01c0 0E       		.uleb128 0xe
 798 01c1 0B030000 		.4byte	.LASF29
 799 01c5 01       		.byte	0x1
 800 01c6 C801     		.2byte	0x1c8
 801 01c8 6B000000 		.4byte	0x6b
 802 01cc 00000000 		.4byte	.LFB11
 803 01d0 14000000 		.4byte	.LFE11-.LFB11
 804 01d4 01       		.uleb128 0x1
 805 01d5 9C       		.byte	0x9c
 806 01d6 0B       		.uleb128 0xb
 807 01d7 30030000 		.4byte	.LASF30
 808 01db 01       		.byte	0x1
 809 01dc E001     		.2byte	0x1e0
 810 01de 00000000 		.4byte	.LFB12
 811 01e2 20000000 		.4byte	.LFE12-.LFB12
 812 01e6 01       		.uleb128 0x1
 813 01e7 9C       		.byte	0x9c
 814 01e8 FC010000 		.4byte	0x1fc
 815 01ec 0C       		.uleb128 0xc
 816 01ed B5010000 		.4byte	.LASF31
 817 01f1 01       		.byte	0x1
 818 01f2 E001     		.2byte	0x1e0
 819 01f4 6B000000 		.4byte	0x6b
 820 01f8 02       		.uleb128 0x2
 821 01f9 91       		.byte	0x91
 822 01fa 77       		.sleb128 -9
 823 01fb 00       		.byte	0
 824 01fc 0E       		.uleb128 0xe
 825 01fd C5020000 		.4byte	.LASF32
 826 0201 01       		.byte	0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 29


 827 0202 FC01     		.2byte	0x1fc
 828 0204 6B000000 		.4byte	0x6b
 829 0208 00000000 		.4byte	.LFB13
 830 020c 1C000000 		.4byte	.LFE13-.LFB13
 831 0210 01       		.uleb128 0x1
 832 0211 9C       		.byte	0x9c
 833 0212 0F       		.uleb128 0xf
 834 0213 F6020000 		.4byte	.LASF33
 835 0217 01       		.byte	0x1
 836 0218 FB02     		.2byte	0x2fb
 837 021a 00000000 		.4byte	.LFB14
 838 021e 1C000000 		.4byte	.LFE14-.LFB14
 839 0222 01       		.uleb128 0x1
 840 0223 9C       		.byte	0x9c
 841 0224 10       		.uleb128 0x10
 842 0225 E4010000 		.4byte	.LASF38
 843 0229 01       		.byte	0x1
 844 022a 1A       		.byte	0x1a
 845 022b 6B000000 		.4byte	0x6b
 846 022f 05       		.uleb128 0x5
 847 0230 03       		.byte	0x3
 848 0231 00000000 		.4byte	SpeedTimer_initVar
 849 0235 00       		.byte	0
 850              		.section	.debug_abbrev,"",%progbits
 851              	.Ldebug_abbrev0:
 852 0000 01       		.uleb128 0x1
 853 0001 11       		.uleb128 0x11
 854 0002 01       		.byte	0x1
 855 0003 25       		.uleb128 0x25
 856 0004 0E       		.uleb128 0xe
 857 0005 13       		.uleb128 0x13
 858 0006 0B       		.uleb128 0xb
 859 0007 03       		.uleb128 0x3
 860 0008 0E       		.uleb128 0xe
 861 0009 1B       		.uleb128 0x1b
 862 000a 0E       		.uleb128 0xe
 863 000b 55       		.uleb128 0x55
 864 000c 17       		.uleb128 0x17
 865 000d 11       		.uleb128 0x11
 866 000e 01       		.uleb128 0x1
 867 000f 10       		.uleb128 0x10
 868 0010 17       		.uleb128 0x17
 869 0011 00       		.byte	0
 870 0012 00       		.byte	0
 871 0013 02       		.uleb128 0x2
 872 0014 24       		.uleb128 0x24
 873 0015 00       		.byte	0
 874 0016 0B       		.uleb128 0xb
 875 0017 0B       		.uleb128 0xb
 876 0018 3E       		.uleb128 0x3e
 877 0019 0B       		.uleb128 0xb
 878 001a 03       		.uleb128 0x3
 879 001b 0E       		.uleb128 0xe
 880 001c 00       		.byte	0
 881 001d 00       		.byte	0
 882 001e 03       		.uleb128 0x3
 883 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 30


 884 0020 00       		.byte	0
 885 0021 0B       		.uleb128 0xb
 886 0022 0B       		.uleb128 0xb
 887 0023 3E       		.uleb128 0x3e
 888 0024 0B       		.uleb128 0xb
 889 0025 03       		.uleb128 0x3
 890 0026 08       		.uleb128 0x8
 891 0027 00       		.byte	0
 892 0028 00       		.byte	0
 893 0029 04       		.uleb128 0x4
 894 002a 16       		.uleb128 0x16
 895 002b 00       		.byte	0
 896 002c 03       		.uleb128 0x3
 897 002d 0E       		.uleb128 0xe
 898 002e 3A       		.uleb128 0x3a
 899 002f 0B       		.uleb128 0xb
 900 0030 3B       		.uleb128 0x3b
 901 0031 0B       		.uleb128 0xb
 902 0032 49       		.uleb128 0x49
 903 0033 13       		.uleb128 0x13
 904 0034 00       		.byte	0
 905 0035 00       		.byte	0
 906 0036 05       		.uleb128 0x5
 907 0037 16       		.uleb128 0x16
 908 0038 00       		.byte	0
 909 0039 03       		.uleb128 0x3
 910 003a 0E       		.uleb128 0xe
 911 003b 3A       		.uleb128 0x3a
 912 003c 0B       		.uleb128 0xb
 913 003d 3B       		.uleb128 0x3b
 914 003e 05       		.uleb128 0x5
 915 003f 49       		.uleb128 0x49
 916 0040 13       		.uleb128 0x13
 917 0041 00       		.byte	0
 918 0042 00       		.byte	0
 919 0043 06       		.uleb128 0x6
 920 0044 35       		.uleb128 0x35
 921 0045 00       		.byte	0
 922 0046 49       		.uleb128 0x49
 923 0047 13       		.uleb128 0x13
 924 0048 00       		.byte	0
 925 0049 00       		.byte	0
 926 004a 07       		.uleb128 0x7
 927 004b 2E       		.uleb128 0x2e
 928 004c 01       		.byte	0x1
 929 004d 3F       		.uleb128 0x3f
 930 004e 19       		.uleb128 0x19
 931 004f 03       		.uleb128 0x3
 932 0050 0E       		.uleb128 0xe
 933 0051 3A       		.uleb128 0x3a
 934 0052 0B       		.uleb128 0xb
 935 0053 3B       		.uleb128 0x3b
 936 0054 0B       		.uleb128 0xb
 937 0055 27       		.uleb128 0x27
 938 0056 19       		.uleb128 0x19
 939 0057 11       		.uleb128 0x11
 940 0058 01       		.uleb128 0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 31


 941 0059 12       		.uleb128 0x12
 942 005a 06       		.uleb128 0x6
 943 005b 40       		.uleb128 0x40
 944 005c 18       		.uleb128 0x18
 945 005d 9642     		.uleb128 0x2116
 946 005f 19       		.uleb128 0x19
 947 0060 01       		.uleb128 0x1
 948 0061 13       		.uleb128 0x13
 949 0062 00       		.byte	0
 950 0063 00       		.byte	0
 951 0064 08       		.uleb128 0x8
 952 0065 34       		.uleb128 0x34
 953 0066 00       		.byte	0
 954 0067 03       		.uleb128 0x3
 955 0068 0E       		.uleb128 0xe
 956 0069 3A       		.uleb128 0x3a
 957 006a 0B       		.uleb128 0xb
 958 006b 3B       		.uleb128 0x3b
 959 006c 0B       		.uleb128 0xb
 960 006d 49       		.uleb128 0x49
 961 006e 13       		.uleb128 0x13
 962 006f 02       		.uleb128 0x2
 963 0070 18       		.uleb128 0x18
 964 0071 00       		.byte	0
 965 0072 00       		.byte	0
 966 0073 09       		.uleb128 0x9
 967 0074 2E       		.uleb128 0x2e
 968 0075 00       		.byte	0
 969 0076 3F       		.uleb128 0x3f
 970 0077 19       		.uleb128 0x19
 971 0078 03       		.uleb128 0x3
 972 0079 0E       		.uleb128 0xe
 973 007a 3A       		.uleb128 0x3a
 974 007b 0B       		.uleb128 0xb
 975 007c 3B       		.uleb128 0x3b
 976 007d 0B       		.uleb128 0xb
 977 007e 27       		.uleb128 0x27
 978 007f 19       		.uleb128 0x19
 979 0080 11       		.uleb128 0x11
 980 0081 01       		.uleb128 0x1
 981 0082 12       		.uleb128 0x12
 982 0083 06       		.uleb128 0x6
 983 0084 40       		.uleb128 0x40
 984 0085 18       		.uleb128 0x18
 985 0086 9742     		.uleb128 0x2117
 986 0088 19       		.uleb128 0x19
 987 0089 00       		.byte	0
 988 008a 00       		.byte	0
 989 008b 0A       		.uleb128 0xa
 990 008c 2E       		.uleb128 0x2e
 991 008d 00       		.byte	0
 992 008e 3F       		.uleb128 0x3f
 993 008f 19       		.uleb128 0x19
 994 0090 03       		.uleb128 0x3
 995 0091 0E       		.uleb128 0xe
 996 0092 3A       		.uleb128 0x3a
 997 0093 0B       		.uleb128 0xb
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 32


 998 0094 3B       		.uleb128 0x3b
 999 0095 0B       		.uleb128 0xb
 1000 0096 27       		.uleb128 0x27
 1001 0097 19       		.uleb128 0x19
 1002 0098 11       		.uleb128 0x11
 1003 0099 01       		.uleb128 0x1
 1004 009a 12       		.uleb128 0x12
 1005 009b 06       		.uleb128 0x6
 1006 009c 40       		.uleb128 0x40
 1007 009d 18       		.uleb128 0x18
 1008 009e 9642     		.uleb128 0x2116
 1009 00a0 19       		.uleb128 0x19
 1010 00a1 00       		.byte	0
 1011 00a2 00       		.byte	0
 1012 00a3 0B       		.uleb128 0xb
 1013 00a4 2E       		.uleb128 0x2e
 1014 00a5 01       		.byte	0x1
 1015 00a6 3F       		.uleb128 0x3f
 1016 00a7 19       		.uleb128 0x19
 1017 00a8 03       		.uleb128 0x3
 1018 00a9 0E       		.uleb128 0xe
 1019 00aa 3A       		.uleb128 0x3a
 1020 00ab 0B       		.uleb128 0xb
 1021 00ac 3B       		.uleb128 0x3b
 1022 00ad 05       		.uleb128 0x5
 1023 00ae 27       		.uleb128 0x27
 1024 00af 19       		.uleb128 0x19
 1025 00b0 11       		.uleb128 0x11
 1026 00b1 01       		.uleb128 0x1
 1027 00b2 12       		.uleb128 0x12
 1028 00b3 06       		.uleb128 0x6
 1029 00b4 40       		.uleb128 0x40
 1030 00b5 18       		.uleb128 0x18
 1031 00b6 9742     		.uleb128 0x2117
 1032 00b8 19       		.uleb128 0x19
 1033 00b9 01       		.uleb128 0x1
 1034 00ba 13       		.uleb128 0x13
 1035 00bb 00       		.byte	0
 1036 00bc 00       		.byte	0
 1037 00bd 0C       		.uleb128 0xc
 1038 00be 05       		.uleb128 0x5
 1039 00bf 00       		.byte	0
 1040 00c0 03       		.uleb128 0x3
 1041 00c1 0E       		.uleb128 0xe
 1042 00c2 3A       		.uleb128 0x3a
 1043 00c3 0B       		.uleb128 0xb
 1044 00c4 3B       		.uleb128 0x3b
 1045 00c5 05       		.uleb128 0x5
 1046 00c6 49       		.uleb128 0x49
 1047 00c7 13       		.uleb128 0x13
 1048 00c8 02       		.uleb128 0x2
 1049 00c9 18       		.uleb128 0x18
 1050 00ca 00       		.byte	0
 1051 00cb 00       		.byte	0
 1052 00cc 0D       		.uleb128 0xd
 1053 00cd 2E       		.uleb128 0x2e
 1054 00ce 00       		.byte	0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 33


 1055 00cf 3F       		.uleb128 0x3f
 1056 00d0 19       		.uleb128 0x19
 1057 00d1 03       		.uleb128 0x3
 1058 00d2 0E       		.uleb128 0xe
 1059 00d3 3A       		.uleb128 0x3a
 1060 00d4 0B       		.uleb128 0xb
 1061 00d5 3B       		.uleb128 0x3b
 1062 00d6 05       		.uleb128 0x5
 1063 00d7 27       		.uleb128 0x27
 1064 00d8 19       		.uleb128 0x19
 1065 00d9 11       		.uleb128 0x11
 1066 00da 01       		.uleb128 0x1
 1067 00db 12       		.uleb128 0x12
 1068 00dc 06       		.uleb128 0x6
 1069 00dd 40       		.uleb128 0x40
 1070 00de 18       		.uleb128 0x18
 1071 00df 9742     		.uleb128 0x2117
 1072 00e1 19       		.uleb128 0x19
 1073 00e2 00       		.byte	0
 1074 00e3 00       		.byte	0
 1075 00e4 0E       		.uleb128 0xe
 1076 00e5 2E       		.uleb128 0x2e
 1077 00e6 00       		.byte	0
 1078 00e7 3F       		.uleb128 0x3f
 1079 00e8 19       		.uleb128 0x19
 1080 00e9 03       		.uleb128 0x3
 1081 00ea 0E       		.uleb128 0xe
 1082 00eb 3A       		.uleb128 0x3a
 1083 00ec 0B       		.uleb128 0xb
 1084 00ed 3B       		.uleb128 0x3b
 1085 00ee 05       		.uleb128 0x5
 1086 00ef 27       		.uleb128 0x27
 1087 00f0 19       		.uleb128 0x19
 1088 00f1 49       		.uleb128 0x49
 1089 00f2 13       		.uleb128 0x13
 1090 00f3 11       		.uleb128 0x11
 1091 00f4 01       		.uleb128 0x1
 1092 00f5 12       		.uleb128 0x12
 1093 00f6 06       		.uleb128 0x6
 1094 00f7 40       		.uleb128 0x40
 1095 00f8 18       		.uleb128 0x18
 1096 00f9 9742     		.uleb128 0x2117
 1097 00fb 19       		.uleb128 0x19
 1098 00fc 00       		.byte	0
 1099 00fd 00       		.byte	0
 1100 00fe 0F       		.uleb128 0xf
 1101 00ff 2E       		.uleb128 0x2e
 1102 0100 00       		.byte	0
 1103 0101 3F       		.uleb128 0x3f
 1104 0102 19       		.uleb128 0x19
 1105 0103 03       		.uleb128 0x3
 1106 0104 0E       		.uleb128 0xe
 1107 0105 3A       		.uleb128 0x3a
 1108 0106 0B       		.uleb128 0xb
 1109 0107 3B       		.uleb128 0x3b
 1110 0108 05       		.uleb128 0x5
 1111 0109 27       		.uleb128 0x27
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 34


 1112 010a 19       		.uleb128 0x19
 1113 010b 11       		.uleb128 0x11
 1114 010c 01       		.uleb128 0x1
 1115 010d 12       		.uleb128 0x12
 1116 010e 06       		.uleb128 0x6
 1117 010f 40       		.uleb128 0x40
 1118 0110 18       		.uleb128 0x18
 1119 0111 9642     		.uleb128 0x2116
 1120 0113 19       		.uleb128 0x19
 1121 0114 00       		.byte	0
 1122 0115 00       		.byte	0
 1123 0116 10       		.uleb128 0x10
 1124 0117 34       		.uleb128 0x34
 1125 0118 00       		.byte	0
 1126 0119 03       		.uleb128 0x3
 1127 011a 0E       		.uleb128 0xe
 1128 011b 3A       		.uleb128 0x3a
 1129 011c 0B       		.uleb128 0xb
 1130 011d 3B       		.uleb128 0x3b
 1131 011e 0B       		.uleb128 0xb
 1132 011f 49       		.uleb128 0x49
 1133 0120 13       		.uleb128 0x13
 1134 0121 3F       		.uleb128 0x3f
 1135 0122 19       		.uleb128 0x19
 1136 0123 02       		.uleb128 0x2
 1137 0124 18       		.uleb128 0x18
 1138 0125 00       		.byte	0
 1139 0126 00       		.byte	0
 1140 0127 00       		.byte	0
 1141              		.section	.debug_aranges,"",%progbits
 1142 0000 8C000000 		.4byte	0x8c
 1143 0004 0200     		.2byte	0x2
 1144 0006 00000000 		.4byte	.Ldebug_info0
 1145 000a 04       		.byte	0x4
 1146 000b 00       		.byte	0
 1147 000c 0000     		.2byte	0
 1148 000e 0000     		.2byte	0
 1149 0010 00000000 		.4byte	.LFB0
 1150 0014 4C000000 		.4byte	.LFE0-.LFB0
 1151 0018 00000000 		.4byte	.LFB1
 1152 001c 20000000 		.4byte	.LFE1-.LFB1
 1153 0020 00000000 		.4byte	.LFB2
 1154 0024 24000000 		.4byte	.LFE2-.LFB2
 1155 0028 00000000 		.4byte	.LFB3
 1156 002c 1C000000 		.4byte	.LFE3-.LFB3
 1157 0030 00000000 		.4byte	.LFB4
 1158 0034 20000000 		.4byte	.LFE4-.LFB4
 1159 0038 00000000 		.4byte	.LFB5
 1160 003c 10000000 		.4byte	.LFE5-.LFB5
 1161 0040 00000000 		.4byte	.LFB6
 1162 0044 14000000 		.4byte	.LFE6-.LFB6
 1163 0048 00000000 		.4byte	.LFB7
 1164 004c 14000000 		.4byte	.LFE7-.LFB7
 1165 0050 00000000 		.4byte	.LFB8
 1166 0054 20000000 		.4byte	.LFE8-.LFB8
 1167 0058 00000000 		.4byte	.LFB9
 1168 005c 14000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 35


 1169 0060 00000000 		.4byte	.LFB10
 1170 0064 20000000 		.4byte	.LFE10-.LFB10
 1171 0068 00000000 		.4byte	.LFB11
 1172 006c 14000000 		.4byte	.LFE11-.LFB11
 1173 0070 00000000 		.4byte	.LFB12
 1174 0074 20000000 		.4byte	.LFE12-.LFB12
 1175 0078 00000000 		.4byte	.LFB13
 1176 007c 1C000000 		.4byte	.LFE13-.LFB13
 1177 0080 00000000 		.4byte	.LFB14
 1178 0084 1C000000 		.4byte	.LFE14-.LFB14
 1179 0088 00000000 		.4byte	0
 1180 008c 00000000 		.4byte	0
 1181              		.section	.debug_ranges,"",%progbits
 1182              	.Ldebug_ranges0:
 1183 0000 00000000 		.4byte	.LFB0
 1184 0004 4C000000 		.4byte	.LFE0
 1185 0008 00000000 		.4byte	.LFB1
 1186 000c 20000000 		.4byte	.LFE1
 1187 0010 00000000 		.4byte	.LFB2
 1188 0014 24000000 		.4byte	.LFE2
 1189 0018 00000000 		.4byte	.LFB3
 1190 001c 1C000000 		.4byte	.LFE3
 1191 0020 00000000 		.4byte	.LFB4
 1192 0024 20000000 		.4byte	.LFE4
 1193 0028 00000000 		.4byte	.LFB5
 1194 002c 10000000 		.4byte	.LFE5
 1195 0030 00000000 		.4byte	.LFB6
 1196 0034 14000000 		.4byte	.LFE6
 1197 0038 00000000 		.4byte	.LFB7
 1198 003c 14000000 		.4byte	.LFE7
 1199 0040 00000000 		.4byte	.LFB8
 1200 0044 20000000 		.4byte	.LFE8
 1201 0048 00000000 		.4byte	.LFB9
 1202 004c 14000000 		.4byte	.LFE9
 1203 0050 00000000 		.4byte	.LFB10
 1204 0054 20000000 		.4byte	.LFE10
 1205 0058 00000000 		.4byte	.LFB11
 1206 005c 14000000 		.4byte	.LFE11
 1207 0060 00000000 		.4byte	.LFB12
 1208 0064 20000000 		.4byte	.LFE12
 1209 0068 00000000 		.4byte	.LFB13
 1210 006c 1C000000 		.4byte	.LFE13
 1211 0070 00000000 		.4byte	.LFB14
 1212 0074 1C000000 		.4byte	.LFE14
 1213 0078 00000000 		.4byte	0
 1214 007c 00000000 		.4byte	0
 1215              		.section	.debug_line,"",%progbits
 1216              	.Ldebug_line0:
 1217 0000 75010000 		.section	.debug_str,"MS",%progbits,1
 1217      02004900 
 1217      00000201 
 1217      FB0E0D00 
 1217      01010101 
 1218              	.LASF37:
 1219 0000 53706565 		.ascii	"SpeedTimer_interruptState\000"
 1219      6454696D 
 1219      65725F69 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 36


 1219      6E746572 
 1219      72757074 
 1220              	.LASF22:
 1221 001a 53706565 		.ascii	"SpeedTimer_ReadControlRegister\000"
 1221      6454696D 
 1221      65725F52 
 1221      65616443 
 1221      6F6E7472 
 1222              	.LASF28:
 1223 0039 70657269 		.ascii	"period\000"
 1223      6F6400
 1224              	.LASF21:
 1225 0040 53706565 		.ascii	"SpeedTimer_ReadStatusRegister\000"
 1225      6454696D 
 1225      65725F52 
 1225      65616453 
 1225      74617475 
 1226              	.LASF20:
 1227 005e 53706565 		.ascii	"SpeedTimer_SoftwareCapture\000"
 1227      6454696D 
 1227      65725F53 
 1227      6F667477 
 1227      61726543 
 1228              	.LASF3:
 1229 0079 73686F72 		.ascii	"short unsigned int\000"
 1229      7420756E 
 1229      7369676E 
 1229      65642069 
 1229      6E7400
 1230              	.LASF17:
 1231 008c 53706565 		.ascii	"SpeedTimer_Stop\000"
 1231      6454696D 
 1231      65725F53 
 1231      746F7000 
 1232              	.LASF9:
 1233 009c 666C6F61 		.ascii	"float\000"
 1233      7400
 1234              	.LASF34:
 1235 00a2 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1235      4320342E 
 1235      382E3420 
 1235      32303134 
 1235      30353236 
 1236 00d5 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1236      20726576 
 1236      6973696F 
 1236      6E203231 
 1236      31333538 
 1237 0108 30202D66 		.ascii	"0 -ffunction-sections\000"
 1237      66756E63 
 1237      74696F6E 
 1237      2D736563 
 1237      74696F6E 
 1238              	.LASF26:
 1239 011e 53706565 		.ascii	"SpeedTimer_ReadPeriod\000"
 1239      6454696D 
 1239      65725F52 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 37


 1239      65616450 
 1239      6572696F 
 1240              	.LASF1:
 1241 0134 756E7369 		.ascii	"unsigned char\000"
 1241      676E6564 
 1241      20636861 
 1241      7200
 1242              	.LASF13:
 1243 0142 72656738 		.ascii	"reg8\000"
 1243      00
 1244              	.LASF27:
 1245 0147 53706565 		.ascii	"SpeedTimer_WritePeriod\000"
 1245      6454696D 
 1245      65725F57 
 1245      72697465 
 1245      50657269 
 1246              	.LASF5:
 1247 015e 6C6F6E67 		.ascii	"long unsigned int\000"
 1247      20756E73 
 1247      69676E65 
 1247      6420696E 
 1247      7400
 1248              	.LASF12:
 1249 0170 75696E74 		.ascii	"uint8\000"
 1249      3800
 1250              	.LASF25:
 1251 0176 636F6E74 		.ascii	"control\000"
 1251      726F6C00 
 1252              	.LASF35:
 1253 017e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\SpeedTimer.c\000"
 1253      6E657261 
 1253      7465645F 
 1253      536F7572 
 1253      63655C50 
 1254              	.LASF16:
 1255 01a4 53706565 		.ascii	"SpeedTimer_Start\000"
 1255      6454696D 
 1255      65725F53 
 1255      74617274 
 1255      00
 1256              	.LASF31:
 1257 01b5 636F756E 		.ascii	"counter\000"
 1257      74657200 
 1258              	.LASF23:
 1259 01bd 53706565 		.ascii	"SpeedTimer_WriteControlRegister\000"
 1259      6454696D 
 1259      65725F57 
 1259      72697465 
 1259      436F6E74 
 1260              	.LASF10:
 1261 01dd 646F7562 		.ascii	"double\000"
 1261      6C6500
 1262              	.LASF38:
 1263 01e4 53706565 		.ascii	"SpeedTimer_initVar\000"
 1263      6454696D 
 1263      65725F69 
 1263      6E697456 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 38


 1263      617200
 1264              	.LASF36:
 1265 01f7 433A5C55 		.ascii	"C:\\Users\\Sam\\OneDrive\\Github\\PSoC-4-Motor-Cont"
 1265      73657273 
 1265      5C53616D 
 1265      5C4F6E65 
 1265      44726976 
 1266 0225 726F6C6C 		.ascii	"roller\\PSoC 4 Encoder Modbus Slave.cydsn\000"
 1266      65725C50 
 1266      536F4320 
 1266      3420456E 
 1266      636F6465 
 1267              	.LASF15:
 1268 024e 53706565 		.ascii	"SpeedTimer_Enable\000"
 1268      6454696D 
 1268      65725F45 
 1268      6E61626C 
 1268      6500
 1269              	.LASF8:
 1270 0260 756E7369 		.ascii	"unsigned int\000"
 1270      676E6564 
 1270      20696E74 
 1270      00
 1271              	.LASF7:
 1272 026d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1272      206C6F6E 
 1272      6720756E 
 1272      7369676E 
 1272      65642069 
 1273              	.LASF14:
 1274 0284 73697A65 		.ascii	"sizetype\000"
 1274      74797065 
 1274      00
 1275              	.LASF6:
 1276 028d 6C6F6E67 		.ascii	"long long int\000"
 1276      206C6F6E 
 1276      6720696E 
 1276      7400
 1277              	.LASF19:
 1278 029b 53706565 		.ascii	"SpeedTimer_SetInterruptMode\000"
 1278      6454696D 
 1278      65725F53 
 1278      6574496E 
 1278      74657272 
 1279              	.LASF24:
 1280 02b7 696E7465 		.ascii	"interruptMode\000"
 1280      72727570 
 1280      744D6F64 
 1280      6500
 1281              	.LASF32:
 1282 02c5 53706565 		.ascii	"SpeedTimer_ReadCounter\000"
 1282      6454696D 
 1282      65725F52 
 1282      65616443 
 1282      6F756E74 
 1283              	.LASF18:
 1284 02dc 53706565 		.ascii	"SpeedTimer_Init\000"
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccud1VTa.s 			page 39


 1284      6454696D 
 1284      65725F49 
 1284      6E697400 
 1285              	.LASF2:
 1286 02ec 73686F72 		.ascii	"short int\000"
 1286      7420696E 
 1286      7400
 1287              	.LASF33:
 1288 02f6 53706565 		.ascii	"SpeedTimer_ClearFIFO\000"
 1288      6454696D 
 1288      65725F43 
 1288      6C656172 
 1288      4649464F 
 1289              	.LASF29:
 1290 030b 53706565 		.ascii	"SpeedTimer_ReadCapture\000"
 1290      6454696D 
 1290      65725F52 
 1290      65616443 
 1290      61707475 
 1291              	.LASF4:
 1292 0322 6C6F6E67 		.ascii	"long int\000"
 1292      20696E74 
 1292      00
 1293              	.LASF11:
 1294 032b 63686172 		.ascii	"char\000"
 1294      00
 1295              	.LASF30:
 1296 0330 53706565 		.ascii	"SpeedTimer_WriteCounter\000"
 1296      6454696D 
 1296      65725F57 
 1296      72697465 
 1296      436F756E 
 1297              	.LASF0:
 1298 0348 7369676E 		.ascii	"signed char\000"
 1298      65642063 
 1298      68617200 
 1299              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
