ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Modbus.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	holdingReg,200,4
  18              		.comm	coils,50,4
  19              		.comm	received,125,4
  20              		.comm	response,125,4
  21              		.global	newMessage
  22              		.data
  23              		.type	newMessage, %object
  24              		.size	newMessage, 1
  25              	newMessage:
  26 0000 01       		.byte	1
  27              		.global	middleOfMessage
  28              		.bss
  29              		.type	middleOfMessage, %object
  30              		.size	middleOfMessage, 1
  31              	middleOfMessage:
  32 0000 00       		.space	1
  33              		.global	z
  34              		.type	z, %object
  35              		.size	z, 1
  36              	z:
  37 0001 00       		.space	1
  38              		.global	messageLengthNotChanged
  39              		.type	messageLengthNotChanged, %object
  40              		.size	messageLengthNotChanged, 1
  41              	messageLengthNotChanged:
  42 0002 00       		.space	1
  43              		.global	messageLength
  44              		.type	messageLength, %object
  45              		.size	messageLength, 1
  46              	messageLength:
  47 0003 00       		.space	1
  48              		.global	oldMessageLength
  49              		.type	oldMessageLength, %object
  50              		.size	oldMessageLength, 1
  51              	oldMessageLength:
  52 0004 00       		.space	1
  53              		.global	timerCount
  54              		.type	timerCount, %object
  55              		.size	timerCount, 1
  56              	timerCount:
  57 0005 00       		.space	1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 2


  58              		.global	middleMessageCount
  59              		.type	middleMessageCount, %object
  60              		.size	middleMessageCount, 1
  61              	middleMessageCount:
  62 0006 00       		.space	1
  63              		.global	newMessageCount
  64              		.type	newMessageCount, %object
  65              		.size	newMessageCount, 1
  66              	newMessageCount:
  67 0007 00       		.space	1
  68              		.global	oldPin
  69              		.type	oldPin, %object
  70              		.size	oldPin, 1
  71              	oldPin:
  72 0008 00       		.space	1
  73              		.global	modbusMessage
  74              		.type	modbusMessage, %object
  75              		.size	modbusMessage, 1
  76              	modbusMessage:
  77 0009 00       		.space	1
  78              		.global	turnLineAround
  79              		.type	turnLineAround, %object
  80              		.size	turnLineAround, 1
  81              	turnLineAround:
  82 000a 00       		.space	1
  83              		.section	.text.decodeMessage,"ax",%progbits
  84              		.align	2
  85              		.global	decodeMessage
  86              		.code	16
  87              		.thumb_func
  88              		.type	decodeMessage, %function
  89              	decodeMessage:
  90              	.LFB33:
  91              		.file 1 ".\\Modbus.c"
   1:.\Modbus.c    **** /* ========================================
   2:.\Modbus.c    ****  *
   3:.\Modbus.c    ****  * Copyright Sam Walsh, 2014
   4:.\Modbus.c    ****  * All Rights Reserved.
   5:.\Modbus.c    ****  *
   6:.\Modbus.c    ****  * Modbus.c all of the modbus and communication functions
   7:.\Modbus.c    ****  *
   8:.\Modbus.c    ****  * ========================================
   9:.\Modbus.c    **** */
  10:.\Modbus.c    **** #include <project.h>
  11:.\Modbus.c    **** #include <cydevice_trm.h>
  12:.\Modbus.c    **** #include <CyLib.h>
  13:.\Modbus.c    **** #include <interrupts.h>
  14:.\Modbus.c    **** #include <ModbusUART.h>
  15:.\Modbus.c    **** #include <MessageTimer.h>
  16:.\Modbus.c    **** #include <Modbus.h>
  17:.\Modbus.c    **** 
  18:.\Modbus.c    **** #define SlaveAddress 1 //Change this to whatever you want
  19:.\Modbus.c    **** #define CHECK_BIT(var,pos) !!((var) & (1 << (pos)))
  20:.\Modbus.c    **** 
  21:.\Modbus.c    **** unsigned int  holdingReg[50];
  22:.\Modbus.c    **** unsigned char coils[50];
  23:.\Modbus.c    **** unsigned char received[125];
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 3


  24:.\Modbus.c    **** unsigned char response[125]; //Enough to return all holding-r's
  25:.\Modbus.c    **** 
  26:.\Modbus.c    **** //Global variables (going to definitely use these)//
  27:.\Modbus.c    **** volatile uint8 newMessage = 1;
  28:.\Modbus.c    **** volatile uint8 middleOfMessage = 0;
  29:.\Modbus.c    **** volatile uint8 z = 0;
  30:.\Modbus.c    **** volatile uint8 messageLengthNotChanged = 0;
  31:.\Modbus.c    **** volatile uint8 messageLength = 0;
  32:.\Modbus.c    **** volatile uint8 oldMessageLength = 0;
  33:.\Modbus.c    **** volatile uint8 timerCount = 0;
  34:.\Modbus.c    **** volatile uint8 middleMessageCount = 0;
  35:.\Modbus.c    **** volatile uint8 newMessageCount = 0;
  36:.\Modbus.c    **** volatile uint8 oldPin = 0;
  37:.\Modbus.c    **** volatile uint8 modbusMessage = 0;
  38:.\Modbus.c    **** volatile uint8 turnLineAround = 0;
  39:.\Modbus.c    **** 
  40:.\Modbus.c    **** void decodeMessage(void)
  41:.\Modbus.c    **** {
  92              		.loc 1 41 0
  93              		.cfi_startproc
  94 0000 98B5     		push	{r3, r4, r7, lr}
  95              		.cfi_def_cfa_offset 16
  96              		.cfi_offset 3, -16
  97              		.cfi_offset 4, -12
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
  42:.\Modbus.c    ****     if(middleOfMessage)
 102              		.loc 1 42 0
 103 0004 2B4B     		ldr	r3, .L4
 104 0006 1B78     		ldrb	r3, [r3]
 105 0008 DBB2     		uxtb	r3, r3
 106 000a 002B     		cmp	r3, #0
 107 000c 1FD0     		beq	.L2
  43:.\Modbus.c    ****     {
  44:.\Modbus.c    ****         received[z] = ModbusUART_UartGetChar();
 108              		.loc 1 44 0
 109 000e 2A4B     		ldr	r3, .L4+4
 110 0010 1B78     		ldrb	r3, [r3]
 111 0012 DBB2     		uxtb	r3, r3
 112 0014 1C1C     		mov	r4, r3
 113 0016 FFF7FEFF 		bl	ModbusUART_UartGetChar
 114 001a 031C     		mov	r3, r0
 115 001c DAB2     		uxtb	r2, r3
 116 001e 274B     		ldr	r3, .L4+8
 117 0020 1A55     		strb	r2, [r3, r4]
  45:.\Modbus.c    ****         z++;
 118              		.loc 1 45 0
 119 0022 254B     		ldr	r3, .L4+4
 120 0024 1B78     		ldrb	r3, [r3]
 121 0026 DBB2     		uxtb	r3, r3
 122 0028 0133     		add	r3, r3, #1
 123 002a DAB2     		uxtb	r2, r3
 124 002c 224B     		ldr	r3, .L4+4
 125 002e 1A70     		strb	r2, [r3]
  46:.\Modbus.c    ****         middleMessageCount ++;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 4


 126              		.loc 1 46 0
 127 0030 234B     		ldr	r3, .L4+12
 128 0032 1B78     		ldrb	r3, [r3]
 129 0034 DBB2     		uxtb	r3, r3
 130 0036 0133     		add	r3, r3, #1
 131 0038 DAB2     		uxtb	r2, r3
 132 003a 214B     		ldr	r3, .L4+12
 133 003c 1A70     		strb	r2, [r3]
  47:.\Modbus.c    ****         messageLengthNotChanged = 0;
 134              		.loc 1 47 0
 135 003e 214B     		ldr	r3, .L4+16
 136 0040 0022     		mov	r2, #0
 137 0042 1A70     		strb	r2, [r3]
  48:.\Modbus.c    ****         messageLength = z;
 138              		.loc 1 48 0
 139 0044 1C4B     		ldr	r3, .L4+4
 140 0046 1B78     		ldrb	r3, [r3]
 141 0048 DAB2     		uxtb	r2, r3
 142 004a 1F4B     		ldr	r3, .L4+20
 143 004c 1A70     		strb	r2, [r3]
 144              	.L2:
  49:.\Modbus.c    ****     }
  50:.\Modbus.c    ****     
  51:.\Modbus.c    ****     if(newMessage)
 145              		.loc 1 51 0
 146 004e 1F4B     		ldr	r3, .L4+24
 147 0050 1B78     		ldrb	r3, [r3]
 148 0052 DBB2     		uxtb	r3, r3
 149 0054 002B     		cmp	r3, #0
 150 0056 2BD0     		beq	.L1
  52:.\Modbus.c    ****     {
  53:.\Modbus.c    ****         received[z] = ModbusUART_UartGetChar();
 151              		.loc 1 53 0
 152 0058 174B     		ldr	r3, .L4+4
 153 005a 1B78     		ldrb	r3, [r3]
 154 005c DBB2     		uxtb	r3, r3
 155 005e 1C1C     		mov	r4, r3
 156 0060 FFF7FEFF 		bl	ModbusUART_UartGetChar
 157 0064 031C     		mov	r3, r0
 158 0066 DAB2     		uxtb	r2, r3
 159 0068 144B     		ldr	r3, .L4+8
 160 006a 1A55     		strb	r2, [r3, r4]
  54:.\Modbus.c    ****         z++;
 161              		.loc 1 54 0
 162 006c 124B     		ldr	r3, .L4+4
 163 006e 1B78     		ldrb	r3, [r3]
 164 0070 DBB2     		uxtb	r3, r3
 165 0072 0133     		add	r3, r3, #1
 166 0074 DAB2     		uxtb	r2, r3
 167 0076 104B     		ldr	r3, .L4+4
 168 0078 1A70     		strb	r2, [r3]
  55:.\Modbus.c    ****         messageLength = z;
 169              		.loc 1 55 0
 170 007a 0F4B     		ldr	r3, .L4+4
 171 007c 1B78     		ldrb	r3, [r3]
 172 007e DAB2     		uxtb	r2, r3
 173 0080 114B     		ldr	r3, .L4+20
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 5


 174 0082 1A70     		strb	r2, [r3]
  56:.\Modbus.c    ****         middleOfMessage = 1;
 175              		.loc 1 56 0
 176 0084 0B4B     		ldr	r3, .L4
 177 0086 0122     		mov	r2, #1
 178 0088 1A70     		strb	r2, [r3]
  57:.\Modbus.c    ****         newMessage = 0;
 179              		.loc 1 57 0
 180 008a 104B     		ldr	r3, .L4+24
 181 008c 0022     		mov	r2, #0
 182 008e 1A70     		strb	r2, [r3]
  58:.\Modbus.c    ****         MessageTimer_Start();
 183              		.loc 1 58 0
 184 0090 FFF7FEFF 		bl	MessageTimer_Start
  59:.\Modbus.c    ****         EndOfMessage_StartEx(endOfMessage_isr);
 185              		.loc 1 59 0
 186 0094 0E4B     		ldr	r3, .L4+28
 187 0096 181C     		mov	r0, r3
 188 0098 FFF7FEFF 		bl	EndOfMessage_StartEx
  60:.\Modbus.c    ****         newMessageCount ++;
 189              		.loc 1 60 0
 190 009c 0D4B     		ldr	r3, .L4+32
 191 009e 1B78     		ldrb	r3, [r3]
 192 00a0 DBB2     		uxtb	r3, r3
 193 00a2 0133     		add	r3, r3, #1
 194 00a4 DAB2     		uxtb	r2, r3
 195 00a6 0B4B     		ldr	r3, .L4+32
 196 00a8 1A70     		strb	r2, [r3]
  61:.\Modbus.c    ****         messageLengthNotChanged = 0;
 197              		.loc 1 61 0
 198 00aa 064B     		ldr	r3, .L4+16
 199 00ac 0022     		mov	r2, #0
 200 00ae 1A70     		strb	r2, [r3]
 201              	.L1:
  62:.\Modbus.c    **** 
  63:.\Modbus.c    ****     }
  64:.\Modbus.c    **** }
 202              		.loc 1 64 0
 203 00b0 BD46     		mov	sp, r7
 204              		@ sp needed
 205 00b2 98BD     		pop	{r3, r4, r7, pc}
 206              	.L5:
 207              		.align	2
 208              	.L4:
 209 00b4 00000000 		.word	middleOfMessage
 210 00b8 00000000 		.word	z
 211 00bc 00000000 		.word	received
 212 00c0 00000000 		.word	middleMessageCount
 213 00c4 00000000 		.word	messageLengthNotChanged
 214 00c8 00000000 		.word	messageLength
 215 00cc 00000000 		.word	newMessage
 216 00d0 00000000 		.word	endOfMessage_isr
 217 00d4 00000000 		.word	newMessageCount
 218              		.cfi_endproc
 219              	.LFE33:
 220              		.size	decodeMessage, .-decodeMessage
 221              		.section	.text.checkIfEndOfMessage,"ax",%progbits
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 6


 222              		.align	2
 223              		.global	checkIfEndOfMessage
 224              		.code	16
 225              		.thumb_func
 226              		.type	checkIfEndOfMessage, %function
 227              	checkIfEndOfMessage:
 228              	.LFB34:
  65:.\Modbus.c    **** 
  66:.\Modbus.c    **** void checkIfEndOfMessage(void)
  67:.\Modbus.c    **** {
 229              		.loc 1 67 0
 230              		.cfi_startproc
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
  68:.\Modbus.c    ****     if(turnLineAround > 0)
 237              		.loc 1 68 0
 238 0004 334B     		ldr	r3, .L12
 239 0006 1B78     		ldrb	r3, [r3]
 240 0008 DBB2     		uxtb	r3, r3
 241 000a 002B     		cmp	r3, #0
 242 000c 1CD0     		beq	.L7
  69:.\Modbus.c    ****     {
  70:.\Modbus.c    ****         turnLineAround -= 1;
 243              		.loc 1 70 0
 244 000e 314B     		ldr	r3, .L12
 245 0010 1B78     		ldrb	r3, [r3]
 246 0012 DBB2     		uxtb	r3, r3
 247 0014 013B     		sub	r3, r3, #1
 248 0016 DAB2     		uxtb	r2, r3
 249 0018 2E4B     		ldr	r3, .L12
 250 001a 1A70     		strb	r2, [r3]
  71:.\Modbus.c    ****         if(turnLineAround == 0)
 251              		.loc 1 71 0
 252 001c 2D4B     		ldr	r3, .L12
 253 001e 1B78     		ldrb	r3, [r3]
 254 0020 DBB2     		uxtb	r3, r3
 255 0022 002B     		cmp	r3, #0
 256 0024 0AD1     		bne	.L8
  72:.\Modbus.c    ****         {
  73:.\Modbus.c    ****           MessageTimer_Stop();
 257              		.loc 1 73 0
 258 0026 FFF7FEFF 		bl	MessageTimer_Stop
  74:.\Modbus.c    ****           EndOfMessage_Stop();
 259              		.loc 1 74 0
 260 002a FFF7FEFF 		bl	EndOfMessage_Stop
  75:.\Modbus.c    ****           writeEnable_Write(0); //turn line around
 261              		.loc 1 75 0
 262 002e 0020     		mov	r0, #0
 263 0030 FFF7FEFF 		bl	writeEnable_Write
  76:.\Modbus.c    ****           turnLineAround = 0;
 264              		.loc 1 76 0
 265 0034 274B     		ldr	r3, .L12
 266 0036 0022     		mov	r2, #0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 7


 267 0038 1A70     		strb	r2, [r3]
 268 003a 05E0     		b	.L7
 269              	.L8:
  77:.\Modbus.c    ****         }
  78:.\Modbus.c    ****         else
  79:.\Modbus.c    ****         {
  80:.\Modbus.c    ****             MessageTimer_Start();
 270              		.loc 1 80 0
 271 003c FFF7FEFF 		bl	MessageTimer_Start
  81:.\Modbus.c    ****             EndOfMessage_StartEx(endOfMessage_isr);   
 272              		.loc 1 81 0
 273 0040 254B     		ldr	r3, .L12+4
 274 0042 181C     		mov	r0, r3
 275 0044 FFF7FEFF 		bl	EndOfMessage_StartEx
 276              	.L7:
  82:.\Modbus.c    ****         }      
  83:.\Modbus.c    ****     }
  84:.\Modbus.c    ****     if(turnLineAround == 0)
 277              		.loc 1 84 0
 278 0048 224B     		ldr	r3, .L12
 279 004a 1B78     		ldrb	r3, [r3]
 280 004c DBB2     		uxtb	r3, r3
 281 004e 002B     		cmp	r3, #0
 282 0050 32D1     		bne	.L9
  85:.\Modbus.c    ****     if(middleOfMessage)
 283              		.loc 1 85 0
 284 0052 224B     		ldr	r3, .L12+8
 285 0054 1B78     		ldrb	r3, [r3]
 286 0056 DBB2     		uxtb	r3, r3
 287 0058 002B     		cmp	r3, #0
 288 005a 2DD0     		beq	.L9
  86:.\Modbus.c    ****     {
  87:.\Modbus.c    ****         if(oldMessageLength == messageLength)
 289              		.loc 1 87 0
 290 005c 204B     		ldr	r3, .L12+12
 291 005e 1B78     		ldrb	r3, [r3]
 292 0060 DAB2     		uxtb	r2, r3
 293 0062 204B     		ldr	r3, .L12+16
 294 0064 1B78     		ldrb	r3, [r3]
 295 0066 DBB2     		uxtb	r3, r3
 296 0068 9A42     		cmp	r2, r3
 297 006a 06D1     		bne	.L10
  88:.\Modbus.c    ****         {
  89:.\Modbus.c    ****             messageLengthNotChanged++;
 298              		.loc 1 89 0
 299 006c 1E4B     		ldr	r3, .L12+20
 300 006e 1B78     		ldrb	r3, [r3]
 301 0070 DBB2     		uxtb	r3, r3
 302 0072 0133     		add	r3, r3, #1
 303 0074 DAB2     		uxtb	r2, r3
 304 0076 1C4B     		ldr	r3, .L12+20
 305 0078 1A70     		strb	r2, [r3]
 306              	.L10:
  90:.\Modbus.c    ****         }
  91:.\Modbus.c    ****         if(messageLengthNotChanged == 5)
 307              		.loc 1 91 0
 308 007a 1B4B     		ldr	r3, .L12+20
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 8


 309 007c 1B78     		ldrb	r3, [r3]
 310 007e DBB2     		uxtb	r3, r3
 311 0080 052B     		cmp	r3, #5
 312 0082 13D1     		bne	.L11
  92:.\Modbus.c    ****         {
  93:.\Modbus.c    ****             //We are at the end of the message
  94:.\Modbus.c    ****             newMessage = 1;
 313              		.loc 1 94 0
 314 0084 194B     		ldr	r3, .L12+24
 315 0086 0122     		mov	r2, #1
 316 0088 1A70     		strb	r2, [r3]
  95:.\Modbus.c    ****             modbusMessage = 1; //for main loop
 317              		.loc 1 95 0
 318 008a 194B     		ldr	r3, .L12+28
 319 008c 0122     		mov	r2, #1
 320 008e 1A70     		strb	r2, [r3]
  96:.\Modbus.c    ****             middleOfMessage = 0;
 321              		.loc 1 96 0
 322 0090 124B     		ldr	r3, .L12+8
 323 0092 0022     		mov	r2, #0
 324 0094 1A70     		strb	r2, [r3]
  97:.\Modbus.c    ****             messageLengthNotChanged = 0;
 325              		.loc 1 97 0
 326 0096 144B     		ldr	r3, .L12+20
 327 0098 0022     		mov	r2, #0
 328 009a 1A70     		strb	r2, [r3]
  98:.\Modbus.c    ****             z=0;
 329              		.loc 1 98 0
 330 009c 154B     		ldr	r3, .L12+32
 331 009e 0022     		mov	r2, #0
 332 00a0 1A70     		strb	r2, [r3]
  99:.\Modbus.c    ****             MessageTimer_Stop();
 333              		.loc 1 99 0
 334 00a2 FFF7FEFF 		bl	MessageTimer_Stop
 100:.\Modbus.c    ****             EndOfMessage_Stop();
 335              		.loc 1 100 0
 336 00a6 FFF7FEFF 		bl	EndOfMessage_Stop
 337 00aa 05E0     		b	.L9
 338              	.L11:
 101:.\Modbus.c    ****             /*Clear received array */
 102:.\Modbus.c    ****             //memset(&received[0], 0, sizeof(received));
 103:.\Modbus.c    ****         }
 104:.\Modbus.c    ****         else
 105:.\Modbus.c    ****         {
 106:.\Modbus.c    ****             MessageTimer_Start();
 339              		.loc 1 106 0
 340 00ac FFF7FEFF 		bl	MessageTimer_Start
 107:.\Modbus.c    ****             EndOfMessage_StartEx(endOfMessage_isr); 
 341              		.loc 1 107 0
 342 00b0 094B     		ldr	r3, .L12+4
 343 00b2 181C     		mov	r0, r3
 344 00b4 FFF7FEFF 		bl	EndOfMessage_StartEx
 345              	.L9:
 108:.\Modbus.c    ****         }
 109:.\Modbus.c    ****     }
 110:.\Modbus.c    ****         oldMessageLength = messageLength; 
 346              		.loc 1 110 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 9


 347 00b8 0A4B     		ldr	r3, .L12+16
 348 00ba 1B78     		ldrb	r3, [r3]
 349 00bc DAB2     		uxtb	r2, r3
 350 00be 084B     		ldr	r3, .L12+12
 351 00c0 1A70     		strb	r2, [r3]
 111:.\Modbus.c    ****         timerCount ++; //debugging counter to find out how many times the loop occurred.
 352              		.loc 1 111 0
 353 00c2 0D4B     		ldr	r3, .L12+36
 354 00c4 1B78     		ldrb	r3, [r3]
 355 00c6 DBB2     		uxtb	r3, r3
 356 00c8 0133     		add	r3, r3, #1
 357 00ca DAB2     		uxtb	r2, r3
 358 00cc 0A4B     		ldr	r3, .L12+36
 359 00ce 1A70     		strb	r2, [r3]
 112:.\Modbus.c    **** }
 360              		.loc 1 112 0
 361 00d0 BD46     		mov	sp, r7
 362              		@ sp needed
 363 00d2 80BD     		pop	{r7, pc}
 364              	.L13:
 365              		.align	2
 366              	.L12:
 367 00d4 00000000 		.word	turnLineAround
 368 00d8 00000000 		.word	endOfMessage_isr
 369 00dc 00000000 		.word	middleOfMessage
 370 00e0 00000000 		.word	oldMessageLength
 371 00e4 00000000 		.word	messageLength
 372 00e8 00000000 		.word	messageLengthNotChanged
 373 00ec 00000000 		.word	newMessage
 374 00f0 00000000 		.word	modbusMessage
 375 00f4 00000000 		.word	z
 376 00f8 00000000 		.word	timerCount
 377              		.cfi_endproc
 378              	.LFE34:
 379              		.size	checkIfEndOfMessage, .-checkIfEndOfMessage
 380              		.section	.text.processMessage,"ax",%progbits
 381              		.align	2
 382              		.global	processMessage
 383              		.code	16
 384              		.thumb_func
 385              		.type	processMessage, %function
 386              	processMessage:
 387              	.LFB35:
 113:.\Modbus.c    **** 
 114:.\Modbus.c    **** void processMessage(void)
 115:.\Modbus.c    **** {
 388              		.loc 1 115 0
 389              		.cfi_startproc
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 116:.\Modbus.c    ****     if(received[0] == SlaveAddress){
 396              		.loc 1 116 0
 397 0004 224B     		ldr	r3, .L23
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 10


 398 0006 1B78     		ldrb	r3, [r3]
 399 0008 012B     		cmp	r3, #1
 400 000a 3BD1     		bne	.L15
 117:.\Modbus.c    ****         if(checkCRC() == 1){        
 401              		.loc 1 117 0
 402 000c FFF7FEFF 		bl	checkCRC
 403 0010 031C     		mov	r3, r0
 404 0012 012B     		cmp	r3, #1
 405 0014 36D1     		bne	.L15
 118:.\Modbus.c    **** 		if(received[1] == 0x01){
 406              		.loc 1 118 0
 407 0016 1E4B     		ldr	r3, .L23
 408 0018 5B78     		ldrb	r3, [r3, #1]
 409 001a 012B     		cmp	r3, #1
 410 001c 02D1     		bne	.L16
 119:.\Modbus.c    ****             readCoil();
 411              		.loc 1 119 0
 412 001e FFF7FEFF 		bl	readCoil
 413 0022 2FE0     		b	.L15
 414              	.L16:
 120:.\Modbus.c    ****         }
 121:.\Modbus.c    ****         else if(received[1] == 0x02){
 415              		.loc 1 121 0
 416 0024 1A4B     		ldr	r3, .L23
 417 0026 5B78     		ldrb	r3, [r3, #1]
 418 0028 022B     		cmp	r3, #2
 419 002a 02D1     		bne	.L17
 122:.\Modbus.c    ****             readInputCoil();
 420              		.loc 1 122 0
 421 002c FFF7FEFF 		bl	readInputCoil
 422 0030 28E0     		b	.L15
 423              	.L17:
 123:.\Modbus.c    ****         }
 124:.\Modbus.c    ****         else if(received[1] == 0x03){
 424              		.loc 1 124 0
 425 0032 174B     		ldr	r3, .L23
 426 0034 5B78     		ldrb	r3, [r3, #1]
 427 0036 032B     		cmp	r3, #3
 428 0038 02D1     		bne	.L18
 125:.\Modbus.c    ****             readReg();
 429              		.loc 1 125 0
 430 003a FFF7FEFF 		bl	readReg
 431 003e 21E0     		b	.L15
 432              	.L18:
 126:.\Modbus.c    ****         }
 127:.\Modbus.c    ****         else if(received[1] == 0x04){
 433              		.loc 1 127 0
 434 0040 134B     		ldr	r3, .L23
 435 0042 5B78     		ldrb	r3, [r3, #1]
 436 0044 042B     		cmp	r3, #4
 437 0046 02D1     		bne	.L19
 128:.\Modbus.c    ****             readInputReg();
 438              		.loc 1 128 0
 439 0048 FFF7FEFF 		bl	readInputReg
 440 004c 1AE0     		b	.L15
 441              	.L19:
 129:.\Modbus.c    ****         }
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 11


 130:.\Modbus.c    ****         else if(received[1] == 0x05){
 442              		.loc 1 130 0
 443 004e 104B     		ldr	r3, .L23
 444 0050 5B78     		ldrb	r3, [r3, #1]
 445 0052 052B     		cmp	r3, #5
 446 0054 02D1     		bne	.L20
 131:.\Modbus.c    ****             writeCoil();
 447              		.loc 1 131 0
 448 0056 FFF7FEFF 		bl	writeCoil
 449 005a 13E0     		b	.L15
 450              	.L20:
 132:.\Modbus.c    ****         }	  
 133:.\Modbus.c    ****         else if(received[1] == 0x06){
 451              		.loc 1 133 0
 452 005c 0C4B     		ldr	r3, .L23
 453 005e 5B78     		ldrb	r3, [r3, #1]
 454 0060 062B     		cmp	r3, #6
 455 0062 02D1     		bne	.L21
 134:.\Modbus.c    ****             writeReg();
 456              		.loc 1 134 0
 457 0064 FFF7FEFF 		bl	writeReg
 458 0068 0CE0     		b	.L15
 459              	.L21:
 135:.\Modbus.c    ****         }
 136:.\Modbus.c    ****         else if(received[1] == 0x10){
 460              		.loc 1 136 0
 461 006a 094B     		ldr	r3, .L23
 462 006c 5B78     		ldrb	r3, [r3, #1]
 463 006e 102B     		cmp	r3, #16
 464 0070 02D1     		bne	.L22
 137:.\Modbus.c    ****             writeMultipleRegs();
 465              		.loc 1 137 0
 466 0072 FFF7FEFF 		bl	writeMultipleRegs
 467 0076 05E0     		b	.L15
 468              	.L22:
 138:.\Modbus.c    ****         }
 139:.\Modbus.c    ****         else if(received[1] == 0x0F){
 469              		.loc 1 139 0
 470 0078 054B     		ldr	r3, .L23
 471 007a 5B78     		ldrb	r3, [r3, #1]
 472 007c 0F2B     		cmp	r3, #15
 473 007e 01D1     		bne	.L15
 140:.\Modbus.c    ****             writeMultipleCoils();
 474              		.loc 1 140 0
 475 0080 FFF7FEFF 		bl	writeMultipleCoils
 476              	.L15:
 141:.\Modbus.c    ****         }
 142:.\Modbus.c    ****         else{
 143:.\Modbus.c    ****          //   response[0] = 0; //error this does nothing though..
 144:.\Modbus.c    ****         }
 145:.\Modbus.c    ****     }
 146:.\Modbus.c    ****   }
 147:.\Modbus.c    ****   modbusMessage = 0;
 477              		.loc 1 147 0
 478 0084 034B     		ldr	r3, .L23+4
 479 0086 0022     		mov	r2, #0
 480 0088 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 12


 148:.\Modbus.c    **** }
 481              		.loc 1 148 0
 482 008a BD46     		mov	sp, r7
 483              		@ sp needed
 484 008c 80BD     		pop	{r7, pc}
 485              	.L24:
 486 008e C046     		.align	2
 487              	.L23:
 488 0090 00000000 		.word	received
 489 0094 00000000 		.word	modbusMessage
 490              		.cfi_endproc
 491              	.LFE35:
 492              		.size	processMessage, .-processMessage
 493              		.section	.text.readCoil,"ax",%progbits
 494              		.align	2
 495              		.global	readCoil
 496              		.code	16
 497              		.thumb_func
 498              		.type	readCoil, %function
 499              	readCoil:
 500              	.LFB36:
 149:.\Modbus.c    **** 
 150:.\Modbus.c    **** void readCoil(void)
 151:.\Modbus.c    **** {
 501              		.loc 1 151 0
 502              		.cfi_startproc
 503 0000 90B5     		push	{r4, r7, lr}
 504              		.cfi_def_cfa_offset 12
 505              		.cfi_offset 4, -12
 506              		.cfi_offset 7, -8
 507              		.cfi_offset 14, -4
 508 0002 87B0     		sub	sp, sp, #28
 509              		.cfi_def_cfa_offset 40
 510 0004 00AF     		add	r7, sp, #0
 511              		.cfi_def_cfa_register 7
 152:.\Modbus.c    **** /******************************************************************************/
 153:.\Modbus.c    **** /* Reads a coil and then responds                                             */
 154:.\Modbus.c    **** /******************************************************************************/
 155:.\Modbus.c    ****   unsigned int rc_Address = 0;
 512              		.loc 1 155 0
 513 0006 0023     		mov	r3, #0
 514 0008 FB60     		str	r3, [r7, #12]
 156:.\Modbus.c    ****   unsigned int rc_numCoils = 0;
 515              		.loc 1 156 0
 516 000a 0023     		mov	r3, #0
 517 000c BB60     		str	r3, [r7, #8]
 157:.\Modbus.c    ****   unsigned int crc = 0;
 518              		.loc 1 157 0
 519 000e 0023     		mov	r3, #0
 520 0010 7B60     		str	r3, [r7, #4]
 158:.\Modbus.c    **** 
 159:.\Modbus.c    ****   unsigned char howManyBytes = 0;
 521              		.loc 1 159 0
 522 0012 3B1C     		mov	r3, r7
 523 0014 1733     		add	r3, r3, #23
 524 0016 0022     		mov	r2, #0
 525 0018 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 13


 160:.\Modbus.c    ****   unsigned char remainder = 0;
 526              		.loc 1 160 0
 527 001a FB1C     		add	r3, r7, #3
 528 001c 0022     		mov	r2, #0
 529 001e 1A70     		strb	r2, [r3]
 161:.\Modbus.c    ****   unsigned char lsb = 0;
 530              		.loc 1 161 0
 531 0020 3B1C     		mov	r3, r7
 532 0022 1633     		add	r3, r3, #22
 533 0024 0022     		mov	r2, #0
 534 0026 1A70     		strb	r2, [r3]
 162:.\Modbus.c    ****   unsigned char i,j,k,l = 0;
 535              		.loc 1 162 0
 536 0028 3B1C     		mov	r3, r7
 537 002a 1233     		add	r3, r3, #18
 538 002c 0022     		mov	r2, #0
 539 002e 1A70     		strb	r2, [r3]
 163:.\Modbus.c    **** 
 164:.\Modbus.c    ****   //Combine address bytes
 165:.\Modbus.c    ****   rc_Address = received[2];
 540              		.loc 1 165 0
 541 0030 964B     		ldr	r3, .L41
 542 0032 9B78     		ldrb	r3, [r3, #2]
 543 0034 FB60     		str	r3, [r7, #12]
 166:.\Modbus.c    ****   rc_Address <<=8;
 544              		.loc 1 166 0
 545 0036 FB68     		ldr	r3, [r7, #12]
 546 0038 1B02     		lsl	r3, r3, #8
 547 003a FB60     		str	r3, [r7, #12]
 167:.\Modbus.c    ****   rc_Address |= received[3];
 548              		.loc 1 167 0
 549 003c 934B     		ldr	r3, .L41
 550 003e DB78     		ldrb	r3, [r3, #3]
 551 0040 FA68     		ldr	r2, [r7, #12]
 552 0042 1343     		orr	r3, r2
 553 0044 FB60     		str	r3, [r7, #12]
 168:.\Modbus.c    **** 
 169:.\Modbus.c    ****   //Combine number of coils bytes
 170:.\Modbus.c    ****   rc_numCoils = received[4];
 554              		.loc 1 170 0
 555 0046 914B     		ldr	r3, .L41
 556 0048 1B79     		ldrb	r3, [r3, #4]
 557 004a BB60     		str	r3, [r7, #8]
 171:.\Modbus.c    ****   rc_numCoils <<= 8;
 558              		.loc 1 171 0
 559 004c BB68     		ldr	r3, [r7, #8]
 560 004e 1B02     		lsl	r3, r3, #8
 561 0050 BB60     		str	r3, [r7, #8]
 172:.\Modbus.c    ****   rc_numCoils |= received[5];
 562              		.loc 1 172 0
 563 0052 8E4B     		ldr	r3, .L41
 564 0054 5B79     		ldrb	r3, [r3, #5]
 565 0056 BA68     		ldr	r2, [r7, #8]
 566 0058 1343     		orr	r3, r2
 567 005a BB60     		str	r3, [r7, #8]
 173:.\Modbus.c    **** 
 174:.\Modbus.c    ****   response[0] = SlaveAddress;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 14


 568              		.loc 1 174 0
 569 005c 8C4B     		ldr	r3, .L41+4
 570 005e 0122     		mov	r2, #1
 571 0060 1A70     		strb	r2, [r3]
 175:.\Modbus.c    ****   response[1] = 0x01;
 572              		.loc 1 175 0
 573 0062 8B4B     		ldr	r3, .L41+4
 574 0064 0122     		mov	r2, #1
 575 0066 5A70     		strb	r2, [r3, #1]
 176:.\Modbus.c    **** 
 177:.\Modbus.c    ****   howManyBytes = rc_numCoils/8;
 576              		.loc 1 177 0
 577 0068 BB68     		ldr	r3, [r7, #8]
 578 006a DA08     		lsr	r2, r3, #3
 579 006c 3B1C     		mov	r3, r7
 580 006e 1733     		add	r3, r3, #23
 581 0070 1A70     		strb	r2, [r3]
 178:.\Modbus.c    ****   remainder = rc_numCoils % 8;
 582              		.loc 1 178 0
 583 0072 BB68     		ldr	r3, [r7, #8]
 584 0074 D9B2     		uxtb	r1, r3
 585 0076 FB1C     		add	r3, r7, #3
 586 0078 0722     		mov	r2, #7
 587 007a 0A40     		and	r2, r1
 588 007c 1A70     		strb	r2, [r3]
 179:.\Modbus.c    **** 
 180:.\Modbus.c    ****   if(remainder){
 589              		.loc 1 180 0
 590 007e FB1C     		add	r3, r7, #3
 591 0080 1B78     		ldrb	r3, [r3]
 592 0082 002B     		cmp	r3, #0
 593 0084 06D0     		beq	.L26
 181:.\Modbus.c    ****     howManyBytes += 1;
 594              		.loc 1 181 0
 595 0086 3B1C     		mov	r3, r7
 596 0088 1733     		add	r3, r3, #23
 597 008a 3A1C     		mov	r2, r7
 598 008c 1732     		add	r2, r2, #23
 599 008e 1278     		ldrb	r2, [r2]
 600 0090 0132     		add	r2, r2, #1
 601 0092 1A70     		strb	r2, [r3]
 602              	.L26:
 182:.\Modbus.c    ****   }
 183:.\Modbus.c    ****   response[2] = howManyBytes;
 603              		.loc 1 183 0
 604 0094 7E4B     		ldr	r3, .L41+4
 605 0096 3A1C     		mov	r2, r7
 606 0098 1732     		add	r2, r2, #23
 607 009a 1278     		ldrb	r2, [r2]
 608 009c 9A70     		strb	r2, [r3, #2]
 184:.\Modbus.c    **** 
 185:.\Modbus.c    ****   l = rc_Address;
 609              		.loc 1 185 0
 610 009e 3B1C     		mov	r3, r7
 611 00a0 1233     		add	r3, r3, #18
 612 00a2 FA68     		ldr	r2, [r7, #12]
 613 00a4 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 15


 186:.\Modbus.c    ****   k = 3; //start at response 3
 614              		.loc 1 186 0
 615 00a6 3B1C     		mov	r3, r7
 616 00a8 1333     		add	r3, r3, #19
 617 00aa 0322     		mov	r2, #3
 618 00ac 1A70     		strb	r2, [r3]
 187:.\Modbus.c    **** 
 188:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 619              		.loc 1 188 0
 620 00ae 3B1C     		mov	r3, r7
 621 00b0 1533     		add	r3, r3, #21
 622 00b2 3A1C     		mov	r2, r7
 623 00b4 1732     		add	r2, r2, #23
 624 00b6 1278     		ldrb	r2, [r2]
 625 00b8 1A70     		strb	r2, [r3]
 626 00ba 9CE0     		b	.L27
 627              	.L38:
 189:.\Modbus.c    ****     if(i>1){
 628              		.loc 1 189 0
 629 00bc 3B1C     		mov	r3, r7
 630 00be 1533     		add	r3, r3, #21
 631 00c0 1B78     		ldrb	r3, [r3]
 632 00c2 012B     		cmp	r3, #1
 633 00c4 47D9     		bls	.L28
 190:.\Modbus.c    ****       for(j=0;j!=8;j++){
 634              		.loc 1 190 0
 635 00c6 3B1C     		mov	r3, r7
 636 00c8 1433     		add	r3, r3, #20
 637 00ca 0022     		mov	r2, #0
 638 00cc 1A70     		strb	r2, [r3]
 639 00ce 35E0     		b	.L29
 640              	.L32:
 191:.\Modbus.c    **** 	if(coils[l]){
 641              		.loc 1 191 0
 642 00d0 3B1C     		mov	r3, r7
 643 00d2 1233     		add	r3, r3, #18
 644 00d4 1B78     		ldrb	r3, [r3]
 645 00d6 6F4A     		ldr	r2, .L41+8
 646 00d8 D35C     		ldrb	r3, [r2, r3]
 647 00da 002B     		cmp	r3, #0
 648 00dc 04D0     		beq	.L30
 192:.\Modbus.c    ****           lsb = 1;
 649              		.loc 1 192 0
 650 00de 3B1C     		mov	r3, r7
 651 00e0 1633     		add	r3, r3, #22
 652 00e2 0122     		mov	r2, #1
 653 00e4 1A70     		strb	r2, [r3]
 654 00e6 03E0     		b	.L31
 655              	.L30:
 193:.\Modbus.c    **** 	}
 194:.\Modbus.c    **** 	else{
 195:.\Modbus.c    ****           lsb = 0;
 656              		.loc 1 195 0
 657 00e8 3B1C     		mov	r3, r7
 658 00ea 1633     		add	r3, r3, #22
 659 00ec 0022     		mov	r2, #0
 660 00ee 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 16


 661              	.L31:
 196:.\Modbus.c    **** 	}
 197:.\Modbus.c    **** 	response[k] ^= (lsb << j);
 662              		.loc 1 197 0
 663 00f0 3B1C     		mov	r3, r7
 664 00f2 1333     		add	r3, r3, #19
 665 00f4 1B78     		ldrb	r3, [r3]
 666 00f6 3A1C     		mov	r2, r7
 667 00f8 1332     		add	r2, r2, #19
 668 00fa 1278     		ldrb	r2, [r2]
 669 00fc 6449     		ldr	r1, .L41+4
 670 00fe 8A5C     		ldrb	r2, [r1, r2]
 671 0100 D1B2     		uxtb	r1, r2
 672 0102 3A1C     		mov	r2, r7
 673 0104 1632     		add	r2, r2, #22
 674 0106 1078     		ldrb	r0, [r2]
 675 0108 3A1C     		mov	r2, r7
 676 010a 1432     		add	r2, r2, #20
 677 010c 1278     		ldrb	r2, [r2]
 678 010e 041C     		mov	r4, r0
 679 0110 9440     		lsl	r4, r4, r2
 680 0112 221C     		mov	r2, r4
 681 0114 D2B2     		uxtb	r2, r2
 682 0116 4A40     		eor	r2, r1
 683 0118 D2B2     		uxtb	r2, r2
 684 011a D1B2     		uxtb	r1, r2
 685 011c 5C4A     		ldr	r2, .L41+4
 686 011e D154     		strb	r1, [r2, r3]
 198:.\Modbus.c    **** 	l++;
 687              		.loc 1 198 0
 688 0120 3B1C     		mov	r3, r7
 689 0122 1233     		add	r3, r3, #18
 690 0124 1A78     		ldrb	r2, [r3]
 691 0126 3B1C     		mov	r3, r7
 692 0128 1233     		add	r3, r3, #18
 693 012a 0132     		add	r2, r2, #1
 694 012c 1A70     		strb	r2, [r3]
 190:.\Modbus.c    ****       for(j=0;j!=8;j++){
 695              		.loc 1 190 0
 696 012e 3B1C     		mov	r3, r7
 697 0130 1433     		add	r3, r3, #20
 698 0132 1A78     		ldrb	r2, [r3]
 699 0134 3B1C     		mov	r3, r7
 700 0136 1433     		add	r3, r3, #20
 701 0138 0132     		add	r2, r2, #1
 702 013a 1A70     		strb	r2, [r3]
 703              	.L29:
 190:.\Modbus.c    ****       for(j=0;j!=8;j++){
 704              		.loc 1 190 0 is_stmt 0 discriminator 1
 705 013c 3B1C     		mov	r3, r7
 706 013e 1433     		add	r3, r3, #20
 707 0140 1B78     		ldrb	r3, [r3]
 708 0142 082B     		cmp	r3, #8
 709 0144 C4D1     		bne	.L32
 199:.\Modbus.c    ****       }
 200:.\Modbus.c    ****       k++;
 710              		.loc 1 200 0 is_stmt 1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 17


 711 0146 3B1C     		mov	r3, r7
 712 0148 1333     		add	r3, r3, #19
 713 014a 1A78     		ldrb	r2, [r3]
 714 014c 3B1C     		mov	r3, r7
 715 014e 1333     		add	r3, r3, #19
 716 0150 0132     		add	r2, r2, #1
 717 0152 1A70     		strb	r2, [r3]
 718 0154 48E0     		b	.L33
 719              	.L28:
 201:.\Modbus.c    ****     }
 202:.\Modbus.c    ****     else{
 203:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 720              		.loc 1 203 0
 721 0156 3B1C     		mov	r3, r7
 722 0158 1433     		add	r3, r3, #20
 723 015a 0022     		mov	r2, #0
 724 015c 1A70     		strb	r2, [r3]
 725 015e 35E0     		b	.L34
 726              	.L37:
 204:.\Modbus.c    ****       if(coils[l]){
 727              		.loc 1 204 0
 728 0160 3B1C     		mov	r3, r7
 729 0162 1233     		add	r3, r3, #18
 730 0164 1B78     		ldrb	r3, [r3]
 731 0166 4B4A     		ldr	r2, .L41+8
 732 0168 D35C     		ldrb	r3, [r2, r3]
 733 016a 002B     		cmp	r3, #0
 734 016c 04D0     		beq	.L35
 205:.\Modbus.c    ****         lsb = 1;
 735              		.loc 1 205 0
 736 016e 3B1C     		mov	r3, r7
 737 0170 1633     		add	r3, r3, #22
 738 0172 0122     		mov	r2, #1
 739 0174 1A70     		strb	r2, [r3]
 740 0176 03E0     		b	.L36
 741              	.L35:
 206:.\Modbus.c    ****       }
 207:.\Modbus.c    ****       else{
 208:.\Modbus.c    ****         lsb = 0;
 742              		.loc 1 208 0
 743 0178 3B1C     		mov	r3, r7
 744 017a 1633     		add	r3, r3, #22
 745 017c 0022     		mov	r2, #0
 746 017e 1A70     		strb	r2, [r3]
 747              	.L36:
 209:.\Modbus.c    ****       }
 210:.\Modbus.c    ****       response[k] ^= (lsb << j);
 748              		.loc 1 210 0
 749 0180 3B1C     		mov	r3, r7
 750 0182 1333     		add	r3, r3, #19
 751 0184 1B78     		ldrb	r3, [r3]
 752 0186 3A1C     		mov	r2, r7
 753 0188 1332     		add	r2, r2, #19
 754 018a 1278     		ldrb	r2, [r2]
 755 018c 4049     		ldr	r1, .L41+4
 756 018e 8A5C     		ldrb	r2, [r1, r2]
 757 0190 D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 18


 758 0192 3A1C     		mov	r2, r7
 759 0194 1632     		add	r2, r2, #22
 760 0196 1078     		ldrb	r0, [r2]
 761 0198 3A1C     		mov	r2, r7
 762 019a 1432     		add	r2, r2, #20
 763 019c 1278     		ldrb	r2, [r2]
 764 019e 041C     		mov	r4, r0
 765 01a0 9440     		lsl	r4, r4, r2
 766 01a2 221C     		mov	r2, r4
 767 01a4 D2B2     		uxtb	r2, r2
 768 01a6 4A40     		eor	r2, r1
 769 01a8 D2B2     		uxtb	r2, r2
 770 01aa D1B2     		uxtb	r1, r2
 771 01ac 384A     		ldr	r2, .L41+4
 772 01ae D154     		strb	r1, [r2, r3]
 211:.\Modbus.c    ****       l++;
 773              		.loc 1 211 0
 774 01b0 3B1C     		mov	r3, r7
 775 01b2 1233     		add	r3, r3, #18
 776 01b4 1A78     		ldrb	r2, [r3]
 777 01b6 3B1C     		mov	r3, r7
 778 01b8 1233     		add	r3, r3, #18
 779 01ba 0132     		add	r2, r2, #1
 780 01bc 1A70     		strb	r2, [r3]
 203:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 781              		.loc 1 203 0
 782 01be 3B1C     		mov	r3, r7
 783 01c0 1433     		add	r3, r3, #20
 784 01c2 1A78     		ldrb	r2, [r3]
 785 01c4 3B1C     		mov	r3, r7
 786 01c6 1433     		add	r3, r3, #20
 787 01c8 0132     		add	r2, r2, #1
 788 01ca 1A70     		strb	r2, [r3]
 789              	.L34:
 203:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 790              		.loc 1 203 0 is_stmt 0 discriminator 1
 791 01cc 3A1C     		mov	r2, r7
 792 01ce 1432     		add	r2, r2, #20
 793 01d0 FB1C     		add	r3, r7, #3
 794 01d2 1278     		ldrb	r2, [r2]
 795 01d4 1B78     		ldrb	r3, [r3]
 796 01d6 9A42     		cmp	r2, r3
 797 01d8 C2D1     		bne	.L37
 212:.\Modbus.c    ****       }
 213:.\Modbus.c    ****       k++;
 798              		.loc 1 213 0 is_stmt 1
 799 01da 3B1C     		mov	r3, r7
 800 01dc 1333     		add	r3, r3, #19
 801 01de 1A78     		ldrb	r2, [r3]
 802 01e0 3B1C     		mov	r3, r7
 803 01e2 1333     		add	r3, r3, #19
 804 01e4 0132     		add	r2, r2, #1
 805 01e6 1A70     		strb	r2, [r3]
 806              	.L33:
 188:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 807              		.loc 1 188 0
 808 01e8 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 19


 809 01ea 1533     		add	r3, r3, #21
 810 01ec 1A78     		ldrb	r2, [r3]
 811 01ee 3B1C     		mov	r3, r7
 812 01f0 1533     		add	r3, r3, #21
 813 01f2 013A     		sub	r2, r2, #1
 814 01f4 1A70     		strb	r2, [r3]
 815              	.L27:
 188:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 816              		.loc 1 188 0 is_stmt 0 discriminator 1
 817 01f6 3B1C     		mov	r3, r7
 818 01f8 1533     		add	r3, r3, #21
 819 01fa 1B78     		ldrb	r3, [r3]
 820 01fc 002B     		cmp	r3, #0
 821 01fe 00D0     		beq	.LCB659
 822 0200 5CE7     		b	.L38	@long jump
 823              	.LCB659:
 214:.\Modbus.c    ****     }
 215:.\Modbus.c    ****   }
 216:.\Modbus.c    ****   crc = generateCRC(k+2);
 824              		.loc 1 216 0 is_stmt 1
 825 0202 3B1C     		mov	r3, r7
 826 0204 1333     		add	r3, r3, #19
 827 0206 1B78     		ldrb	r3, [r3]
 828 0208 0233     		add	r3, r3, #2
 829 020a DBB2     		uxtb	r3, r3
 830 020c 181C     		mov	r0, r3
 831 020e FFF7FEFF 		bl	generateCRC
 832 0212 031C     		mov	r3, r0
 833 0214 7B60     		str	r3, [r7, #4]
 217:.\Modbus.c    **** 
 218:.\Modbus.c    ****   response[k] = crc >> 8;
 834              		.loc 1 218 0
 835 0216 3B1C     		mov	r3, r7
 836 0218 1333     		add	r3, r3, #19
 837 021a 1B78     		ldrb	r3, [r3]
 838 021c 7A68     		ldr	r2, [r7, #4]
 839 021e 120A     		lsr	r2, r2, #8
 840 0220 D1B2     		uxtb	r1, r2
 841 0222 1B4A     		ldr	r2, .L41+4
 842 0224 D154     		strb	r1, [r2, r3]
 219:.\Modbus.c    ****   response[k+1] = crc;
 843              		.loc 1 219 0
 844 0226 3B1C     		mov	r3, r7
 845 0228 1333     		add	r3, r3, #19
 846 022a 1B78     		ldrb	r3, [r3]
 847 022c 0133     		add	r3, r3, #1
 848 022e 7A68     		ldr	r2, [r7, #4]
 849 0230 D1B2     		uxtb	r1, r2
 850 0232 174A     		ldr	r2, .L41+4
 851 0234 D154     		strb	r1, [r2, r3]
 220:.\Modbus.c    **** 
 221:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 852              		.loc 1 221 0
 853 0236 0120     		mov	r0, #1
 854 0238 FFF7FEFF 		bl	writeEnable_Write
 222:.\Modbus.c    **** 
 223:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 20


 855              		.loc 1 223 0
 856 023c 3B1C     		mov	r3, r7
 857 023e 1533     		add	r3, r3, #21
 858 0240 0022     		mov	r2, #0
 859 0242 1A70     		strb	r2, [r3]
 860 0244 0EE0     		b	.L39
 861              	.L40:
 224:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 862              		.loc 1 224 0 discriminator 2
 863 0246 3B1C     		mov	r3, r7
 864 0248 1533     		add	r3, r3, #21
 865 024a 1B78     		ldrb	r3, [r3]
 866 024c 104A     		ldr	r2, .L41+4
 867 024e D35C     		ldrb	r3, [r2, r3]
 868 0250 181C     		mov	r0, r3
 869 0252 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 223:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 870              		.loc 1 223 0 discriminator 2
 871 0256 3B1C     		mov	r3, r7
 872 0258 1533     		add	r3, r3, #21
 873 025a 1A78     		ldrb	r2, [r3]
 874 025c 3B1C     		mov	r3, r7
 875 025e 1533     		add	r3, r3, #21
 876 0260 0132     		add	r2, r2, #1
 877 0262 1A70     		strb	r2, [r3]
 878              	.L39:
 223:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 879              		.loc 1 223 0 is_stmt 0 discriminator 1
 880 0264 3B1C     		mov	r3, r7
 881 0266 1533     		add	r3, r3, #21
 882 0268 1A78     		ldrb	r2, [r3]
 883 026a 3B1C     		mov	r3, r7
 884 026c 1333     		add	r3, r3, #19
 885 026e 1B78     		ldrb	r3, [r3]
 886 0270 0333     		add	r3, r3, #3
 887 0272 9A42     		cmp	r2, r3
 888 0274 E7D1     		bne	.L40
 225:.\Modbus.c    ****   }
 226:.\Modbus.c    ****   responseFinished(k+3);
 889              		.loc 1 226 0 is_stmt 1
 890 0276 3B1C     		mov	r3, r7
 891 0278 1333     		add	r3, r3, #19
 892 027a 1B78     		ldrb	r3, [r3]
 893 027c 0333     		add	r3, r3, #3
 894 027e 181C     		mov	r0, r3
 895 0280 FFF7FEFF 		bl	responseFinished
 227:.\Modbus.c    **** }
 896              		.loc 1 227 0
 897 0284 BD46     		mov	sp, r7
 898 0286 07B0     		add	sp, sp, #28
 899              		@ sp needed
 900 0288 90BD     		pop	{r4, r7, pc}
 901              	.L42:
 902 028a C046     		.align	2
 903              	.L41:
 904 028c 00000000 		.word	received
 905 0290 00000000 		.word	response
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 21


 906 0294 00000000 		.word	coils
 907              		.cfi_endproc
 908              	.LFE36:
 909              		.size	readCoil, .-readCoil
 910              		.section	.text.readInputCoil,"ax",%progbits
 911              		.align	2
 912              		.global	readInputCoil
 913              		.code	16
 914              		.thumb_func
 915              		.type	readInputCoil, %function
 916              	readInputCoil:
 917              	.LFB37:
 228:.\Modbus.c    **** 
 229:.\Modbus.c    **** void readInputCoil(void)
 230:.\Modbus.c    **** {
 918              		.loc 1 230 0
 919              		.cfi_startproc
 920 0000 90B5     		push	{r4, r7, lr}
 921              		.cfi_def_cfa_offset 12
 922              		.cfi_offset 4, -12
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 87B0     		sub	sp, sp, #28
 926              		.cfi_def_cfa_offset 40
 927 0004 00AF     		add	r7, sp, #0
 928              		.cfi_def_cfa_register 7
 231:.\Modbus.c    **** /******************************************************************************/
 232:.\Modbus.c    **** /* Reads a coil and then responds                                             */
 233:.\Modbus.c    **** /******************************************************************************/
 234:.\Modbus.c    ****   unsigned int rc_Address = 0;
 929              		.loc 1 234 0
 930 0006 0023     		mov	r3, #0
 931 0008 FB60     		str	r3, [r7, #12]
 235:.\Modbus.c    ****   unsigned int rc_numCoils = 0;
 932              		.loc 1 235 0
 933 000a 0023     		mov	r3, #0
 934 000c BB60     		str	r3, [r7, #8]
 236:.\Modbus.c    ****   unsigned int crc = 0;
 935              		.loc 1 236 0
 936 000e 0023     		mov	r3, #0
 937 0010 7B60     		str	r3, [r7, #4]
 237:.\Modbus.c    **** 
 238:.\Modbus.c    ****   unsigned char howManyBytes = 0;
 938              		.loc 1 238 0
 939 0012 3B1C     		mov	r3, r7
 940 0014 1733     		add	r3, r3, #23
 941 0016 0022     		mov	r2, #0
 942 0018 1A70     		strb	r2, [r3]
 239:.\Modbus.c    ****   unsigned char remainder = 0;
 943              		.loc 1 239 0
 944 001a FB1C     		add	r3, r7, #3
 945 001c 0022     		mov	r2, #0
 946 001e 1A70     		strb	r2, [r3]
 240:.\Modbus.c    ****   unsigned char lsb = 0;
 947              		.loc 1 240 0
 948 0020 3B1C     		mov	r3, r7
 949 0022 1633     		add	r3, r3, #22
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 22


 950 0024 0022     		mov	r2, #0
 951 0026 1A70     		strb	r2, [r3]
 241:.\Modbus.c    ****   unsigned char i,j,k,l = 0;
 952              		.loc 1 241 0
 953 0028 3B1C     		mov	r3, r7
 954 002a 1233     		add	r3, r3, #18
 955 002c 0022     		mov	r2, #0
 956 002e 1A70     		strb	r2, [r3]
 242:.\Modbus.c    **** 
 243:.\Modbus.c    ****   //Combine address bytes
 244:.\Modbus.c    ****   rc_Address = received[2];
 957              		.loc 1 244 0
 958 0030 964B     		ldr	r3, .L59
 959 0032 9B78     		ldrb	r3, [r3, #2]
 960 0034 FB60     		str	r3, [r7, #12]
 245:.\Modbus.c    ****   rc_Address <<=8;
 961              		.loc 1 245 0
 962 0036 FB68     		ldr	r3, [r7, #12]
 963 0038 1B02     		lsl	r3, r3, #8
 964 003a FB60     		str	r3, [r7, #12]
 246:.\Modbus.c    ****   rc_Address |= received[3];
 965              		.loc 1 246 0
 966 003c 934B     		ldr	r3, .L59
 967 003e DB78     		ldrb	r3, [r3, #3]
 968 0040 FA68     		ldr	r2, [r7, #12]
 969 0042 1343     		orr	r3, r2
 970 0044 FB60     		str	r3, [r7, #12]
 247:.\Modbus.c    **** 
 248:.\Modbus.c    ****   //Combine number of coils bytes
 249:.\Modbus.c    ****   rc_numCoils = received[4];
 971              		.loc 1 249 0
 972 0046 914B     		ldr	r3, .L59
 973 0048 1B79     		ldrb	r3, [r3, #4]
 974 004a BB60     		str	r3, [r7, #8]
 250:.\Modbus.c    ****   rc_numCoils <<= 8;
 975              		.loc 1 250 0
 976 004c BB68     		ldr	r3, [r7, #8]
 977 004e 1B02     		lsl	r3, r3, #8
 978 0050 BB60     		str	r3, [r7, #8]
 251:.\Modbus.c    ****   rc_numCoils |= received[5];
 979              		.loc 1 251 0
 980 0052 8E4B     		ldr	r3, .L59
 981 0054 5B79     		ldrb	r3, [r3, #5]
 982 0056 BA68     		ldr	r2, [r7, #8]
 983 0058 1343     		orr	r3, r2
 984 005a BB60     		str	r3, [r7, #8]
 252:.\Modbus.c    **** 
 253:.\Modbus.c    ****   response[0] = SlaveAddress;
 985              		.loc 1 253 0
 986 005c 8C4B     		ldr	r3, .L59+4
 987 005e 0122     		mov	r2, #1
 988 0060 1A70     		strb	r2, [r3]
 254:.\Modbus.c    ****   response[1] = 0x02;
 989              		.loc 1 254 0
 990 0062 8B4B     		ldr	r3, .L59+4
 991 0064 0222     		mov	r2, #2
 992 0066 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 23


 255:.\Modbus.c    **** 
 256:.\Modbus.c    ****   howManyBytes = rc_numCoils/8;
 993              		.loc 1 256 0
 994 0068 BB68     		ldr	r3, [r7, #8]
 995 006a DA08     		lsr	r2, r3, #3
 996 006c 3B1C     		mov	r3, r7
 997 006e 1733     		add	r3, r3, #23
 998 0070 1A70     		strb	r2, [r3]
 257:.\Modbus.c    ****   remainder = rc_numCoils % 8;
 999              		.loc 1 257 0
 1000 0072 BB68     		ldr	r3, [r7, #8]
 1001 0074 D9B2     		uxtb	r1, r3
 1002 0076 FB1C     		add	r3, r7, #3
 1003 0078 0722     		mov	r2, #7
 1004 007a 0A40     		and	r2, r1
 1005 007c 1A70     		strb	r2, [r3]
 258:.\Modbus.c    **** 
 259:.\Modbus.c    ****   if(remainder){
 1006              		.loc 1 259 0
 1007 007e FB1C     		add	r3, r7, #3
 1008 0080 1B78     		ldrb	r3, [r3]
 1009 0082 002B     		cmp	r3, #0
 1010 0084 06D0     		beq	.L44
 260:.\Modbus.c    ****     howManyBytes += 1;
 1011              		.loc 1 260 0
 1012 0086 3B1C     		mov	r3, r7
 1013 0088 1733     		add	r3, r3, #23
 1014 008a 3A1C     		mov	r2, r7
 1015 008c 1732     		add	r2, r2, #23
 1016 008e 1278     		ldrb	r2, [r2]
 1017 0090 0132     		add	r2, r2, #1
 1018 0092 1A70     		strb	r2, [r3]
 1019              	.L44:
 261:.\Modbus.c    ****   }
 262:.\Modbus.c    ****   response[2] = howManyBytes;
 1020              		.loc 1 262 0
 1021 0094 7E4B     		ldr	r3, .L59+4
 1022 0096 3A1C     		mov	r2, r7
 1023 0098 1732     		add	r2, r2, #23
 1024 009a 1278     		ldrb	r2, [r2]
 1025 009c 9A70     		strb	r2, [r3, #2]
 263:.\Modbus.c    **** 
 264:.\Modbus.c    ****   l = rc_Address;
 1026              		.loc 1 264 0
 1027 009e 3B1C     		mov	r3, r7
 1028 00a0 1233     		add	r3, r3, #18
 1029 00a2 FA68     		ldr	r2, [r7, #12]
 1030 00a4 1A70     		strb	r2, [r3]
 265:.\Modbus.c    ****   k = 3; //start at response 3
 1031              		.loc 1 265 0
 1032 00a6 3B1C     		mov	r3, r7
 1033 00a8 1333     		add	r3, r3, #19
 1034 00aa 0322     		mov	r2, #3
 1035 00ac 1A70     		strb	r2, [r3]
 266:.\Modbus.c    **** 
 267:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 1036              		.loc 1 267 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 24


 1037 00ae 3B1C     		mov	r3, r7
 1038 00b0 1533     		add	r3, r3, #21
 1039 00b2 3A1C     		mov	r2, r7
 1040 00b4 1732     		add	r2, r2, #23
 1041 00b6 1278     		ldrb	r2, [r2]
 1042 00b8 1A70     		strb	r2, [r3]
 1043 00ba 9CE0     		b	.L45
 1044              	.L56:
 268:.\Modbus.c    **** 		if(i>1){
 1045              		.loc 1 268 0
 1046 00bc 3B1C     		mov	r3, r7
 1047 00be 1533     		add	r3, r3, #21
 1048 00c0 1B78     		ldrb	r3, [r3]
 1049 00c2 012B     		cmp	r3, #1
 1050 00c4 47D9     		bls	.L46
 269:.\Modbus.c    ****       for(j=0;j!=8;j++){
 1051              		.loc 1 269 0
 1052 00c6 3B1C     		mov	r3, r7
 1053 00c8 1433     		add	r3, r3, #20
 1054 00ca 0022     		mov	r2, #0
 1055 00cc 1A70     		strb	r2, [r3]
 1056 00ce 35E0     		b	.L47
 1057              	.L50:
 270:.\Modbus.c    **** 				if(coils[l]){
 1058              		.loc 1 270 0
 1059 00d0 3B1C     		mov	r3, r7
 1060 00d2 1233     		add	r3, r3, #18
 1061 00d4 1B78     		ldrb	r3, [r3]
 1062 00d6 6F4A     		ldr	r2, .L59+8
 1063 00d8 D35C     		ldrb	r3, [r2, r3]
 1064 00da 002B     		cmp	r3, #0
 1065 00dc 04D0     		beq	.L48
 271:.\Modbus.c    **** 					lsb = 1;
 1066              		.loc 1 271 0
 1067 00de 3B1C     		mov	r3, r7
 1068 00e0 1633     		add	r3, r3, #22
 1069 00e2 0122     		mov	r2, #1
 1070 00e4 1A70     		strb	r2, [r3]
 1071 00e6 03E0     		b	.L49
 1072              	.L48:
 272:.\Modbus.c    **** 				}
 273:.\Modbus.c    **** 				else{
 274:.\Modbus.c    ****           lsb = 0;
 1073              		.loc 1 274 0
 1074 00e8 3B1C     		mov	r3, r7
 1075 00ea 1633     		add	r3, r3, #22
 1076 00ec 0022     		mov	r2, #0
 1077 00ee 1A70     		strb	r2, [r3]
 1078              	.L49:
 275:.\Modbus.c    **** 				}
 276:.\Modbus.c    **** 				response[k] ^= (lsb << j);
 1079              		.loc 1 276 0
 1080 00f0 3B1C     		mov	r3, r7
 1081 00f2 1333     		add	r3, r3, #19
 1082 00f4 1B78     		ldrb	r3, [r3]
 1083 00f6 3A1C     		mov	r2, r7
 1084 00f8 1332     		add	r2, r2, #19
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 25


 1085 00fa 1278     		ldrb	r2, [r2]
 1086 00fc 6449     		ldr	r1, .L59+4
 1087 00fe 8A5C     		ldrb	r2, [r1, r2]
 1088 0100 D1B2     		uxtb	r1, r2
 1089 0102 3A1C     		mov	r2, r7
 1090 0104 1632     		add	r2, r2, #22
 1091 0106 1078     		ldrb	r0, [r2]
 1092 0108 3A1C     		mov	r2, r7
 1093 010a 1432     		add	r2, r2, #20
 1094 010c 1278     		ldrb	r2, [r2]
 1095 010e 041C     		mov	r4, r0
 1096 0110 9440     		lsl	r4, r4, r2
 1097 0112 221C     		mov	r2, r4
 1098 0114 D2B2     		uxtb	r2, r2
 1099 0116 4A40     		eor	r2, r1
 1100 0118 D2B2     		uxtb	r2, r2
 1101 011a D1B2     		uxtb	r1, r2
 1102 011c 5C4A     		ldr	r2, .L59+4
 1103 011e D154     		strb	r1, [r2, r3]
 277:.\Modbus.c    **** 				l++;
 1104              		.loc 1 277 0
 1105 0120 3B1C     		mov	r3, r7
 1106 0122 1233     		add	r3, r3, #18
 1107 0124 1A78     		ldrb	r2, [r3]
 1108 0126 3B1C     		mov	r3, r7
 1109 0128 1233     		add	r3, r3, #18
 1110 012a 0132     		add	r2, r2, #1
 1111 012c 1A70     		strb	r2, [r3]
 269:.\Modbus.c    ****       for(j=0;j!=8;j++){
 1112              		.loc 1 269 0
 1113 012e 3B1C     		mov	r3, r7
 1114 0130 1433     		add	r3, r3, #20
 1115 0132 1A78     		ldrb	r2, [r3]
 1116 0134 3B1C     		mov	r3, r7
 1117 0136 1433     		add	r3, r3, #20
 1118 0138 0132     		add	r2, r2, #1
 1119 013a 1A70     		strb	r2, [r3]
 1120              	.L47:
 269:.\Modbus.c    ****       for(j=0;j!=8;j++){
 1121              		.loc 1 269 0 is_stmt 0 discriminator 1
 1122 013c 3B1C     		mov	r3, r7
 1123 013e 1433     		add	r3, r3, #20
 1124 0140 1B78     		ldrb	r3, [r3]
 1125 0142 082B     		cmp	r3, #8
 1126 0144 C4D1     		bne	.L50
 278:.\Modbus.c    **** 	    }
 279:.\Modbus.c    **** 			k++;
 1127              		.loc 1 279 0 is_stmt 1
 1128 0146 3B1C     		mov	r3, r7
 1129 0148 1333     		add	r3, r3, #19
 1130 014a 1A78     		ldrb	r2, [r3]
 1131 014c 3B1C     		mov	r3, r7
 1132 014e 1333     		add	r3, r3, #19
 1133 0150 0132     		add	r2, r2, #1
 1134 0152 1A70     		strb	r2, [r3]
 1135 0154 48E0     		b	.L51
 1136              	.L46:
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 26


 280:.\Modbus.c    **** 	  }
 281:.\Modbus.c    **** 		else{
 282:.\Modbus.c    **** 			for(j=0;j!=remainder;j++){
 1137              		.loc 1 282 0
 1138 0156 3B1C     		mov	r3, r7
 1139 0158 1433     		add	r3, r3, #20
 1140 015a 0022     		mov	r2, #0
 1141 015c 1A70     		strb	r2, [r3]
 1142 015e 35E0     		b	.L52
 1143              	.L55:
 283:.\Modbus.c    **** 				if(coils[l]){
 1144              		.loc 1 283 0
 1145 0160 3B1C     		mov	r3, r7
 1146 0162 1233     		add	r3, r3, #18
 1147 0164 1B78     		ldrb	r3, [r3]
 1148 0166 4B4A     		ldr	r2, .L59+8
 1149 0168 D35C     		ldrb	r3, [r2, r3]
 1150 016a 002B     		cmp	r3, #0
 1151 016c 04D0     		beq	.L53
 284:.\Modbus.c    **** 					lsb = 1;
 1152              		.loc 1 284 0
 1153 016e 3B1C     		mov	r3, r7
 1154 0170 1633     		add	r3, r3, #22
 1155 0172 0122     		mov	r2, #1
 1156 0174 1A70     		strb	r2, [r3]
 1157 0176 03E0     		b	.L54
 1158              	.L53:
 285:.\Modbus.c    **** 				}
 286:.\Modbus.c    **** 				else{
 287:.\Modbus.c    ****           lsb = 0;
 1159              		.loc 1 287 0
 1160 0178 3B1C     		mov	r3, r7
 1161 017a 1633     		add	r3, r3, #22
 1162 017c 0022     		mov	r2, #0
 1163 017e 1A70     		strb	r2, [r3]
 1164              	.L54:
 288:.\Modbus.c    **** 				}
 289:.\Modbus.c    ****         response[k] ^= (lsb << j);
 1165              		.loc 1 289 0
 1166 0180 3B1C     		mov	r3, r7
 1167 0182 1333     		add	r3, r3, #19
 1168 0184 1B78     		ldrb	r3, [r3]
 1169 0186 3A1C     		mov	r2, r7
 1170 0188 1332     		add	r2, r2, #19
 1171 018a 1278     		ldrb	r2, [r2]
 1172 018c 4049     		ldr	r1, .L59+4
 1173 018e 8A5C     		ldrb	r2, [r1, r2]
 1174 0190 D1B2     		uxtb	r1, r2
 1175 0192 3A1C     		mov	r2, r7
 1176 0194 1632     		add	r2, r2, #22
 1177 0196 1078     		ldrb	r0, [r2]
 1178 0198 3A1C     		mov	r2, r7
 1179 019a 1432     		add	r2, r2, #20
 1180 019c 1278     		ldrb	r2, [r2]
 1181 019e 041C     		mov	r4, r0
 1182 01a0 9440     		lsl	r4, r4, r2
 1183 01a2 221C     		mov	r2, r4
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 27


 1184 01a4 D2B2     		uxtb	r2, r2
 1185 01a6 4A40     		eor	r2, r1
 1186 01a8 D2B2     		uxtb	r2, r2
 1187 01aa D1B2     		uxtb	r1, r2
 1188 01ac 384A     		ldr	r2, .L59+4
 1189 01ae D154     		strb	r1, [r2, r3]
 290:.\Modbus.c    **** 				l++;
 1190              		.loc 1 290 0
 1191 01b0 3B1C     		mov	r3, r7
 1192 01b2 1233     		add	r3, r3, #18
 1193 01b4 1A78     		ldrb	r2, [r3]
 1194 01b6 3B1C     		mov	r3, r7
 1195 01b8 1233     		add	r3, r3, #18
 1196 01ba 0132     		add	r2, r2, #1
 1197 01bc 1A70     		strb	r2, [r3]
 282:.\Modbus.c    **** 			for(j=0;j!=remainder;j++){
 1198              		.loc 1 282 0
 1199 01be 3B1C     		mov	r3, r7
 1200 01c0 1433     		add	r3, r3, #20
 1201 01c2 1A78     		ldrb	r2, [r3]
 1202 01c4 3B1C     		mov	r3, r7
 1203 01c6 1433     		add	r3, r3, #20
 1204 01c8 0132     		add	r2, r2, #1
 1205 01ca 1A70     		strb	r2, [r3]
 1206              	.L52:
 282:.\Modbus.c    **** 			for(j=0;j!=remainder;j++){
 1207              		.loc 1 282 0 is_stmt 0 discriminator 1
 1208 01cc 3A1C     		mov	r2, r7
 1209 01ce 1432     		add	r2, r2, #20
 1210 01d0 FB1C     		add	r3, r7, #3
 1211 01d2 1278     		ldrb	r2, [r2]
 1212 01d4 1B78     		ldrb	r3, [r3]
 1213 01d6 9A42     		cmp	r2, r3
 1214 01d8 C2D1     		bne	.L55
 291:.\Modbus.c    **** 			}
 292:.\Modbus.c    **** 			k++;
 1215              		.loc 1 292 0 is_stmt 1
 1216 01da 3B1C     		mov	r3, r7
 1217 01dc 1333     		add	r3, r3, #19
 1218 01de 1A78     		ldrb	r2, [r3]
 1219 01e0 3B1C     		mov	r3, r7
 1220 01e2 1333     		add	r3, r3, #19
 1221 01e4 0132     		add	r2, r2, #1
 1222 01e6 1A70     		strb	r2, [r3]
 1223              	.L51:
 267:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 1224              		.loc 1 267 0
 1225 01e8 3B1C     		mov	r3, r7
 1226 01ea 1533     		add	r3, r3, #21
 1227 01ec 1A78     		ldrb	r2, [r3]
 1228 01ee 3B1C     		mov	r3, r7
 1229 01f0 1533     		add	r3, r3, #21
 1230 01f2 013A     		sub	r2, r2, #1
 1231 01f4 1A70     		strb	r2, [r3]
 1232              	.L45:
 267:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 1233              		.loc 1 267 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 28


 1234 01f6 3B1C     		mov	r3, r7
 1235 01f8 1533     		add	r3, r3, #21
 1236 01fa 1B78     		ldrb	r3, [r3]
 1237 01fc 002B     		cmp	r3, #0
 1238 01fe 00D0     		beq	.LCB1041
 1239 0200 5CE7     		b	.L56	@long jump
 1240              	.LCB1041:
 293:.\Modbus.c    **** 		}
 294:.\Modbus.c    ****   }
 295:.\Modbus.c    ****   crc = generateCRC(k+2);
 1241              		.loc 1 295 0 is_stmt 1
 1242 0202 3B1C     		mov	r3, r7
 1243 0204 1333     		add	r3, r3, #19
 1244 0206 1B78     		ldrb	r3, [r3]
 1245 0208 0233     		add	r3, r3, #2
 1246 020a DBB2     		uxtb	r3, r3
 1247 020c 181C     		mov	r0, r3
 1248 020e FFF7FEFF 		bl	generateCRC
 1249 0212 031C     		mov	r3, r0
 1250 0214 7B60     		str	r3, [r7, #4]
 296:.\Modbus.c    **** 
 297:.\Modbus.c    ****   response[k] = crc >> 8;
 1251              		.loc 1 297 0
 1252 0216 3B1C     		mov	r3, r7
 1253 0218 1333     		add	r3, r3, #19
 1254 021a 1B78     		ldrb	r3, [r3]
 1255 021c 7A68     		ldr	r2, [r7, #4]
 1256 021e 120A     		lsr	r2, r2, #8
 1257 0220 D1B2     		uxtb	r1, r2
 1258 0222 1B4A     		ldr	r2, .L59+4
 1259 0224 D154     		strb	r1, [r2, r3]
 298:.\Modbus.c    ****   response[k+1] = crc;
 1260              		.loc 1 298 0
 1261 0226 3B1C     		mov	r3, r7
 1262 0228 1333     		add	r3, r3, #19
 1263 022a 1B78     		ldrb	r3, [r3]
 1264 022c 0133     		add	r3, r3, #1
 1265 022e 7A68     		ldr	r2, [r7, #4]
 1266 0230 D1B2     		uxtb	r1, r2
 1267 0232 174A     		ldr	r2, .L59+4
 1268 0234 D154     		strb	r1, [r2, r3]
 299:.\Modbus.c    **** 
 300:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 1269              		.loc 1 300 0
 1270 0236 0120     		mov	r0, #1
 1271 0238 FFF7FEFF 		bl	writeEnable_Write
 301:.\Modbus.c    **** 
 302:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 1272              		.loc 1 302 0
 1273 023c 3B1C     		mov	r3, r7
 1274 023e 1533     		add	r3, r3, #21
 1275 0240 0022     		mov	r2, #0
 1276 0242 1A70     		strb	r2, [r3]
 1277 0244 0EE0     		b	.L57
 1278              	.L58:
 303:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 1279              		.loc 1 303 0 discriminator 2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 29


 1280 0246 3B1C     		mov	r3, r7
 1281 0248 1533     		add	r3, r3, #21
 1282 024a 1B78     		ldrb	r3, [r3]
 1283 024c 104A     		ldr	r2, .L59+4
 1284 024e D35C     		ldrb	r3, [r2, r3]
 1285 0250 181C     		mov	r0, r3
 1286 0252 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 302:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 1287              		.loc 1 302 0 discriminator 2
 1288 0256 3B1C     		mov	r3, r7
 1289 0258 1533     		add	r3, r3, #21
 1290 025a 1A78     		ldrb	r2, [r3]
 1291 025c 3B1C     		mov	r3, r7
 1292 025e 1533     		add	r3, r3, #21
 1293 0260 0132     		add	r2, r2, #1
 1294 0262 1A70     		strb	r2, [r3]
 1295              	.L57:
 302:.\Modbus.c    ****   for(i=0;i!=k+3;i++){
 1296              		.loc 1 302 0 is_stmt 0 discriminator 1
 1297 0264 3B1C     		mov	r3, r7
 1298 0266 1533     		add	r3, r3, #21
 1299 0268 1A78     		ldrb	r2, [r3]
 1300 026a 3B1C     		mov	r3, r7
 1301 026c 1333     		add	r3, r3, #19
 1302 026e 1B78     		ldrb	r3, [r3]
 1303 0270 0333     		add	r3, r3, #3
 1304 0272 9A42     		cmp	r2, r3
 1305 0274 E7D1     		bne	.L58
 304:.\Modbus.c    ****   }
 305:.\Modbus.c    ****   responseFinished(k+3);
 1306              		.loc 1 305 0 is_stmt 1
 1307 0276 3B1C     		mov	r3, r7
 1308 0278 1333     		add	r3, r3, #19
 1309 027a 1B78     		ldrb	r3, [r3]
 1310 027c 0333     		add	r3, r3, #3
 1311 027e 181C     		mov	r0, r3
 1312 0280 FFF7FEFF 		bl	responseFinished
 306:.\Modbus.c    **** 
 307:.\Modbus.c    **** }
 1313              		.loc 1 307 0
 1314 0284 BD46     		mov	sp, r7
 1315 0286 07B0     		add	sp, sp, #28
 1316              		@ sp needed
 1317 0288 90BD     		pop	{r4, r7, pc}
 1318              	.L60:
 1319 028a C046     		.align	2
 1320              	.L59:
 1321 028c 00000000 		.word	received
 1322 0290 00000000 		.word	response
 1323 0294 00000000 		.word	coils
 1324              		.cfi_endproc
 1325              	.LFE37:
 1326              		.size	readInputCoil, .-readInputCoil
 1327              		.section	.text.readInputReg,"ax",%progbits
 1328              		.align	2
 1329              		.global	readInputReg
 1330              		.code	16
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 30


 1331              		.thumb_func
 1332              		.type	readInputReg, %function
 1333              	readInputReg:
 1334              	.LFB38:
 308:.\Modbus.c    **** 
 309:.\Modbus.c    **** void readInputReg(void)
 310:.\Modbus.c    **** {
 1335              		.loc 1 310 0
 1336              		.cfi_startproc
 1337 0000 80B5     		push	{r7, lr}
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 7, -8
 1340              		.cfi_offset 14, -4
 1341 0002 86B0     		sub	sp, sp, #24
 1342              		.cfi_def_cfa_offset 32
 1343 0004 00AF     		add	r7, sp, #0
 1344              		.cfi_def_cfa_register 7
 311:.\Modbus.c    ****   unsigned int rr_Address = 0;
 1345              		.loc 1 311 0
 1346 0006 0023     		mov	r3, #0
 1347 0008 FB60     		str	r3, [r7, #12]
 312:.\Modbus.c    ****   unsigned int rr_numRegs = 0;
 1348              		.loc 1 312 0
 1349 000a 0023     		mov	r3, #0
 1350 000c BB60     		str	r3, [r7, #8]
 313:.\Modbus.c    ****   unsigned char j = 3;
 1351              		.loc 1 313 0
 1352 000e 3B1C     		mov	r3, r7
 1353 0010 1733     		add	r3, r3, #23
 1354 0012 0322     		mov	r2, #3
 1355 0014 1A70     		strb	r2, [r3]
 314:.\Modbus.c    ****   unsigned int crc = 0;
 1356              		.loc 1 314 0
 1357 0016 0023     		mov	r3, #0
 1358 0018 7B60     		str	r3, [r7, #4]
 315:.\Modbus.c    ****   unsigned int i = 0;
 1359              		.loc 1 315 0
 1360 001a 0023     		mov	r3, #0
 1361 001c 3B61     		str	r3, [r7, #16]
 316:.\Modbus.c    **** 
 317:.\Modbus.c    ****   //Combine address bytes
 318:.\Modbus.c    ****   rr_Address = received[2];
 1362              		.loc 1 318 0
 1363 001e 5F4B     		ldr	r3, .L68
 1364 0020 9B78     		ldrb	r3, [r3, #2]
 1365 0022 FB60     		str	r3, [r7, #12]
 319:.\Modbus.c    ****   rr_Address <<= 8;
 1366              		.loc 1 319 0
 1367 0024 FB68     		ldr	r3, [r7, #12]
 1368 0026 1B02     		lsl	r3, r3, #8
 1369 0028 FB60     		str	r3, [r7, #12]
 320:.\Modbus.c    ****   rr_Address |= received[3];
 1370              		.loc 1 320 0
 1371 002a 5C4B     		ldr	r3, .L68
 1372 002c DB78     		ldrb	r3, [r3, #3]
 1373 002e FA68     		ldr	r2, [r7, #12]
 1374 0030 1343     		orr	r3, r2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 31


 1375 0032 FB60     		str	r3, [r7, #12]
 321:.\Modbus.c    **** 
 322:.\Modbus.c    ****   //Combine number of regs bytes
 323:.\Modbus.c    ****   rr_numRegs = received[4];
 1376              		.loc 1 323 0
 1377 0034 594B     		ldr	r3, .L68
 1378 0036 1B79     		ldrb	r3, [r3, #4]
 1379 0038 BB60     		str	r3, [r7, #8]
 324:.\Modbus.c    ****   rr_numRegs <<= 8;
 1380              		.loc 1 324 0
 1381 003a BB68     		ldr	r3, [r7, #8]
 1382 003c 1B02     		lsl	r3, r3, #8
 1383 003e BB60     		str	r3, [r7, #8]
 325:.\Modbus.c    ****   rr_numRegs |= received[5];
 1384              		.loc 1 325 0
 1385 0040 564B     		ldr	r3, .L68
 1386 0042 5B79     		ldrb	r3, [r3, #5]
 1387 0044 BA68     		ldr	r2, [r7, #8]
 1388 0046 1343     		orr	r3, r2
 1389 0048 BB60     		str	r3, [r7, #8]
 326:.\Modbus.c    **** 
 327:.\Modbus.c    ****   response[0] = SlaveAddress;
 1390              		.loc 1 327 0
 1391 004a 554B     		ldr	r3, .L68+4
 1392 004c 0122     		mov	r2, #1
 1393 004e 1A70     		strb	r2, [r3]
 328:.\Modbus.c    ****   response[1] = 0x04;
 1394              		.loc 1 328 0
 1395 0050 534B     		ldr	r3, .L68+4
 1396 0052 0422     		mov	r2, #4
 1397 0054 5A70     		strb	r2, [r3, #1]
 329:.\Modbus.c    ****   response[2] = rr_numRegs*2; //2 bytes per reg
 1398              		.loc 1 329 0
 1399 0056 BB68     		ldr	r3, [r7, #8]
 1400 0058 DBB2     		uxtb	r3, r3
 1401 005a DB18     		add	r3, r3, r3
 1402 005c DAB2     		uxtb	r2, r3
 1403 005e 504B     		ldr	r3, .L68+4
 1404 0060 9A70     		strb	r2, [r3, #2]
 330:.\Modbus.c    **** 
 331:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1405              		.loc 1 331 0
 1406 0062 FB68     		ldr	r3, [r7, #12]
 1407 0064 3B61     		str	r3, [r7, #16]
 1408 0066 4AE0     		b	.L62
 1409              	.L65:
 332:.\Modbus.c    ****     if(holdingReg[i] > 255){
 1410              		.loc 1 332 0
 1411 0068 4E4B     		ldr	r3, .L68+8
 1412 006a 3A69     		ldr	r2, [r7, #16]
 1413 006c 9200     		lsl	r2, r2, #2
 1414 006e D358     		ldr	r3, [r2, r3]
 1415 0070 FF2B     		cmp	r3, #255
 1416 0072 23D9     		bls	.L63
 333:.\Modbus.c    ****       //Need to split it up into 2 bytes
 334:.\Modbus.c    ****       response[j] = holdingReg[i] >> 8;
 1417              		.loc 1 334 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 32


 1418 0074 3B1C     		mov	r3, r7
 1419 0076 1733     		add	r3, r3, #23
 1420 0078 1B78     		ldrb	r3, [r3]
 1421 007a 4A4A     		ldr	r2, .L68+8
 1422 007c 3969     		ldr	r1, [r7, #16]
 1423 007e 8900     		lsl	r1, r1, #2
 1424 0080 8A58     		ldr	r2, [r1, r2]
 1425 0082 120A     		lsr	r2, r2, #8
 1426 0084 D1B2     		uxtb	r1, r2
 1427 0086 464A     		ldr	r2, .L68+4
 1428 0088 D154     		strb	r1, [r2, r3]
 335:.\Modbus.c    ****       j++;
 1429              		.loc 1 335 0
 1430 008a 3B1C     		mov	r3, r7
 1431 008c 1733     		add	r3, r3, #23
 1432 008e 1A78     		ldrb	r2, [r3]
 1433 0090 3B1C     		mov	r3, r7
 1434 0092 1733     		add	r3, r3, #23
 1435 0094 0132     		add	r2, r2, #1
 1436 0096 1A70     		strb	r2, [r3]
 336:.\Modbus.c    ****       response[j] = holdingReg[i];
 1437              		.loc 1 336 0
 1438 0098 3B1C     		mov	r3, r7
 1439 009a 1733     		add	r3, r3, #23
 1440 009c 1B78     		ldrb	r3, [r3]
 1441 009e 414A     		ldr	r2, .L68+8
 1442 00a0 3969     		ldr	r1, [r7, #16]
 1443 00a2 8900     		lsl	r1, r1, #2
 1444 00a4 8A58     		ldr	r2, [r1, r2]
 1445 00a6 D1B2     		uxtb	r1, r2
 1446 00a8 3D4A     		ldr	r2, .L68+4
 1447 00aa D154     		strb	r1, [r2, r3]
 337:.\Modbus.c    ****       j++;
 1448              		.loc 1 337 0
 1449 00ac 3B1C     		mov	r3, r7
 1450 00ae 1733     		add	r3, r3, #23
 1451 00b0 1A78     		ldrb	r2, [r3]
 1452 00b2 3B1C     		mov	r3, r7
 1453 00b4 1733     		add	r3, r3, #23
 1454 00b6 0132     		add	r2, r2, #1
 1455 00b8 1A70     		strb	r2, [r3]
 1456 00ba 1DE0     		b	.L64
 1457              	.L63:
 338:.\Modbus.c    ****     }
 339:.\Modbus.c    ****     else{
 340:.\Modbus.c    ****       response[j] = 0x00;
 1458              		.loc 1 340 0
 1459 00bc 3B1C     		mov	r3, r7
 1460 00be 1733     		add	r3, r3, #23
 1461 00c0 1B78     		ldrb	r3, [r3]
 1462 00c2 374A     		ldr	r2, .L68+4
 1463 00c4 0021     		mov	r1, #0
 1464 00c6 D154     		strb	r1, [r2, r3]
 341:.\Modbus.c    ****       j++;
 1465              		.loc 1 341 0
 1466 00c8 3B1C     		mov	r3, r7
 1467 00ca 1733     		add	r3, r3, #23
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 33


 1468 00cc 1A78     		ldrb	r2, [r3]
 1469 00ce 3B1C     		mov	r3, r7
 1470 00d0 1733     		add	r3, r3, #23
 1471 00d2 0132     		add	r2, r2, #1
 1472 00d4 1A70     		strb	r2, [r3]
 342:.\Modbus.c    ****       response[j] = holdingReg[i];
 1473              		.loc 1 342 0
 1474 00d6 3B1C     		mov	r3, r7
 1475 00d8 1733     		add	r3, r3, #23
 1476 00da 1B78     		ldrb	r3, [r3]
 1477 00dc 314A     		ldr	r2, .L68+8
 1478 00de 3969     		ldr	r1, [r7, #16]
 1479 00e0 8900     		lsl	r1, r1, #2
 1480 00e2 8A58     		ldr	r2, [r1, r2]
 1481 00e4 D1B2     		uxtb	r1, r2
 1482 00e6 2E4A     		ldr	r2, .L68+4
 1483 00e8 D154     		strb	r1, [r2, r3]
 343:.\Modbus.c    ****       j++;
 1484              		.loc 1 343 0
 1485 00ea 3B1C     		mov	r3, r7
 1486 00ec 1733     		add	r3, r3, #23
 1487 00ee 1A78     		ldrb	r2, [r3]
 1488 00f0 3B1C     		mov	r3, r7
 1489 00f2 1733     		add	r3, r3, #23
 1490 00f4 0132     		add	r2, r2, #1
 1491 00f6 1A70     		strb	r2, [r3]
 1492              	.L64:
 331:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1493              		.loc 1 331 0
 1494 00f8 3B69     		ldr	r3, [r7, #16]
 1495 00fa 0133     		add	r3, r3, #1
 1496 00fc 3B61     		str	r3, [r7, #16]
 1497              	.L62:
 331:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1498              		.loc 1 331 0 is_stmt 0 discriminator 1
 1499 00fe FA68     		ldr	r2, [r7, #12]
 1500 0100 BB68     		ldr	r3, [r7, #8]
 1501 0102 D218     		add	r2, r2, r3
 1502 0104 3B69     		ldr	r3, [r7, #16]
 1503 0106 9A42     		cmp	r2, r3
 1504 0108 AED8     		bhi	.L65
 344:.\Modbus.c    ****     }
 345:.\Modbus.c    ****   }
 346:.\Modbus.c    ****   crc = generateCRC(j+2);
 1505              		.loc 1 346 0 is_stmt 1
 1506 010a 3B1C     		mov	r3, r7
 1507 010c 1733     		add	r3, r3, #23
 1508 010e 1B78     		ldrb	r3, [r3]
 1509 0110 0233     		add	r3, r3, #2
 1510 0112 DBB2     		uxtb	r3, r3
 1511 0114 181C     		mov	r0, r3
 1512 0116 FFF7FEFF 		bl	generateCRC
 1513 011a 031C     		mov	r3, r0
 1514 011c 7B60     		str	r3, [r7, #4]
 347:.\Modbus.c    ****   response[j] = crc >> 8;
 1515              		.loc 1 347 0
 1516 011e 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 34


 1517 0120 1733     		add	r3, r3, #23
 1518 0122 1B78     		ldrb	r3, [r3]
 1519 0124 7A68     		ldr	r2, [r7, #4]
 1520 0126 120A     		lsr	r2, r2, #8
 1521 0128 D1B2     		uxtb	r1, r2
 1522 012a 1D4A     		ldr	r2, .L68+4
 1523 012c D154     		strb	r1, [r2, r3]
 348:.\Modbus.c    ****   j++;
 1524              		.loc 1 348 0
 1525 012e 3B1C     		mov	r3, r7
 1526 0130 1733     		add	r3, r3, #23
 1527 0132 1A78     		ldrb	r2, [r3]
 1528 0134 3B1C     		mov	r3, r7
 1529 0136 1733     		add	r3, r3, #23
 1530 0138 0132     		add	r2, r2, #1
 1531 013a 1A70     		strb	r2, [r3]
 349:.\Modbus.c    ****   response[j] = crc;
 1532              		.loc 1 349 0
 1533 013c 3B1C     		mov	r3, r7
 1534 013e 1733     		add	r3, r3, #23
 1535 0140 1B78     		ldrb	r3, [r3]
 1536 0142 7A68     		ldr	r2, [r7, #4]
 1537 0144 D1B2     		uxtb	r1, r2
 1538 0146 164A     		ldr	r2, .L68+4
 1539 0148 D154     		strb	r1, [r2, r3]
 350:.\Modbus.c    ****   j+=2;
 1540              		.loc 1 350 0
 1541 014a 3B1C     		mov	r3, r7
 1542 014c 1733     		add	r3, r3, #23
 1543 014e 3A1C     		mov	r2, r7
 1544 0150 1732     		add	r2, r2, #23
 1545 0152 1278     		ldrb	r2, [r2]
 1546 0154 0232     		add	r2, r2, #2
 1547 0156 1A70     		strb	r2, [r3]
 351:.\Modbus.c    **** 
 352:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 1548              		.loc 1 352 0
 1549 0158 0120     		mov	r0, #1
 1550 015a FFF7FEFF 		bl	writeEnable_Write
 353:.\Modbus.c    **** 
 354:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1551              		.loc 1 354 0
 1552 015e 0023     		mov	r3, #0
 1553 0160 3B61     		str	r3, [r7, #16]
 1554 0162 09E0     		b	.L66
 1555              	.L67:
 355:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 1556              		.loc 1 355 0 discriminator 2
 1557 0164 0E4A     		ldr	r2, .L68+4
 1558 0166 3B69     		ldr	r3, [r7, #16]
 1559 0168 D318     		add	r3, r2, r3
 1560 016a 1B78     		ldrb	r3, [r3]
 1561 016c 181C     		mov	r0, r3
 1562 016e FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 354:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1563              		.loc 1 354 0 discriminator 2
 1564 0172 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 35


 1565 0174 0133     		add	r3, r3, #1
 1566 0176 3B61     		str	r3, [r7, #16]
 1567              	.L66:
 354:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1568              		.loc 1 354 0 is_stmt 0 discriminator 1
 1569 0178 3B1C     		mov	r3, r7
 1570 017a 1733     		add	r3, r3, #23
 1571 017c 1A78     		ldrb	r2, [r3]
 1572 017e 3B69     		ldr	r3, [r7, #16]
 1573 0180 9A42     		cmp	r2, r3
 1574 0182 EFD1     		bne	.L67
 356:.\Modbus.c    ****   }
 357:.\Modbus.c    ****   responseFinished(9);
 1575              		.loc 1 357 0 is_stmt 1
 1576 0184 0920     		mov	r0, #9
 1577 0186 FFF7FEFF 		bl	responseFinished
 358:.\Modbus.c    ****   i=0;  
 1578              		.loc 1 358 0
 1579 018a 0023     		mov	r3, #0
 1580 018c 3B61     		str	r3, [r7, #16]
 359:.\Modbus.c    ****   j=0;
 1581              		.loc 1 359 0
 1582 018e 3B1C     		mov	r3, r7
 1583 0190 1733     		add	r3, r3, #23
 1584 0192 0022     		mov	r2, #0
 1585 0194 1A70     		strb	r2, [r3]
 360:.\Modbus.c    **** }
 1586              		.loc 1 360 0
 1587 0196 BD46     		mov	sp, r7
 1588 0198 06B0     		add	sp, sp, #24
 1589              		@ sp needed
 1590 019a 80BD     		pop	{r7, pc}
 1591              	.L69:
 1592              		.align	2
 1593              	.L68:
 1594 019c 00000000 		.word	received
 1595 01a0 00000000 		.word	response
 1596 01a4 00000000 		.word	holdingReg
 1597              		.cfi_endproc
 1598              	.LFE38:
 1599              		.size	readInputReg, .-readInputReg
 1600              		.section	.text.readReg,"ax",%progbits
 1601              		.align	2
 1602              		.global	readReg
 1603              		.code	16
 1604              		.thumb_func
 1605              		.type	readReg, %function
 1606              	readReg:
 1607              	.LFB39:
 361:.\Modbus.c    **** 
 362:.\Modbus.c    **** 
 363:.\Modbus.c    **** void readReg(void)
 364:.\Modbus.c    **** {
 1608              		.loc 1 364 0
 1609              		.cfi_startproc
 1610 0000 80B5     		push	{r7, lr}
 1611              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 36


 1612              		.cfi_offset 7, -8
 1613              		.cfi_offset 14, -4
 1614 0002 86B0     		sub	sp, sp, #24
 1615              		.cfi_def_cfa_offset 32
 1616 0004 00AF     		add	r7, sp, #0
 1617              		.cfi_def_cfa_register 7
 365:.\Modbus.c    ****   unsigned int rr_Address = 0;
 1618              		.loc 1 365 0
 1619 0006 0023     		mov	r3, #0
 1620 0008 FB60     		str	r3, [r7, #12]
 366:.\Modbus.c    ****   unsigned int rr_numRegs = 0;
 1621              		.loc 1 366 0
 1622 000a 0023     		mov	r3, #0
 1623 000c BB60     		str	r3, [r7, #8]
 367:.\Modbus.c    ****   unsigned char j = 3;
 1624              		.loc 1 367 0
 1625 000e 3B1C     		mov	r3, r7
 1626 0010 1733     		add	r3, r3, #23
 1627 0012 0322     		mov	r2, #3
 1628 0014 1A70     		strb	r2, [r3]
 368:.\Modbus.c    ****   unsigned int crc = 0;
 1629              		.loc 1 368 0
 1630 0016 0023     		mov	r3, #0
 1631 0018 7B60     		str	r3, [r7, #4]
 369:.\Modbus.c    ****   unsigned int i = 0;
 1632              		.loc 1 369 0
 1633 001a 0023     		mov	r3, #0
 1634 001c 3B61     		str	r3, [r7, #16]
 370:.\Modbus.c    **** 
 371:.\Modbus.c    ****   //Combine address bytes
 372:.\Modbus.c    ****   rr_Address = received[2];
 1635              		.loc 1 372 0
 1636 001e 604B     		ldr	r3, .L77
 1637 0020 9B78     		ldrb	r3, [r3, #2]
 1638 0022 FB60     		str	r3, [r7, #12]
 373:.\Modbus.c    ****   rr_Address <<= 8;
 1639              		.loc 1 373 0
 1640 0024 FB68     		ldr	r3, [r7, #12]
 1641 0026 1B02     		lsl	r3, r3, #8
 1642 0028 FB60     		str	r3, [r7, #12]
 374:.\Modbus.c    ****   rr_Address |= received[3];
 1643              		.loc 1 374 0
 1644 002a 5D4B     		ldr	r3, .L77
 1645 002c DB78     		ldrb	r3, [r3, #3]
 1646 002e FA68     		ldr	r2, [r7, #12]
 1647 0030 1343     		orr	r3, r2
 1648 0032 FB60     		str	r3, [r7, #12]
 375:.\Modbus.c    **** 
 376:.\Modbus.c    ****   //Combine number of regs bytes
 377:.\Modbus.c    ****   rr_numRegs = received[4];
 1649              		.loc 1 377 0
 1650 0034 5A4B     		ldr	r3, .L77
 1651 0036 1B79     		ldrb	r3, [r3, #4]
 1652 0038 BB60     		str	r3, [r7, #8]
 378:.\Modbus.c    ****   rr_numRegs <<= 8;
 1653              		.loc 1 378 0
 1654 003a BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 37


 1655 003c 1B02     		lsl	r3, r3, #8
 1656 003e BB60     		str	r3, [r7, #8]
 379:.\Modbus.c    ****   rr_numRegs |= received[5];
 1657              		.loc 1 379 0
 1658 0040 574B     		ldr	r3, .L77
 1659 0042 5B79     		ldrb	r3, [r3, #5]
 1660 0044 BA68     		ldr	r2, [r7, #8]
 1661 0046 1343     		orr	r3, r2
 1662 0048 BB60     		str	r3, [r7, #8]
 380:.\Modbus.c    **** 
 381:.\Modbus.c    ****   response[0] = SlaveAddress;
 1663              		.loc 1 381 0
 1664 004a 564B     		ldr	r3, .L77+4
 1665 004c 0122     		mov	r2, #1
 1666 004e 1A70     		strb	r2, [r3]
 382:.\Modbus.c    ****   response[1] = 0x03;
 1667              		.loc 1 382 0
 1668 0050 544B     		ldr	r3, .L77+4
 1669 0052 0322     		mov	r2, #3
 1670 0054 5A70     		strb	r2, [r3, #1]
 383:.\Modbus.c    ****   response[2] = rr_numRegs*2; //2 bytes per reg
 1671              		.loc 1 383 0
 1672 0056 BB68     		ldr	r3, [r7, #8]
 1673 0058 DBB2     		uxtb	r3, r3
 1674 005a DB18     		add	r3, r3, r3
 1675 005c DAB2     		uxtb	r2, r3
 1676 005e 514B     		ldr	r3, .L77+4
 1677 0060 9A70     		strb	r2, [r3, #2]
 384:.\Modbus.c    **** 
 385:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1678              		.loc 1 385 0
 1679 0062 FB68     		ldr	r3, [r7, #12]
 1680 0064 3B61     		str	r3, [r7, #16]
 1681 0066 4AE0     		b	.L71
 1682              	.L74:
 386:.\Modbus.c    ****     if(holdingReg[i] > 255){
 1683              		.loc 1 386 0
 1684 0068 4F4B     		ldr	r3, .L77+8
 1685 006a 3A69     		ldr	r2, [r7, #16]
 1686 006c 9200     		lsl	r2, r2, #2
 1687 006e D358     		ldr	r3, [r2, r3]
 1688 0070 FF2B     		cmp	r3, #255
 1689 0072 23D9     		bls	.L72
 387:.\Modbus.c    ****       //Need to split it up into 2 bytes
 388:.\Modbus.c    ****       response[j] = holdingReg[i] >> 8;
 1690              		.loc 1 388 0
 1691 0074 3B1C     		mov	r3, r7
 1692 0076 1733     		add	r3, r3, #23
 1693 0078 1B78     		ldrb	r3, [r3]
 1694 007a 4B4A     		ldr	r2, .L77+8
 1695 007c 3969     		ldr	r1, [r7, #16]
 1696 007e 8900     		lsl	r1, r1, #2
 1697 0080 8A58     		ldr	r2, [r1, r2]
 1698 0082 120A     		lsr	r2, r2, #8
 1699 0084 D1B2     		uxtb	r1, r2
 1700 0086 474A     		ldr	r2, .L77+4
 1701 0088 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 38


 389:.\Modbus.c    ****       j++;
 1702              		.loc 1 389 0
 1703 008a 3B1C     		mov	r3, r7
 1704 008c 1733     		add	r3, r3, #23
 1705 008e 1A78     		ldrb	r2, [r3]
 1706 0090 3B1C     		mov	r3, r7
 1707 0092 1733     		add	r3, r3, #23
 1708 0094 0132     		add	r2, r2, #1
 1709 0096 1A70     		strb	r2, [r3]
 390:.\Modbus.c    ****       response[j] = holdingReg[i];
 1710              		.loc 1 390 0
 1711 0098 3B1C     		mov	r3, r7
 1712 009a 1733     		add	r3, r3, #23
 1713 009c 1B78     		ldrb	r3, [r3]
 1714 009e 424A     		ldr	r2, .L77+8
 1715 00a0 3969     		ldr	r1, [r7, #16]
 1716 00a2 8900     		lsl	r1, r1, #2
 1717 00a4 8A58     		ldr	r2, [r1, r2]
 1718 00a6 D1B2     		uxtb	r1, r2
 1719 00a8 3E4A     		ldr	r2, .L77+4
 1720 00aa D154     		strb	r1, [r2, r3]
 391:.\Modbus.c    ****       j++;
 1721              		.loc 1 391 0
 1722 00ac 3B1C     		mov	r3, r7
 1723 00ae 1733     		add	r3, r3, #23
 1724 00b0 1A78     		ldrb	r2, [r3]
 1725 00b2 3B1C     		mov	r3, r7
 1726 00b4 1733     		add	r3, r3, #23
 1727 00b6 0132     		add	r2, r2, #1
 1728 00b8 1A70     		strb	r2, [r3]
 1729 00ba 1DE0     		b	.L73
 1730              	.L72:
 392:.\Modbus.c    ****     }
 393:.\Modbus.c    ****     else{
 394:.\Modbus.c    ****       response[j] = 0x00;
 1731              		.loc 1 394 0
 1732 00bc 3B1C     		mov	r3, r7
 1733 00be 1733     		add	r3, r3, #23
 1734 00c0 1B78     		ldrb	r3, [r3]
 1735 00c2 384A     		ldr	r2, .L77+4
 1736 00c4 0021     		mov	r1, #0
 1737 00c6 D154     		strb	r1, [r2, r3]
 395:.\Modbus.c    ****       j++;
 1738              		.loc 1 395 0
 1739 00c8 3B1C     		mov	r3, r7
 1740 00ca 1733     		add	r3, r3, #23
 1741 00cc 1A78     		ldrb	r2, [r3]
 1742 00ce 3B1C     		mov	r3, r7
 1743 00d0 1733     		add	r3, r3, #23
 1744 00d2 0132     		add	r2, r2, #1
 1745 00d4 1A70     		strb	r2, [r3]
 396:.\Modbus.c    ****       response[j] = holdingReg[i];
 1746              		.loc 1 396 0
 1747 00d6 3B1C     		mov	r3, r7
 1748 00d8 1733     		add	r3, r3, #23
 1749 00da 1B78     		ldrb	r3, [r3]
 1750 00dc 324A     		ldr	r2, .L77+8
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 39


 1751 00de 3969     		ldr	r1, [r7, #16]
 1752 00e0 8900     		lsl	r1, r1, #2
 1753 00e2 8A58     		ldr	r2, [r1, r2]
 1754 00e4 D1B2     		uxtb	r1, r2
 1755 00e6 2F4A     		ldr	r2, .L77+4
 1756 00e8 D154     		strb	r1, [r2, r3]
 397:.\Modbus.c    ****       j++;
 1757              		.loc 1 397 0
 1758 00ea 3B1C     		mov	r3, r7
 1759 00ec 1733     		add	r3, r3, #23
 1760 00ee 1A78     		ldrb	r2, [r3]
 1761 00f0 3B1C     		mov	r3, r7
 1762 00f2 1733     		add	r3, r3, #23
 1763 00f4 0132     		add	r2, r2, #1
 1764 00f6 1A70     		strb	r2, [r3]
 1765              	.L73:
 385:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1766              		.loc 1 385 0
 1767 00f8 3B69     		ldr	r3, [r7, #16]
 1768 00fa 0133     		add	r3, r3, #1
 1769 00fc 3B61     		str	r3, [r7, #16]
 1770              	.L71:
 385:.\Modbus.c    ****   for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
 1771              		.loc 1 385 0 is_stmt 0 discriminator 1
 1772 00fe FA68     		ldr	r2, [r7, #12]
 1773 0100 BB68     		ldr	r3, [r7, #8]
 1774 0102 D218     		add	r2, r2, r3
 1775 0104 3B69     		ldr	r3, [r7, #16]
 1776 0106 9A42     		cmp	r2, r3
 1777 0108 AED8     		bhi	.L74
 398:.\Modbus.c    ****     }
 399:.\Modbus.c    ****   }
 400:.\Modbus.c    ****   crc = generateCRC(j+2);
 1778              		.loc 1 400 0 is_stmt 1
 1779 010a 3B1C     		mov	r3, r7
 1780 010c 1733     		add	r3, r3, #23
 1781 010e 1B78     		ldrb	r3, [r3]
 1782 0110 0233     		add	r3, r3, #2
 1783 0112 DBB2     		uxtb	r3, r3
 1784 0114 181C     		mov	r0, r3
 1785 0116 FFF7FEFF 		bl	generateCRC
 1786 011a 031C     		mov	r3, r0
 1787 011c 7B60     		str	r3, [r7, #4]
 401:.\Modbus.c    ****   response[j] = crc >> 8;
 1788              		.loc 1 401 0
 1789 011e 3B1C     		mov	r3, r7
 1790 0120 1733     		add	r3, r3, #23
 1791 0122 1B78     		ldrb	r3, [r3]
 1792 0124 7A68     		ldr	r2, [r7, #4]
 1793 0126 120A     		lsr	r2, r2, #8
 1794 0128 D1B2     		uxtb	r1, r2
 1795 012a 1E4A     		ldr	r2, .L77+4
 1796 012c D154     		strb	r1, [r2, r3]
 402:.\Modbus.c    ****   j++;
 1797              		.loc 1 402 0
 1798 012e 3B1C     		mov	r3, r7
 1799 0130 1733     		add	r3, r3, #23
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 40


 1800 0132 1A78     		ldrb	r2, [r3]
 1801 0134 3B1C     		mov	r3, r7
 1802 0136 1733     		add	r3, r3, #23
 1803 0138 0132     		add	r2, r2, #1
 1804 013a 1A70     		strb	r2, [r3]
 403:.\Modbus.c    ****   response[j] = crc;
 1805              		.loc 1 403 0
 1806 013c 3B1C     		mov	r3, r7
 1807 013e 1733     		add	r3, r3, #23
 1808 0140 1B78     		ldrb	r3, [r3]
 1809 0142 7A68     		ldr	r2, [r7, #4]
 1810 0144 D1B2     		uxtb	r1, r2
 1811 0146 174A     		ldr	r2, .L77+4
 1812 0148 D154     		strb	r1, [r2, r3]
 404:.\Modbus.c    ****   j+=2;
 1813              		.loc 1 404 0
 1814 014a 3B1C     		mov	r3, r7
 1815 014c 1733     		add	r3, r3, #23
 1816 014e 3A1C     		mov	r2, r7
 1817 0150 1732     		add	r2, r2, #23
 1818 0152 1278     		ldrb	r2, [r2]
 1819 0154 0232     		add	r2, r2, #2
 1820 0156 1A70     		strb	r2, [r3]
 405:.\Modbus.c    **** 
 406:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 1821              		.loc 1 406 0
 1822 0158 0120     		mov	r0, #1
 1823 015a FFF7FEFF 		bl	writeEnable_Write
 407:.\Modbus.c    **** 
 408:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1824              		.loc 1 408 0
 1825 015e 0023     		mov	r3, #0
 1826 0160 3B61     		str	r3, [r7, #16]
 1827 0162 09E0     		b	.L75
 1828              	.L76:
 409:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 1829              		.loc 1 409 0 discriminator 2
 1830 0164 0F4A     		ldr	r2, .L77+4
 1831 0166 3B69     		ldr	r3, [r7, #16]
 1832 0168 D318     		add	r3, r2, r3
 1833 016a 1B78     		ldrb	r3, [r3]
 1834 016c 181C     		mov	r0, r3
 1835 016e FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 408:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1836              		.loc 1 408 0 discriminator 2
 1837 0172 3B69     		ldr	r3, [r7, #16]
 1838 0174 0133     		add	r3, r3, #1
 1839 0176 3B61     		str	r3, [r7, #16]
 1840              	.L75:
 408:.\Modbus.c    ****   for(i=0;i!=j;i++){
 1841              		.loc 1 408 0 is_stmt 0 discriminator 1
 1842 0178 3B1C     		mov	r3, r7
 1843 017a 1733     		add	r3, r3, #23
 1844 017c 1A78     		ldrb	r2, [r3]
 1845 017e 3B69     		ldr	r3, [r7, #16]
 1846 0180 9A42     		cmp	r2, r3
 1847 0182 EFD1     		bne	.L76
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 41


 410:.\Modbus.c    ****   }
 411:.\Modbus.c    ****   responseFinished(j);
 1848              		.loc 1 411 0 is_stmt 1
 1849 0184 3B1C     		mov	r3, r7
 1850 0186 1733     		add	r3, r3, #23
 1851 0188 1B78     		ldrb	r3, [r3]
 1852 018a 181C     		mov	r0, r3
 1853 018c FFF7FEFF 		bl	responseFinished
 412:.\Modbus.c    ****   j=0;  
 1854              		.loc 1 412 0
 1855 0190 3B1C     		mov	r3, r7
 1856 0192 1733     		add	r3, r3, #23
 1857 0194 0022     		mov	r2, #0
 1858 0196 1A70     		strb	r2, [r3]
 413:.\Modbus.c    **** }
 1859              		.loc 1 413 0
 1860 0198 BD46     		mov	sp, r7
 1861 019a 06B0     		add	sp, sp, #24
 1862              		@ sp needed
 1863 019c 80BD     		pop	{r7, pc}
 1864              	.L78:
 1865 019e C046     		.align	2
 1866              	.L77:
 1867 01a0 00000000 		.word	received
 1868 01a4 00000000 		.word	response
 1869 01a8 00000000 		.word	holdingReg
 1870              		.cfi_endproc
 1871              	.LFE39:
 1872              		.size	readReg, .-readReg
 1873              		.section	.text.writeReg,"ax",%progbits
 1874              		.align	2
 1875              		.global	writeReg
 1876              		.code	16
 1877              		.thumb_func
 1878              		.type	writeReg, %function
 1879              	writeReg:
 1880              	.LFB40:
 414:.\Modbus.c    **** 
 415:.\Modbus.c    **** void writeReg(void)
 416:.\Modbus.c    **** {
 1881              		.loc 1 416 0
 1882              		.cfi_startproc
 1883 0000 80B5     		push	{r7, lr}
 1884              		.cfi_def_cfa_offset 8
 1885              		.cfi_offset 7, -8
 1886              		.cfi_offset 14, -4
 1887 0002 88B0     		sub	sp, sp, #32
 1888              		.cfi_def_cfa_offset 40
 1889 0004 00AF     		add	r7, sp, #0
 1890              		.cfi_def_cfa_register 7
 417:.\Modbus.c    **** /******************************************************************************/
 418:.\Modbus.c    **** /* Works out which reg to write and then responds                             */
 419:.\Modbus.c    **** /******************************************************************************/
 420:.\Modbus.c    ****   unsigned int wr_AddressLow = 0;
 1891              		.loc 1 420 0
 1892 0006 0023     		mov	r3, #0
 1893 0008 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 42


 421:.\Modbus.c    ****   unsigned int wr_AddressHigh = 0;
 1894              		.loc 1 421 0
 1895 000a 0023     		mov	r3, #0
 1896 000c 7B61     		str	r3, [r7, #20]
 422:.\Modbus.c    ****   unsigned int wr_Address = 0;
 1897              		.loc 1 422 0
 1898 000e 0023     		mov	r3, #0
 1899 0010 3B61     		str	r3, [r7, #16]
 423:.\Modbus.c    **** 
 424:.\Modbus.c    ****   unsigned int wr_valToWrite = 0;
 1900              		.loc 1 424 0
 1901 0012 0023     		mov	r3, #0
 1902 0014 FB60     		str	r3, [r7, #12]
 425:.\Modbus.c    ****   unsigned int wr_valToWriteLow = 0;
 1903              		.loc 1 425 0
 1904 0016 0023     		mov	r3, #0
 1905 0018 BB60     		str	r3, [r7, #8]
 426:.\Modbus.c    ****   unsigned int wr_valToWriteHigh = 0;
 1906              		.loc 1 426 0
 1907 001a 0023     		mov	r3, #0
 1908 001c 7B60     		str	r3, [r7, #4]
 427:.\Modbus.c    **** 
 428:.\Modbus.c    ****   unsigned int crc = 0;
 1909              		.loc 1 428 0
 1910 001e 0023     		mov	r3, #0
 1911 0020 3B60     		str	r3, [r7]
 429:.\Modbus.c    ****   unsigned int i = 0;
 1912              		.loc 1 429 0
 1913 0022 0023     		mov	r3, #0
 1914 0024 FB61     		str	r3, [r7, #28]
 430:.\Modbus.c    **** 
 431:.\Modbus.c    ****   //Combine address bytes
 432:.\Modbus.c    ****   wr_Address = received[2];
 1915              		.loc 1 432 0
 1916 0026 334B     		ldr	r3, .L82
 1917 0028 9B78     		ldrb	r3, [r3, #2]
 1918 002a 3B61     		str	r3, [r7, #16]
 433:.\Modbus.c    ****   wr_Address <<= 8;
 1919              		.loc 1 433 0
 1920 002c 3B69     		ldr	r3, [r7, #16]
 1921 002e 1B02     		lsl	r3, r3, #8
 1922 0030 3B61     		str	r3, [r7, #16]
 434:.\Modbus.c    ****   wr_Address |= received[3];
 1923              		.loc 1 434 0
 1924 0032 304B     		ldr	r3, .L82
 1925 0034 DB78     		ldrb	r3, [r3, #3]
 1926 0036 3A69     		ldr	r2, [r7, #16]
 1927 0038 1343     		orr	r3, r2
 1928 003a 3B61     		str	r3, [r7, #16]
 435:.\Modbus.c    **** 
 436:.\Modbus.c    ****   wr_AddressLow = received[3]; //useful to store
 1929              		.loc 1 436 0
 1930 003c 2D4B     		ldr	r3, .L82
 1931 003e DB78     		ldrb	r3, [r3, #3]
 1932 0040 BB61     		str	r3, [r7, #24]
 437:.\Modbus.c    ****   wr_AddressHigh = received[2];
 1933              		.loc 1 437 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 43


 1934 0042 2C4B     		ldr	r3, .L82
 1935 0044 9B78     		ldrb	r3, [r3, #2]
 1936 0046 7B61     		str	r3, [r7, #20]
 438:.\Modbus.c    **** 
 439:.\Modbus.c    ****   //Combine value to write regs
 440:.\Modbus.c    ****   wr_valToWrite = received[4];
 1937              		.loc 1 440 0
 1938 0048 2A4B     		ldr	r3, .L82
 1939 004a 1B79     		ldrb	r3, [r3, #4]
 1940 004c FB60     		str	r3, [r7, #12]
 441:.\Modbus.c    ****   wr_valToWrite <<= 8;
 1941              		.loc 1 441 0
 1942 004e FB68     		ldr	r3, [r7, #12]
 1943 0050 1B02     		lsl	r3, r3, #8
 1944 0052 FB60     		str	r3, [r7, #12]
 442:.\Modbus.c    ****   wr_valToWrite |= received[5];
 1945              		.loc 1 442 0
 1946 0054 274B     		ldr	r3, .L82
 1947 0056 5B79     		ldrb	r3, [r3, #5]
 1948 0058 FA68     		ldr	r2, [r7, #12]
 1949 005a 1343     		orr	r3, r2
 1950 005c FB60     		str	r3, [r7, #12]
 443:.\Modbus.c    **** 
 444:.\Modbus.c    ****   wr_valToWriteLow = received[5];
 1951              		.loc 1 444 0
 1952 005e 254B     		ldr	r3, .L82
 1953 0060 5B79     		ldrb	r3, [r3, #5]
 1954 0062 BB60     		str	r3, [r7, #8]
 445:.\Modbus.c    ****   wr_valToWriteHigh = received[4];
 1955              		.loc 1 445 0
 1956 0064 234B     		ldr	r3, .L82
 1957 0066 1B79     		ldrb	r3, [r3, #4]
 1958 0068 7B60     		str	r3, [r7, #4]
 446:.\Modbus.c    **** 
 447:.\Modbus.c    ****   holdingReg[wr_Address] = wr_valToWrite;
 1959              		.loc 1 447 0
 1960 006a 234B     		ldr	r3, .L82+4
 1961 006c 3A69     		ldr	r2, [r7, #16]
 1962 006e 9200     		lsl	r2, r2, #2
 1963 0070 F968     		ldr	r1, [r7, #12]
 1964 0072 D150     		str	r1, [r2, r3]
 448:.\Modbus.c    **** 
 449:.\Modbus.c    ****   response[0] = SlaveAddress;
 1965              		.loc 1 449 0
 1966 0074 214B     		ldr	r3, .L82+8
 1967 0076 0122     		mov	r2, #1
 1968 0078 1A70     		strb	r2, [r3]
 450:.\Modbus.c    ****   response[1] = 0x06;
 1969              		.loc 1 450 0
 1970 007a 204B     		ldr	r3, .L82+8
 1971 007c 0622     		mov	r2, #6
 1972 007e 5A70     		strb	r2, [r3, #1]
 451:.\Modbus.c    ****   response[3] = wr_AddressLow; //2 bytes per reg
 1973              		.loc 1 451 0
 1974 0080 BB69     		ldr	r3, [r7, #24]
 1975 0082 DAB2     		uxtb	r2, r3
 1976 0084 1D4B     		ldr	r3, .L82+8
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 44


 1977 0086 DA70     		strb	r2, [r3, #3]
 452:.\Modbus.c    ****   response[2] = wr_AddressHigh;
 1978              		.loc 1 452 0
 1979 0088 7B69     		ldr	r3, [r7, #20]
 1980 008a DAB2     		uxtb	r2, r3
 1981 008c 1B4B     		ldr	r3, .L82+8
 1982 008e 9A70     		strb	r2, [r3, #2]
 453:.\Modbus.c    **** 
 454:.\Modbus.c    **** //TO DO CHECK VALUE IS ACTUALLY WRITTEN//
 455:.\Modbus.c    ****   response[4] = wr_valToWriteHigh;
 1983              		.loc 1 455 0
 1984 0090 7B68     		ldr	r3, [r7, #4]
 1985 0092 DAB2     		uxtb	r2, r3
 1986 0094 194B     		ldr	r3, .L82+8
 1987 0096 1A71     		strb	r2, [r3, #4]
 456:.\Modbus.c    ****   response[5] = wr_valToWriteLow;
 1988              		.loc 1 456 0
 1989 0098 BB68     		ldr	r3, [r7, #8]
 1990 009a DAB2     		uxtb	r2, r3
 1991 009c 174B     		ldr	r3, .L82+8
 1992 009e 5A71     		strb	r2, [r3, #5]
 457:.\Modbus.c    **** 
 458:.\Modbus.c    ****   crc = generateCRC(8);
 1993              		.loc 1 458 0
 1994 00a0 0820     		mov	r0, #8
 1995 00a2 FFF7FEFF 		bl	generateCRC
 1996 00a6 031C     		mov	r3, r0
 1997 00a8 3B60     		str	r3, [r7]
 459:.\Modbus.c    **** 
 460:.\Modbus.c    ****   response[6] = crc >> 8;
 1998              		.loc 1 460 0
 1999 00aa 3B68     		ldr	r3, [r7]
 2000 00ac 1B0A     		lsr	r3, r3, #8
 2001 00ae DAB2     		uxtb	r2, r3
 2002 00b0 124B     		ldr	r3, .L82+8
 2003 00b2 9A71     		strb	r2, [r3, #6]
 461:.\Modbus.c    ****   response[7] = crc;
 2004              		.loc 1 461 0
 2005 00b4 3B68     		ldr	r3, [r7]
 2006 00b6 DAB2     		uxtb	r2, r3
 2007 00b8 104B     		ldr	r3, .L82+8
 2008 00ba DA71     		strb	r2, [r3, #7]
 462:.\Modbus.c    **** 
 463:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 2009              		.loc 1 463 0
 2010 00bc 0120     		mov	r0, #1
 2011 00be FFF7FEFF 		bl	writeEnable_Write
 464:.\Modbus.c    **** 
 465:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2012              		.loc 1 465 0
 2013 00c2 0023     		mov	r3, #0
 2014 00c4 FB61     		str	r3, [r7, #28]
 2015 00c6 09E0     		b	.L80
 2016              	.L81:
 466:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 2017              		.loc 1 466 0 discriminator 2
 2018 00c8 0C4A     		ldr	r2, .L82+8
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 45


 2019 00ca FB69     		ldr	r3, [r7, #28]
 2020 00cc D318     		add	r3, r2, r3
 2021 00ce 1B78     		ldrb	r3, [r3]
 2022 00d0 181C     		mov	r0, r3
 2023 00d2 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 465:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2024              		.loc 1 465 0 discriminator 2
 2025 00d6 FB69     		ldr	r3, [r7, #28]
 2026 00d8 0133     		add	r3, r3, #1
 2027 00da FB61     		str	r3, [r7, #28]
 2028              	.L80:
 465:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2029              		.loc 1 465 0 is_stmt 0 discriminator 1
 2030 00dc FB69     		ldr	r3, [r7, #28]
 2031 00de 092B     		cmp	r3, #9
 2032 00e0 F2D1     		bne	.L81
 467:.\Modbus.c    ****   }
 468:.\Modbus.c    ****   responseFinished(9);
 2033              		.loc 1 468 0 is_stmt 1
 2034 00e2 0920     		mov	r0, #9
 2035 00e4 FFF7FEFF 		bl	responseFinished
 469:.\Modbus.c    ****   i=0;  
 2036              		.loc 1 469 0
 2037 00e8 0023     		mov	r3, #0
 2038 00ea FB61     		str	r3, [r7, #28]
 470:.\Modbus.c    **** }
 2039              		.loc 1 470 0
 2040 00ec BD46     		mov	sp, r7
 2041 00ee 08B0     		add	sp, sp, #32
 2042              		@ sp needed
 2043 00f0 80BD     		pop	{r7, pc}
 2044              	.L83:
 2045 00f2 C046     		.align	2
 2046              	.L82:
 2047 00f4 00000000 		.word	received
 2048 00f8 00000000 		.word	holdingReg
 2049 00fc 00000000 		.word	response
 2050              		.cfi_endproc
 2051              	.LFE40:
 2052              		.size	writeReg, .-writeReg
 2053              		.section	.text.writeMultipleRegs,"ax",%progbits
 2054              		.align	2
 2055              		.global	writeMultipleRegs
 2056              		.code	16
 2057              		.thumb_func
 2058              		.type	writeMultipleRegs, %function
 2059              	writeMultipleRegs:
 2060              	.LFB41:
 471:.\Modbus.c    **** 
 472:.\Modbus.c    **** void writeMultipleRegs(void)
 473:.\Modbus.c    **** {
 2061              		.loc 1 473 0
 2062              		.cfi_startproc
 2063 0000 80B5     		push	{r7, lr}
 2064              		.cfi_def_cfa_offset 8
 2065              		.cfi_offset 7, -8
 2066              		.cfi_offset 14, -4
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 46


 2067 0002 8CB0     		sub	sp, sp, #48
 2068              		.cfi_def_cfa_offset 56
 2069 0004 00AF     		add	r7, sp, #0
 2070              		.cfi_def_cfa_register 7
 474:.\Modbus.c    **** /******************************************************************************/
 475:.\Modbus.c    **** /* Works out which reg to write and then responds                             */
 476:.\Modbus.c    **** /******************************************************************************/
 477:.\Modbus.c    ****   unsigned int wmr_Address = 0;
 2071              		.loc 1 477 0
 2072 0006 0023     		mov	r3, #0
 2073 0008 7B62     		str	r3, [r7, #36]
 478:.\Modbus.c    ****   unsigned int wmr_AddressHigh = 0;
 2074              		.loc 1 478 0
 2075 000a 0023     		mov	r3, #0
 2076 000c 3B62     		str	r3, [r7, #32]
 479:.\Modbus.c    ****   unsigned int wmr_AddressLow = 0;
 2077              		.loc 1 479 0
 2078 000e 0023     		mov	r3, #0
 2079 0010 FB61     		str	r3, [r7, #28]
 480:.\Modbus.c    ****   unsigned int wmr_numRegs = 0;
 2080              		.loc 1 480 0
 2081 0012 0023     		mov	r3, #0
 2082 0014 BB61     		str	r3, [r7, #24]
 481:.\Modbus.c    ****   unsigned int wmr_numRegsHigh = 0;
 2083              		.loc 1 481 0
 2084 0016 0023     		mov	r3, #0
 2085 0018 7B61     		str	r3, [r7, #20]
 482:.\Modbus.c    ****   unsigned int wmr_numRegsLow = 0;
 2086              		.loc 1 482 0
 2087 001a 0023     		mov	r3, #0
 2088 001c 3B61     		str	r3, [r7, #16]
 483:.\Modbus.c    ****   unsigned int wmr_numBytes = 0;
 2089              		.loc 1 483 0
 2090 001e 0023     		mov	r3, #0
 2091 0020 FB60     		str	r3, [r7, #12]
 484:.\Modbus.c    ****   unsigned int wmr_numBytesTST = 0;
 2092              		.loc 1 484 0
 2093 0022 0023     		mov	r3, #0
 2094 0024 BB60     		str	r3, [r7, #8]
 485:.\Modbus.c    ****   unsigned int valToWrite = 0;
 2095              		.loc 1 485 0
 2096 0026 0023     		mov	r3, #0
 2097 0028 7B60     		str	r3, [r7, #4]
 486:.\Modbus.c    **** //  unsigned int valToWriteHigh = 0;
 487:.\Modbus.c    **** //  unsigned int valToWriteLow = 0;
 488:.\Modbus.c    **** 
 489:.\Modbus.c    ****   unsigned char j = 0;
 2098              		.loc 1 489 0
 2099 002a 3B1C     		mov	r3, r7
 2100 002c 2F33     		add	r3, r3, #47
 2101 002e 0022     		mov	r2, #0
 2102 0030 1A70     		strb	r2, [r3]
 490:.\Modbus.c    ****   unsigned int crc = 0;
 2103              		.loc 1 490 0
 2104 0032 0023     		mov	r3, #0
 2105 0034 3B60     		str	r3, [r7]
 491:.\Modbus.c    ****   unsigned int i = 0;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 47


 2106              		.loc 1 491 0
 2107 0036 0023     		mov	r3, #0
 2108 0038 BB62     		str	r3, [r7, #40]
 492:.\Modbus.c    **** 
 493:.\Modbus.c    ****   //Combine address bytes
 494:.\Modbus.c    ****   wmr_Address = received[2];
 2109              		.loc 1 494 0
 2110 003a 4F4B     		ldr	r3, .L89
 2111 003c 9B78     		ldrb	r3, [r3, #2]
 2112 003e 7B62     		str	r3, [r7, #36]
 495:.\Modbus.c    ****   wmr_Address <<= 8;
 2113              		.loc 1 495 0
 2114 0040 7B6A     		ldr	r3, [r7, #36]
 2115 0042 1B02     		lsl	r3, r3, #8
 2116 0044 7B62     		str	r3, [r7, #36]
 496:.\Modbus.c    ****   //add address high and low bits
 497:.\Modbus.c    ****   wmr_Address |= received[3];
 2117              		.loc 1 497 0
 2118 0046 4C4B     		ldr	r3, .L89
 2119 0048 DB78     		ldrb	r3, [r3, #3]
 2120 004a 7A6A     		ldr	r2, [r7, #36]
 2121 004c 1343     		orr	r3, r2
 2122 004e 7B62     		str	r3, [r7, #36]
 498:.\Modbus.c    ****   wmr_AddressHigh = received[2];
 2123              		.loc 1 498 0
 2124 0050 494B     		ldr	r3, .L89
 2125 0052 9B78     		ldrb	r3, [r3, #2]
 2126 0054 3B62     		str	r3, [r7, #32]
 499:.\Modbus.c    ****   wmr_AddressLow = received[3];
 2127              		.loc 1 499 0
 2128 0056 484B     		ldr	r3, .L89
 2129 0058 DB78     		ldrb	r3, [r3, #3]
 2130 005a FB61     		str	r3, [r7, #28]
 500:.\Modbus.c    **** 
 501:.\Modbus.c    **** 
 502:.\Modbus.c    ****   //Combine number of regs bytes
 503:.\Modbus.c    ****   wmr_numRegs = received[4];
 2131              		.loc 1 503 0
 2132 005c 464B     		ldr	r3, .L89
 2133 005e 1B79     		ldrb	r3, [r3, #4]
 2134 0060 BB61     		str	r3, [r7, #24]
 504:.\Modbus.c    ****   wmr_numRegs <<= 8;
 2135              		.loc 1 504 0
 2136 0062 BB69     		ldr	r3, [r7, #24]
 2137 0064 1B02     		lsl	r3, r3, #8
 2138 0066 BB61     		str	r3, [r7, #24]
 505:.\Modbus.c    ****   wmr_numRegs |= received[5];
 2139              		.loc 1 505 0
 2140 0068 434B     		ldr	r3, .L89
 2141 006a 5B79     		ldrb	r3, [r3, #5]
 2142 006c BA69     		ldr	r2, [r7, #24]
 2143 006e 1343     		orr	r3, r2
 2144 0070 BB61     		str	r3, [r7, #24]
 506:.\Modbus.c    ****   wmr_numRegsHigh = received[4];
 2145              		.loc 1 506 0
 2146 0072 414B     		ldr	r3, .L89
 2147 0074 1B79     		ldrb	r3, [r3, #4]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 48


 2148 0076 7B61     		str	r3, [r7, #20]
 507:.\Modbus.c    ****   wmr_numRegsLow = received[5];
 2149              		.loc 1 507 0
 2150 0078 3F4B     		ldr	r3, .L89
 2151 007a 5B79     		ldrb	r3, [r3, #5]
 2152 007c 3B61     		str	r3, [r7, #16]
 508:.\Modbus.c    **** 
 509:.\Modbus.c    ****   wmr_numBytes = received[6];
 2153              		.loc 1 509 0
 2154 007e 3E4B     		ldr	r3, .L89
 2155 0080 9B79     		ldrb	r3, [r3, #6]
 2156 0082 FB60     		str	r3, [r7, #12]
 510:.\Modbus.c    **** 
 511:.\Modbus.c    ****   j = 7;
 2157              		.loc 1 511 0
 2158 0084 3B1C     		mov	r3, r7
 2159 0086 2F33     		add	r3, r3, #47
 2160 0088 0722     		mov	r2, #7
 2161 008a 1A70     		strb	r2, [r3]
 512:.\Modbus.c    **** 
 513:.\Modbus.c    ****   //the following lines haven't been tested yet but were suggested
 514:.\Modbus.c    ****   //in a pull request, If you have any problems revert back to wmr_numBytes 
 515:.\Modbus.c    ****   //in the for loop from TST (the lines commented below)
 516:.\Modbus.c    **** 
 517:.\Modbus.c    ****   wmr_numBytesTST = wmr_numBytes /2;   
 2162              		.loc 1 517 0
 2163 008c FB68     		ldr	r3, [r7, #12]
 2164 008e 5B08     		lsr	r3, r3, #1
 2165 0090 BB60     		str	r3, [r7, #8]
 518:.\Modbus.c    **** 
 519:.\Modbus.c    ****   for(i=0;i<wmr_numBytesTST;i++)
 2166              		.loc 1 519 0
 2167 0092 0023     		mov	r3, #0
 2168 0094 BB62     		str	r3, [r7, #40]
 2169 0096 28E0     		b	.L85
 2170              	.L86:
 520:.\Modbus.c    ****   {
 521:.\Modbus.c    ****     valToWrite = received[j];
 2171              		.loc 1 521 0 discriminator 2
 2172 0098 3B1C     		mov	r3, r7
 2173 009a 2F33     		add	r3, r3, #47
 2174 009c 1B78     		ldrb	r3, [r3]
 2175 009e 364A     		ldr	r2, .L89
 2176 00a0 D35C     		ldrb	r3, [r2, r3]
 2177 00a2 7B60     		str	r3, [r7, #4]
 522:.\Modbus.c    ****     valToWrite <<= 8;
 2178              		.loc 1 522 0 discriminator 2
 2179 00a4 7B68     		ldr	r3, [r7, #4]
 2180 00a6 1B02     		lsl	r3, r3, #8
 2181 00a8 7B60     		str	r3, [r7, #4]
 523:.\Modbus.c    ****     j++;
 2182              		.loc 1 523 0 discriminator 2
 2183 00aa 3B1C     		mov	r3, r7
 2184 00ac 2F33     		add	r3, r3, #47
 2185 00ae 1A78     		ldrb	r2, [r3]
 2186 00b0 3B1C     		mov	r3, r7
 2187 00b2 2F33     		add	r3, r3, #47
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 49


 2188 00b4 0132     		add	r2, r2, #1
 2189 00b6 1A70     		strb	r2, [r3]
 524:.\Modbus.c    ****     valToWrite |= received[j];
 2190              		.loc 1 524 0 discriminator 2
 2191 00b8 3B1C     		mov	r3, r7
 2192 00ba 2F33     		add	r3, r3, #47
 2193 00bc 1B78     		ldrb	r3, [r3]
 2194 00be 2E4A     		ldr	r2, .L89
 2195 00c0 D35C     		ldrb	r3, [r2, r3]
 2196 00c2 7A68     		ldr	r2, [r7, #4]
 2197 00c4 1343     		orr	r3, r2
 2198 00c6 7B60     		str	r3, [r7, #4]
 525:.\Modbus.c    ****     j++;
 2199              		.loc 1 525 0 discriminator 2
 2200 00c8 3B1C     		mov	r3, r7
 2201 00ca 2F33     		add	r3, r3, #47
 2202 00cc 1A78     		ldrb	r2, [r3]
 2203 00ce 3B1C     		mov	r3, r7
 2204 00d0 2F33     		add	r3, r3, #47
 2205 00d2 0132     		add	r2, r2, #1
 2206 00d4 1A70     		strb	r2, [r3]
 526:.\Modbus.c    **** 
 527:.\Modbus.c    ****     holdingReg[wmr_Address + i] = valToWrite;
 2207              		.loc 1 527 0 discriminator 2
 2208 00d6 7A6A     		ldr	r2, [r7, #36]
 2209 00d8 BB6A     		ldr	r3, [r7, #40]
 2210 00da D218     		add	r2, r2, r3
 2211 00dc 274B     		ldr	r3, .L89+4
 2212 00de 9200     		lsl	r2, r2, #2
 2213 00e0 7968     		ldr	r1, [r7, #4]
 2214 00e2 D150     		str	r1, [r2, r3]
 519:.\Modbus.c    ****   for(i=0;i<wmr_numBytesTST;i++)
 2215              		.loc 1 519 0 discriminator 2
 2216 00e4 BB6A     		ldr	r3, [r7, #40]
 2217 00e6 0133     		add	r3, r3, #1
 2218 00e8 BB62     		str	r3, [r7, #40]
 2219              	.L85:
 519:.\Modbus.c    ****   for(i=0;i<wmr_numBytesTST;i++)
 2220              		.loc 1 519 0 is_stmt 0 discriminator 1
 2221 00ea BA6A     		ldr	r2, [r7, #40]
 2222 00ec BB68     		ldr	r3, [r7, #8]
 2223 00ee 9A42     		cmp	r2, r3
 2224 00f0 D2D3     		bcc	.L86
 528:.\Modbus.c    ****   }
 529:.\Modbus.c    **** 
 530:.\Modbus.c    ****   //for(i=0;i<wmr_numBytes;i++)
 531:.\Modbus.c    ****   //{
 532:.\Modbus.c    ****   // valToWrite = received[j];
 533:.\Modbus.c    ****   //  valToWrite <<= 8;
 534:.\Modbus.c    ****   //  j++;
 535:.\Modbus.c    ****   //  valToWrite |= received[j];
 536:.\Modbus.c    ****   //  j++;
 537:.\Modbus.c    **** 
 538:.\Modbus.c    ****   //  holdingReg[wmr_Address + i] = valToWrite;
 539:.\Modbus.c    ****   //}
 540:.\Modbus.c    **** 
 541:.\Modbus.c    **** 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 50


 542:.\Modbus.c    ****   response[0] = SlaveAddress;
 2225              		.loc 1 542 0 is_stmt 1
 2226 00f2 234B     		ldr	r3, .L89+8
 2227 00f4 0122     		mov	r2, #1
 2228 00f6 1A70     		strb	r2, [r3]
 543:.\Modbus.c    ****   response[1] = 0x10;
 2229              		.loc 1 543 0
 2230 00f8 214B     		ldr	r3, .L89+8
 2231 00fa 1022     		mov	r2, #16
 2232 00fc 5A70     		strb	r2, [r3, #1]
 544:.\Modbus.c    ****   response[2] = wmr_AddressHigh;
 2233              		.loc 1 544 0
 2234 00fe 3B6A     		ldr	r3, [r7, #32]
 2235 0100 DAB2     		uxtb	r2, r3
 2236 0102 1F4B     		ldr	r3, .L89+8
 2237 0104 9A70     		strb	r2, [r3, #2]
 545:.\Modbus.c    ****   response[3] = wmr_AddressLow;
 2238              		.loc 1 545 0
 2239 0106 FB69     		ldr	r3, [r7, #28]
 2240 0108 DAB2     		uxtb	r2, r3
 2241 010a 1D4B     		ldr	r3, .L89+8
 2242 010c DA70     		strb	r2, [r3, #3]
 546:.\Modbus.c    ****   response[4] = wmr_numRegsHigh;
 2243              		.loc 1 546 0
 2244 010e 7B69     		ldr	r3, [r7, #20]
 2245 0110 DAB2     		uxtb	r2, r3
 2246 0112 1B4B     		ldr	r3, .L89+8
 2247 0114 1A71     		strb	r2, [r3, #4]
 547:.\Modbus.c    ****   response[5] = wmr_numRegsLow;
 2248              		.loc 1 547 0
 2249 0116 3B69     		ldr	r3, [r7, #16]
 2250 0118 DAB2     		uxtb	r2, r3
 2251 011a 194B     		ldr	r3, .L89+8
 2252 011c 5A71     		strb	r2, [r3, #5]
 548:.\Modbus.c    **** 
 549:.\Modbus.c    ****   crc = generateCRC(8);
 2253              		.loc 1 549 0
 2254 011e 0820     		mov	r0, #8
 2255 0120 FFF7FEFF 		bl	generateCRC
 2256 0124 031C     		mov	r3, r0
 2257 0126 3B60     		str	r3, [r7]
 550:.\Modbus.c    **** 
 551:.\Modbus.c    ****   response[6] = crc >> 8;
 2258              		.loc 1 551 0
 2259 0128 3B68     		ldr	r3, [r7]
 2260 012a 1B0A     		lsr	r3, r3, #8
 2261 012c DAB2     		uxtb	r2, r3
 2262 012e 144B     		ldr	r3, .L89+8
 2263 0130 9A71     		strb	r2, [r3, #6]
 552:.\Modbus.c    ****   response[7] = crc;
 2264              		.loc 1 552 0
 2265 0132 3B68     		ldr	r3, [r7]
 2266 0134 DAB2     		uxtb	r2, r3
 2267 0136 124B     		ldr	r3, .L89+8
 2268 0138 DA71     		strb	r2, [r3, #7]
 553:.\Modbus.c    **** 
 554:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 51


 2269              		.loc 1 554 0
 2270 013a 0120     		mov	r0, #1
 2271 013c FFF7FEFF 		bl	writeEnable_Write
 555:.\Modbus.c    **** 
 556:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2272              		.loc 1 556 0
 2273 0140 0023     		mov	r3, #0
 2274 0142 BB62     		str	r3, [r7, #40]
 2275 0144 09E0     		b	.L87
 2276              	.L88:
 557:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 2277              		.loc 1 557 0 discriminator 2
 2278 0146 0E4A     		ldr	r2, .L89+8
 2279 0148 BB6A     		ldr	r3, [r7, #40]
 2280 014a D318     		add	r3, r2, r3
 2281 014c 1B78     		ldrb	r3, [r3]
 2282 014e 181C     		mov	r0, r3
 2283 0150 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 556:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2284              		.loc 1 556 0 discriminator 2
 2285 0154 BB6A     		ldr	r3, [r7, #40]
 2286 0156 0133     		add	r3, r3, #1
 2287 0158 BB62     		str	r3, [r7, #40]
 2288              	.L87:
 556:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2289              		.loc 1 556 0 is_stmt 0 discriminator 1
 2290 015a BB6A     		ldr	r3, [r7, #40]
 2291 015c 092B     		cmp	r3, #9
 2292 015e F2D1     		bne	.L88
 558:.\Modbus.c    ****   }
 559:.\Modbus.c    ****   responseFinished(9);
 2293              		.loc 1 559 0 is_stmt 1
 2294 0160 0920     		mov	r0, #9
 2295 0162 FFF7FEFF 		bl	responseFinished
 560:.\Modbus.c    ****   i=0;  
 2296              		.loc 1 560 0
 2297 0166 0023     		mov	r3, #0
 2298 0168 BB62     		str	r3, [r7, #40]
 561:.\Modbus.c    **** 
 562:.\Modbus.c    ****   j=0;
 2299              		.loc 1 562 0
 2300 016a 3B1C     		mov	r3, r7
 2301 016c 2F33     		add	r3, r3, #47
 2302 016e 0022     		mov	r2, #0
 2303 0170 1A70     		strb	r2, [r3]
 563:.\Modbus.c    ****   
 564:.\Modbus.c    **** }
 2304              		.loc 1 564 0
 2305 0172 BD46     		mov	sp, r7
 2306 0174 0CB0     		add	sp, sp, #48
 2307              		@ sp needed
 2308 0176 80BD     		pop	{r7, pc}
 2309              	.L90:
 2310              		.align	2
 2311              	.L89:
 2312 0178 00000000 		.word	received
 2313 017c 00000000 		.word	holdingReg
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 52


 2314 0180 00000000 		.word	response
 2315              		.cfi_endproc
 2316              	.LFE41:
 2317              		.size	writeMultipleRegs, .-writeMultipleRegs
 2318              		.section	.text.writeCoil,"ax",%progbits
 2319              		.align	2
 2320              		.global	writeCoil
 2321              		.code	16
 2322              		.thumb_func
 2323              		.type	writeCoil, %function
 2324              	writeCoil:
 2325              	.LFB42:
 565:.\Modbus.c    **** 
 566:.\Modbus.c    **** 
 567:.\Modbus.c    **** void writeCoil(void)
 568:.\Modbus.c    **** {
 2326              		.loc 1 568 0
 2327              		.cfi_startproc
 2328 0000 80B5     		push	{r7, lr}
 2329              		.cfi_def_cfa_offset 8
 2330              		.cfi_offset 7, -8
 2331              		.cfi_offset 14, -4
 2332 0002 88B0     		sub	sp, sp, #32
 2333              		.cfi_def_cfa_offset 40
 2334 0004 00AF     		add	r7, sp, #0
 2335              		.cfi_def_cfa_register 7
 569:.\Modbus.c    **** /******************************************************************************/
 570:.\Modbus.c    **** /* Writes to a coil and then responds                                         */
 571:.\Modbus.c    **** /******************************************************************************/
 572:.\Modbus.c    ****   unsigned int wc_AddressLow = 0;
 2336              		.loc 1 572 0
 2337 0006 0023     		mov	r3, #0
 2338 0008 BB61     		str	r3, [r7, #24]
 573:.\Modbus.c    ****   unsigned int wc_AddressHigh = 0;
 2339              		.loc 1 573 0
 2340 000a 0023     		mov	r3, #0
 2341 000c 7B61     		str	r3, [r7, #20]
 574:.\Modbus.c    ****   unsigned int wc_Address = 0;
 2342              		.loc 1 574 0
 2343 000e 0023     		mov	r3, #0
 2344 0010 3B61     		str	r3, [r7, #16]
 575:.\Modbus.c    **** 
 576:.\Modbus.c    ****   unsigned int wc_valToWrite = 0;
 2345              		.loc 1 576 0
 2346 0012 0023     		mov	r3, #0
 2347 0014 FB60     		str	r3, [r7, #12]
 577:.\Modbus.c    ****   unsigned int wc_valToWriteLow = 0;
 2348              		.loc 1 577 0
 2349 0016 0023     		mov	r3, #0
 2350 0018 BB60     		str	r3, [r7, #8]
 578:.\Modbus.c    ****   unsigned int wc_valToWriteHigh = 0;
 2351              		.loc 1 578 0
 2352 001a 0023     		mov	r3, #0
 2353 001c 7B60     		str	r3, [r7, #4]
 579:.\Modbus.c    ****   int i = 0;
 2354              		.loc 1 579 0
 2355 001e 0023     		mov	r3, #0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 53


 2356 0020 FB61     		str	r3, [r7, #28]
 580:.\Modbus.c    ****   unsigned int crc = 0;
 2357              		.loc 1 580 0
 2358 0022 0023     		mov	r3, #0
 2359 0024 3B60     		str	r3, [r7]
 581:.\Modbus.c    **** 
 582:.\Modbus.c    ****   //Combine address bytes
 583:.\Modbus.c    ****   wc_Address = received[2];
 2360              		.loc 1 583 0
 2361 0026 374B     		ldr	r3, .L96
 2362 0028 9B78     		ldrb	r3, [r3, #2]
 2363 002a 3B61     		str	r3, [r7, #16]
 584:.\Modbus.c    ****   wc_Address <<= 8;
 2364              		.loc 1 584 0
 2365 002c 3B69     		ldr	r3, [r7, #16]
 2366 002e 1B02     		lsl	r3, r3, #8
 2367 0030 3B61     		str	r3, [r7, #16]
 585:.\Modbus.c    ****   wc_Address |= received[3];
 2368              		.loc 1 585 0
 2369 0032 344B     		ldr	r3, .L96
 2370 0034 DB78     		ldrb	r3, [r3, #3]
 2371 0036 3A69     		ldr	r2, [r7, #16]
 2372 0038 1343     		orr	r3, r2
 2373 003a 3B61     		str	r3, [r7, #16]
 586:.\Modbus.c    **** 
 587:.\Modbus.c    ****   wc_AddressLow = received[3]; //useful to store
 2374              		.loc 1 587 0
 2375 003c 314B     		ldr	r3, .L96
 2376 003e DB78     		ldrb	r3, [r3, #3]
 2377 0040 BB61     		str	r3, [r7, #24]
 588:.\Modbus.c    ****   wc_AddressHigh = received[2];
 2378              		.loc 1 588 0
 2379 0042 304B     		ldr	r3, .L96
 2380 0044 9B78     		ldrb	r3, [r3, #2]
 2381 0046 7B61     		str	r3, [r7, #20]
 589:.\Modbus.c    **** 
 590:.\Modbus.c    ****   //Combine value to write regs
 591:.\Modbus.c    ****   wc_valToWrite = received[4];
 2382              		.loc 1 591 0
 2383 0048 2E4B     		ldr	r3, .L96
 2384 004a 1B79     		ldrb	r3, [r3, #4]
 2385 004c FB60     		str	r3, [r7, #12]
 592:.\Modbus.c    ****   wc_valToWrite <<= 8;
 2386              		.loc 1 592 0
 2387 004e FB68     		ldr	r3, [r7, #12]
 2388 0050 1B02     		lsl	r3, r3, #8
 2389 0052 FB60     		str	r3, [r7, #12]
 593:.\Modbus.c    ****   wc_valToWrite |= received[5];
 2390              		.loc 1 593 0
 2391 0054 2B4B     		ldr	r3, .L96
 2392 0056 5B79     		ldrb	r3, [r3, #5]
 2393 0058 FA68     		ldr	r2, [r7, #12]
 2394 005a 1343     		orr	r3, r2
 2395 005c FB60     		str	r3, [r7, #12]
 594:.\Modbus.c    **** 
 595:.\Modbus.c    ****   wc_valToWriteLow = received[5];
 2396              		.loc 1 595 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 54


 2397 005e 294B     		ldr	r3, .L96
 2398 0060 5B79     		ldrb	r3, [r3, #5]
 2399 0062 BB60     		str	r3, [r7, #8]
 596:.\Modbus.c    ****   wc_valToWriteHigh = received[4];
 2400              		.loc 1 596 0
 2401 0064 274B     		ldr	r3, .L96
 2402 0066 1B79     		ldrb	r3, [r3, #4]
 2403 0068 7B60     		str	r3, [r7, #4]
 597:.\Modbus.c    **** 
 598:.\Modbus.c    ****   if(wc_valToWrite){
 2404              		.loc 1 598 0
 2405 006a FB68     		ldr	r3, [r7, #12]
 2406 006c 002B     		cmp	r3, #0
 2407 006e 05D0     		beq	.L92
 599:.\Modbus.c    ****     coils[wc_Address] = 0xFF;
 2408              		.loc 1 599 0
 2409 0070 254A     		ldr	r2, .L96+4
 2410 0072 3B69     		ldr	r3, [r7, #16]
 2411 0074 D318     		add	r3, r2, r3
 2412 0076 FF22     		mov	r2, #255
 2413 0078 1A70     		strb	r2, [r3]
 2414 007a 04E0     		b	.L93
 2415              	.L92:
 600:.\Modbus.c    ****   }
 601:.\Modbus.c    ****   else{
 602:.\Modbus.c    ****     coils[wc_Address] = 0x00;
 2416              		.loc 1 602 0
 2417 007c 224A     		ldr	r2, .L96+4
 2418 007e 3B69     		ldr	r3, [r7, #16]
 2419 0080 D318     		add	r3, r2, r3
 2420 0082 0022     		mov	r2, #0
 2421 0084 1A70     		strb	r2, [r3]
 2422              	.L93:
 603:.\Modbus.c    ****   }
 604:.\Modbus.c    **** 
 605:.\Modbus.c    ****   response[0] = SlaveAddress;
 2423              		.loc 1 605 0
 2424 0086 214B     		ldr	r3, .L96+8
 2425 0088 0122     		mov	r2, #1
 2426 008a 1A70     		strb	r2, [r3]
 606:.\Modbus.c    ****   response[1] = 0x05;
 2427              		.loc 1 606 0
 2428 008c 1F4B     		ldr	r3, .L96+8
 2429 008e 0522     		mov	r2, #5
 2430 0090 5A70     		strb	r2, [r3, #1]
 607:.\Modbus.c    ****   response[3] = wc_AddressLow; //2 bytes per reg
 2431              		.loc 1 607 0
 2432 0092 BB69     		ldr	r3, [r7, #24]
 2433 0094 DAB2     		uxtb	r2, r3
 2434 0096 1D4B     		ldr	r3, .L96+8
 2435 0098 DA70     		strb	r2, [r3, #3]
 608:.\Modbus.c    ****   response[2] = wc_AddressHigh;
 2436              		.loc 1 608 0
 2437 009a 7B69     		ldr	r3, [r7, #20]
 2438 009c DAB2     		uxtb	r2, r3
 2439 009e 1B4B     		ldr	r3, .L96+8
 2440 00a0 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 55


 609:.\Modbus.c    **** 
 610:.\Modbus.c    **** //TO DO CHECK VALUE IS ACTUALLY WRITTEN//
 611:.\Modbus.c    ****   response[4] = wc_valToWriteHigh;
 2441              		.loc 1 611 0
 2442 00a2 7B68     		ldr	r3, [r7, #4]
 2443 00a4 DAB2     		uxtb	r2, r3
 2444 00a6 194B     		ldr	r3, .L96+8
 2445 00a8 1A71     		strb	r2, [r3, #4]
 612:.\Modbus.c    ****   response[5] = wc_valToWriteLow;
 2446              		.loc 1 612 0
 2447 00aa BB68     		ldr	r3, [r7, #8]
 2448 00ac DAB2     		uxtb	r2, r3
 2449 00ae 174B     		ldr	r3, .L96+8
 2450 00b0 5A71     		strb	r2, [r3, #5]
 613:.\Modbus.c    **** 
 614:.\Modbus.c    ****   crc = generateCRC(8);
 2451              		.loc 1 614 0
 2452 00b2 0820     		mov	r0, #8
 2453 00b4 FFF7FEFF 		bl	generateCRC
 2454 00b8 031C     		mov	r3, r0
 2455 00ba 3B60     		str	r3, [r7]
 615:.\Modbus.c    **** 
 616:.\Modbus.c    ****   response[6] = crc >> 8;
 2456              		.loc 1 616 0
 2457 00bc 3B68     		ldr	r3, [r7]
 2458 00be 1B0A     		lsr	r3, r3, #8
 2459 00c0 DAB2     		uxtb	r2, r3
 2460 00c2 124B     		ldr	r3, .L96+8
 2461 00c4 9A71     		strb	r2, [r3, #6]
 617:.\Modbus.c    ****   response[7] = crc;
 2462              		.loc 1 617 0
 2463 00c6 3B68     		ldr	r3, [r7]
 2464 00c8 DAB2     		uxtb	r2, r3
 2465 00ca 104B     		ldr	r3, .L96+8
 2466 00cc DA71     		strb	r2, [r3, #7]
 618:.\Modbus.c    **** 
 619:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 2467              		.loc 1 619 0
 2468 00ce 0120     		mov	r0, #1
 2469 00d0 FFF7FEFF 		bl	writeEnable_Write
 620:.\Modbus.c    **** 
 621:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2470              		.loc 1 621 0
 2471 00d4 0023     		mov	r3, #0
 2472 00d6 FB61     		str	r3, [r7, #28]
 2473 00d8 09E0     		b	.L94
 2474              	.L95:
 622:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 2475              		.loc 1 622 0 discriminator 2
 2476 00da 0C4A     		ldr	r2, .L96+8
 2477 00dc FB69     		ldr	r3, [r7, #28]
 2478 00de D318     		add	r3, r2, r3
 2479 00e0 1B78     		ldrb	r3, [r3]
 2480 00e2 181C     		mov	r0, r3
 2481 00e4 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 621:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2482              		.loc 1 621 0 discriminator 2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 56


 2483 00e8 FB69     		ldr	r3, [r7, #28]
 2484 00ea 0133     		add	r3, r3, #1
 2485 00ec FB61     		str	r3, [r7, #28]
 2486              	.L94:
 621:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2487              		.loc 1 621 0 is_stmt 0 discriminator 1
 2488 00ee FB69     		ldr	r3, [r7, #28]
 2489 00f0 092B     		cmp	r3, #9
 2490 00f2 F2D1     		bne	.L95
 623:.\Modbus.c    ****   }
 624:.\Modbus.c    ****   responseFinished(10);
 2491              		.loc 1 624 0 is_stmt 1
 2492 00f4 0A20     		mov	r0, #10
 2493 00f6 FFF7FEFF 		bl	responseFinished
 625:.\Modbus.c    ****   i=0;  
 2494              		.loc 1 625 0
 2495 00fa 0023     		mov	r3, #0
 2496 00fc FB61     		str	r3, [r7, #28]
 626:.\Modbus.c    **** }
 2497              		.loc 1 626 0
 2498 00fe BD46     		mov	sp, r7
 2499 0100 08B0     		add	sp, sp, #32
 2500              		@ sp needed
 2501 0102 80BD     		pop	{r7, pc}
 2502              	.L97:
 2503              		.align	2
 2504              	.L96:
 2505 0104 00000000 		.word	received
 2506 0108 00000000 		.word	coils
 2507 010c 00000000 		.word	response
 2508              		.cfi_endproc
 2509              	.LFE42:
 2510              		.size	writeCoil, .-writeCoil
 2511              		.section	.text.writeMultipleCoils,"ax",%progbits
 2512              		.align	2
 2513              		.global	writeMultipleCoils
 2514              		.code	16
 2515              		.thumb_func
 2516              		.type	writeMultipleCoils, %function
 2517              	writeMultipleCoils:
 2518              	.LFB43:
 627:.\Modbus.c    **** 
 628:.\Modbus.c    **** void writeMultipleCoils(void)
 629:.\Modbus.c    **** {
 2519              		.loc 1 629 0
 2520              		.cfi_startproc
 2521 0000 80B5     		push	{r7, lr}
 2522              		.cfi_def_cfa_offset 8
 2523              		.cfi_offset 7, -8
 2524              		.cfi_offset 14, -4
 2525 0002 8AB0     		sub	sp, sp, #40
 2526              		.cfi_def_cfa_offset 48
 2527 0004 00AF     		add	r7, sp, #0
 2528              		.cfi_def_cfa_register 7
 630:.\Modbus.c    **** /******************************************************************************/
 631:.\Modbus.c    **** /* Reads a coil and then responds                                             */
 632:.\Modbus.c    **** /******************************************************************************/
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 57


 633:.\Modbus.c    ****   unsigned int wmc_Address = 0;
 2529              		.loc 1 633 0
 2530 0006 0023     		mov	r3, #0
 2531 0008 FB61     		str	r3, [r7, #28]
 634:.\Modbus.c    ****   unsigned int wmc_AddressHigh = 0;
 2532              		.loc 1 634 0
 2533 000a 0023     		mov	r3, #0
 2534 000c BB61     		str	r3, [r7, #24]
 635:.\Modbus.c    ****   unsigned int wmc_AddressLow = 0;
 2535              		.loc 1 635 0
 2536 000e 0023     		mov	r3, #0
 2537 0010 7B61     		str	r3, [r7, #20]
 636:.\Modbus.c    ****   unsigned int wmc_numCoils = 0;
 2538              		.loc 1 636 0
 2539 0012 0023     		mov	r3, #0
 2540 0014 3B61     		str	r3, [r7, #16]
 637:.\Modbus.c    ****   unsigned int wmc_numCoilsHigh = 0;
 2541              		.loc 1 637 0
 2542 0016 0023     		mov	r3, #0
 2543 0018 FB60     		str	r3, [r7, #12]
 638:.\Modbus.c    ****   unsigned int wmc_numCoilsLow = 0;
 2544              		.loc 1 638 0
 2545 001a 0023     		mov	r3, #0
 2546 001c BB60     		str	r3, [r7, #8]
 639:.\Modbus.c    ****  // unsigned int wmc_numBytes;
 640:.\Modbus.c    ****   unsigned int crc = 0;
 2547              		.loc 1 640 0
 2548 001e 0023     		mov	r3, #0
 2549 0020 7B60     		str	r3, [r7, #4]
 641:.\Modbus.c    **** 
 642:.\Modbus.c    ****   unsigned char howManyBytes = 0;
 2550              		.loc 1 642 0
 2551 0022 3B1C     		mov	r3, r7
 2552 0024 2733     		add	r3, r3, #39
 2553 0026 0022     		mov	r2, #0
 2554 0028 1A70     		strb	r2, [r3]
 643:.\Modbus.c    ****   unsigned char remainder = 0;
 2555              		.loc 1 643 0
 2556 002a FB1C     		add	r3, r7, #3
 2557 002c 0022     		mov	r2, #0
 2558 002e 1A70     		strb	r2, [r3]
 644:.\Modbus.c    **** //  unsigned char lsb = 0;
 645:.\Modbus.c    ****   unsigned char i,j,l = 0;
 2559              		.loc 1 645 0
 2560 0030 3B1C     		mov	r3, r7
 2561 0032 2433     		add	r3, r3, #36
 2562 0034 0022     		mov	r2, #0
 2563 0036 1A70     		strb	r2, [r3]
 646:.\Modbus.c    ****   //unsigned char k;
 647:.\Modbus.c    **** 
 648:.\Modbus.c    ****   //Combine address bytes
 649:.\Modbus.c    ****   wmc_Address = received[2];
 2564              		.loc 1 649 0
 2565 0038 874B     		ldr	r3, .L114
 2566 003a 9B78     		ldrb	r3, [r3, #2]
 2567 003c FB61     		str	r3, [r7, #28]
 650:.\Modbus.c    ****   wmc_AddressHigh = received[2];
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 58


 2568              		.loc 1 650 0
 2569 003e 864B     		ldr	r3, .L114
 2570 0040 9B78     		ldrb	r3, [r3, #2]
 2571 0042 BB61     		str	r3, [r7, #24]
 651:.\Modbus.c    ****   wmc_Address <<=8;
 2572              		.loc 1 651 0
 2573 0044 FB69     		ldr	r3, [r7, #28]
 2574 0046 1B02     		lsl	r3, r3, #8
 2575 0048 FB61     		str	r3, [r7, #28]
 652:.\Modbus.c    ****   wmc_Address |= received[3];
 2576              		.loc 1 652 0
 2577 004a 834B     		ldr	r3, .L114
 2578 004c DB78     		ldrb	r3, [r3, #3]
 2579 004e FA69     		ldr	r2, [r7, #28]
 2580 0050 1343     		orr	r3, r2
 2581 0052 FB61     		str	r3, [r7, #28]
 653:.\Modbus.c    ****   wmc_AddressLow = received[3];
 2582              		.loc 1 653 0
 2583 0054 804B     		ldr	r3, .L114
 2584 0056 DB78     		ldrb	r3, [r3, #3]
 2585 0058 7B61     		str	r3, [r7, #20]
 654:.\Modbus.c    **** 
 655:.\Modbus.c    ****   //Combine number of coils bytes
 656:.\Modbus.c    ****   wmc_numCoils = received[4];
 2586              		.loc 1 656 0
 2587 005a 7F4B     		ldr	r3, .L114
 2588 005c 1B79     		ldrb	r3, [r3, #4]
 2589 005e 3B61     		str	r3, [r7, #16]
 657:.\Modbus.c    ****   wmc_numCoilsHigh = received[4];
 2590              		.loc 1 657 0
 2591 0060 7D4B     		ldr	r3, .L114
 2592 0062 1B79     		ldrb	r3, [r3, #4]
 2593 0064 FB60     		str	r3, [r7, #12]
 658:.\Modbus.c    ****   wmc_numCoils <<= 8;
 2594              		.loc 1 658 0
 2595 0066 3B69     		ldr	r3, [r7, #16]
 2596 0068 1B02     		lsl	r3, r3, #8
 2597 006a 3B61     		str	r3, [r7, #16]
 659:.\Modbus.c    ****   wmc_numCoils |= received[5];
 2598              		.loc 1 659 0
 2599 006c 7A4B     		ldr	r3, .L114
 2600 006e 5B79     		ldrb	r3, [r3, #5]
 2601 0070 3A69     		ldr	r2, [r7, #16]
 2602 0072 1343     		orr	r3, r2
 2603 0074 3B61     		str	r3, [r7, #16]
 660:.\Modbus.c    ****   wmc_numCoilsLow = received[5];
 2604              		.loc 1 660 0
 2605 0076 784B     		ldr	r3, .L114
 2606 0078 5B79     		ldrb	r3, [r3, #5]
 2607 007a BB60     		str	r3, [r7, #8]
 661:.\Modbus.c    **** 
 662:.\Modbus.c    **** //  wmc_numBytes = received[6];
 663:.\Modbus.c    **** 
 664:.\Modbus.c    ****   response[0] = SlaveAddress;
 2608              		.loc 1 664 0
 2609 007c 774B     		ldr	r3, .L114+4
 2610 007e 0122     		mov	r2, #1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 59


 2611 0080 1A70     		strb	r2, [r3]
 665:.\Modbus.c    ****   response[1] = 0x0F;
 2612              		.loc 1 665 0
 2613 0082 764B     		ldr	r3, .L114+4
 2614 0084 0F22     		mov	r2, #15
 2615 0086 5A70     		strb	r2, [r3, #1]
 666:.\Modbus.c    **** 
 667:.\Modbus.c    ****   howManyBytes = wmc_numCoils/8;
 2616              		.loc 1 667 0
 2617 0088 3B69     		ldr	r3, [r7, #16]
 2618 008a DA08     		lsr	r2, r3, #3
 2619 008c 3B1C     		mov	r3, r7
 2620 008e 2733     		add	r3, r3, #39
 2621 0090 1A70     		strb	r2, [r3]
 668:.\Modbus.c    ****   remainder = wmc_numCoils % 8;
 2622              		.loc 1 668 0
 2623 0092 3B69     		ldr	r3, [r7, #16]
 2624 0094 D9B2     		uxtb	r1, r3
 2625 0096 FB1C     		add	r3, r7, #3
 2626 0098 0722     		mov	r2, #7
 2627 009a 0A40     		and	r2, r1
 2628 009c 1A70     		strb	r2, [r3]
 669:.\Modbus.c    **** 
 670:.\Modbus.c    ****   if(remainder){
 2629              		.loc 1 670 0
 2630 009e FB1C     		add	r3, r7, #3
 2631 00a0 1B78     		ldrb	r3, [r3]
 2632 00a2 002B     		cmp	r3, #0
 2633 00a4 06D0     		beq	.L99
 671:.\Modbus.c    ****     howManyBytes += 1;
 2634              		.loc 1 671 0
 2635 00a6 3B1C     		mov	r3, r7
 2636 00a8 2733     		add	r3, r3, #39
 2637 00aa 3A1C     		mov	r2, r7
 2638 00ac 2732     		add	r2, r2, #39
 2639 00ae 1278     		ldrb	r2, [r2]
 2640 00b0 0132     		add	r2, r2, #1
 2641 00b2 1A70     		strb	r2, [r3]
 2642              	.L99:
 672:.\Modbus.c    ****   }
 673:.\Modbus.c    ****   response[2] = wmc_AddressHigh;
 2643              		.loc 1 673 0
 2644 00b4 BB69     		ldr	r3, [r7, #24]
 2645 00b6 DAB2     		uxtb	r2, r3
 2646 00b8 684B     		ldr	r3, .L114+4
 2647 00ba 9A70     		strb	r2, [r3, #2]
 674:.\Modbus.c    ****   response[3] = wmc_AddressLow;
 2648              		.loc 1 674 0
 2649 00bc 7B69     		ldr	r3, [r7, #20]
 2650 00be DAB2     		uxtb	r2, r3
 2651 00c0 664B     		ldr	r3, .L114+4
 2652 00c2 DA70     		strb	r2, [r3, #3]
 675:.\Modbus.c    **** 
 676:.\Modbus.c    ****   response[4] = wmc_numCoilsHigh;
 2653              		.loc 1 676 0
 2654 00c4 FB68     		ldr	r3, [r7, #12]
 2655 00c6 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 60


 2656 00c8 644B     		ldr	r3, .L114+4
 2657 00ca 1A71     		strb	r2, [r3, #4]
 677:.\Modbus.c    ****   response[5] = wmc_numCoilsLow;
 2658              		.loc 1 677 0
 2659 00cc BB68     		ldr	r3, [r7, #8]
 2660 00ce DAB2     		uxtb	r2, r3
 2661 00d0 624B     		ldr	r3, .L114+4
 2662 00d2 5A71     		strb	r2, [r3, #5]
 678:.\Modbus.c    **** 
 679:.\Modbus.c    ****   l = wmc_Address;
 2663              		.loc 1 679 0
 2664 00d4 3B1C     		mov	r3, r7
 2665 00d6 2433     		add	r3, r3, #36
 2666 00d8 FA69     		ldr	r2, [r7, #28]
 2667 00da 1A70     		strb	r2, [r3]
 680:.\Modbus.c    ****   //k = 3; //start at response 3
 681:.\Modbus.c    **** 
 682:.\Modbus.c    **** //  unsigned char bitSet;
 683:.\Modbus.c    ****   unsigned char valToWrite;
 684:.\Modbus.c    ****   unsigned char q = 7; //count through vals to write
 2668              		.loc 1 684 0
 2669 00dc 3B1C     		mov	r3, r7
 2670 00de 2333     		add	r3, r3, #35
 2671 00e0 0722     		mov	r2, #7
 2672 00e2 1A70     		strb	r2, [r3]
 685:.\Modbus.c    ****   
 686:.\Modbus.c    **** 
 687:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 2673              		.loc 1 687 0
 2674 00e4 3B1C     		mov	r3, r7
 2675 00e6 2633     		add	r3, r3, #38
 2676 00e8 3A1C     		mov	r2, r7
 2677 00ea 2732     		add	r2, r2, #39
 2678 00ec 1278     		ldrb	r2, [r2]
 2679 00ee 1A70     		strb	r2, [r3]
 2680 00f0 78E0     		b	.L100
 2681              	.L111:
 688:.\Modbus.c    ****     valToWrite = received[q];
 2682              		.loc 1 688 0
 2683 00f2 3B1C     		mov	r3, r7
 2684 00f4 2333     		add	r3, r3, #35
 2685 00f6 1A78     		ldrb	r2, [r3]
 2686 00f8 BB1C     		add	r3, r7, #2
 2687 00fa 5749     		ldr	r1, .L114
 2688 00fc 8A5C     		ldrb	r2, [r1, r2]
 2689 00fe 1A70     		strb	r2, [r3]
 689:.\Modbus.c    ****     q++;
 2690              		.loc 1 689 0
 2691 0100 3B1C     		mov	r3, r7
 2692 0102 2333     		add	r3, r3, #35
 2693 0104 1A78     		ldrb	r2, [r3]
 2694 0106 3B1C     		mov	r3, r7
 2695 0108 2333     		add	r3, r3, #35
 2696 010a 0132     		add	r2, r2, #1
 2697 010c 1A70     		strb	r2, [r3]
 690:.\Modbus.c    ****     if(i>1){
 2698              		.loc 1 690 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 61


 2699 010e 3B1C     		mov	r3, r7
 2700 0110 2633     		add	r3, r3, #38
 2701 0112 1B78     		ldrb	r3, [r3]
 2702 0114 012B     		cmp	r3, #1
 2703 0116 2ED9     		bls	.L101
 691:.\Modbus.c    ****       for(j=0;j!=8;j++){
 2704              		.loc 1 691 0
 2705 0118 3B1C     		mov	r3, r7
 2706 011a 2533     		add	r3, r3, #37
 2707 011c 0022     		mov	r2, #0
 2708 011e 1A70     		strb	r2, [r3]
 2709 0120 23E0     		b	.L102
 2710              	.L105:
 692:.\Modbus.c    **** 	if(CHECK_BIT(valToWrite, j)){
 2711              		.loc 1 692 0
 2712 0122 BB1C     		add	r3, r7, #2
 2713 0124 1A78     		ldrb	r2, [r3]
 2714 0126 3B1C     		mov	r3, r7
 2715 0128 2533     		add	r3, r3, #37
 2716 012a 1B78     		ldrb	r3, [r3]
 2717 012c 1A41     		asr	r2, r2, r3
 2718 012e 0123     		mov	r3, #1
 2719 0130 1340     		and	r3, r2
 2720 0132 06D0     		beq	.L103
 693:.\Modbus.c    ****           coils[l] = 1;
 2721              		.loc 1 693 0
 2722 0134 3B1C     		mov	r3, r7
 2723 0136 2433     		add	r3, r3, #36
 2724 0138 1B78     		ldrb	r3, [r3]
 2725 013a 494A     		ldr	r2, .L114+8
 2726 013c 0121     		mov	r1, #1
 2727 013e D154     		strb	r1, [r2, r3]
 2728 0140 05E0     		b	.L104
 2729              	.L103:
 694:.\Modbus.c    **** 	}
 695:.\Modbus.c    **** 	else{
 696:.\Modbus.c    ****           coils[l] = 0; //need to sort out remainder stuff
 2730              		.loc 1 696 0
 2731 0142 3B1C     		mov	r3, r7
 2732 0144 2433     		add	r3, r3, #36
 2733 0146 1B78     		ldrb	r3, [r3]
 2734 0148 454A     		ldr	r2, .L114+8
 2735 014a 0021     		mov	r1, #0
 2736 014c D154     		strb	r1, [r2, r3]
 2737              	.L104:
 697:.\Modbus.c    **** 
 698:.\Modbus.c    **** 	}
 699:.\Modbus.c    **** 	l++;
 2738              		.loc 1 699 0
 2739 014e 3B1C     		mov	r3, r7
 2740 0150 2433     		add	r3, r3, #36
 2741 0152 1A78     		ldrb	r2, [r3]
 2742 0154 3B1C     		mov	r3, r7
 2743 0156 2433     		add	r3, r3, #36
 2744 0158 0132     		add	r2, r2, #1
 2745 015a 1A70     		strb	r2, [r3]
 691:.\Modbus.c    ****       for(j=0;j!=8;j++){
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 62


 2746              		.loc 1 691 0
 2747 015c 3B1C     		mov	r3, r7
 2748 015e 2533     		add	r3, r3, #37
 2749 0160 1A78     		ldrb	r2, [r3]
 2750 0162 3B1C     		mov	r3, r7
 2751 0164 2533     		add	r3, r3, #37
 2752 0166 0132     		add	r2, r2, #1
 2753 0168 1A70     		strb	r2, [r3]
 2754              	.L102:
 691:.\Modbus.c    ****       for(j=0;j!=8;j++){
 2755              		.loc 1 691 0 is_stmt 0 discriminator 1
 2756 016a 3B1C     		mov	r3, r7
 2757 016c 2533     		add	r3, r3, #37
 2758 016e 1B78     		ldrb	r3, [r3]
 2759 0170 082B     		cmp	r3, #8
 2760 0172 D6D1     		bne	.L105
 2761 0174 2FE0     		b	.L106
 2762              	.L101:
 700:.\Modbus.c    ****       }
 701:.\Modbus.c    ****     }
 702:.\Modbus.c    ****     else{
 703:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 2763              		.loc 1 703 0 is_stmt 1
 2764 0176 3B1C     		mov	r3, r7
 2765 0178 2533     		add	r3, r3, #37
 2766 017a 0022     		mov	r2, #0
 2767 017c 1A70     		strb	r2, [r3]
 2768 017e 23E0     		b	.L107
 2769              	.L110:
 704:.\Modbus.c    ****       if(CHECK_BIT(valToWrite, j)){
 2770              		.loc 1 704 0
 2771 0180 BB1C     		add	r3, r7, #2
 2772 0182 1A78     		ldrb	r2, [r3]
 2773 0184 3B1C     		mov	r3, r7
 2774 0186 2533     		add	r3, r3, #37
 2775 0188 1B78     		ldrb	r3, [r3]
 2776 018a 1A41     		asr	r2, r2, r3
 2777 018c 0123     		mov	r3, #1
 2778 018e 1340     		and	r3, r2
 2779 0190 06D0     		beq	.L108
 705:.\Modbus.c    ****           coils[l] = 1;
 2780              		.loc 1 705 0
 2781 0192 3B1C     		mov	r3, r7
 2782 0194 2433     		add	r3, r3, #36
 2783 0196 1B78     		ldrb	r3, [r3]
 2784 0198 314A     		ldr	r2, .L114+8
 2785 019a 0121     		mov	r1, #1
 2786 019c D154     		strb	r1, [r2, r3]
 2787 019e 05E0     		b	.L109
 2788              	.L108:
 706:.\Modbus.c    ****       }
 707:.\Modbus.c    ****       else{
 708:.\Modbus.c    ****         coils[l] = 0;
 2789              		.loc 1 708 0
 2790 01a0 3B1C     		mov	r3, r7
 2791 01a2 2433     		add	r3, r3, #36
 2792 01a4 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 63


 2793 01a6 2E4A     		ldr	r2, .L114+8
 2794 01a8 0021     		mov	r1, #0
 2795 01aa D154     		strb	r1, [r2, r3]
 2796              	.L109:
 709:.\Modbus.c    ****       }
 710:.\Modbus.c    ****       l++;
 2797              		.loc 1 710 0
 2798 01ac 3B1C     		mov	r3, r7
 2799 01ae 2433     		add	r3, r3, #36
 2800 01b0 1A78     		ldrb	r2, [r3]
 2801 01b2 3B1C     		mov	r3, r7
 2802 01b4 2433     		add	r3, r3, #36
 2803 01b6 0132     		add	r2, r2, #1
 2804 01b8 1A70     		strb	r2, [r3]
 703:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 2805              		.loc 1 703 0
 2806 01ba 3B1C     		mov	r3, r7
 2807 01bc 2533     		add	r3, r3, #37
 2808 01be 1A78     		ldrb	r2, [r3]
 2809 01c0 3B1C     		mov	r3, r7
 2810 01c2 2533     		add	r3, r3, #37
 2811 01c4 0132     		add	r2, r2, #1
 2812 01c6 1A70     		strb	r2, [r3]
 2813              	.L107:
 703:.\Modbus.c    ****       for(j=0;j!=remainder;j++){
 2814              		.loc 1 703 0 is_stmt 0 discriminator 1
 2815 01c8 3A1C     		mov	r2, r7
 2816 01ca 2532     		add	r2, r2, #37
 2817 01cc FB1C     		add	r3, r7, #3
 2818 01ce 1278     		ldrb	r2, [r2]
 2819 01d0 1B78     		ldrb	r3, [r3]
 2820 01d2 9A42     		cmp	r2, r3
 2821 01d4 D4D1     		bne	.L110
 2822              	.L106:
 687:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 2823              		.loc 1 687 0 is_stmt 1
 2824 01d6 3B1C     		mov	r3, r7
 2825 01d8 2633     		add	r3, r3, #38
 2826 01da 1A78     		ldrb	r2, [r3]
 2827 01dc 3B1C     		mov	r3, r7
 2828 01de 2633     		add	r3, r3, #38
 2829 01e0 013A     		sub	r2, r2, #1
 2830 01e2 1A70     		strb	r2, [r3]
 2831              	.L100:
 687:.\Modbus.c    ****   for(i=howManyBytes; i!=0; i--){
 2832              		.loc 1 687 0 is_stmt 0 discriminator 1
 2833 01e4 3B1C     		mov	r3, r7
 2834 01e6 2633     		add	r3, r3, #38
 2835 01e8 1B78     		ldrb	r3, [r3]
 2836 01ea 002B     		cmp	r3, #0
 2837 01ec 00D0     		beq	.LCB2416
 2838 01ee 80E7     		b	.L111	@long jump
 2839              	.LCB2416:
 711:.\Modbus.c    ****       }
 712:.\Modbus.c    ****     }
 713:.\Modbus.c    ****   }
 714:.\Modbus.c    ****   crc = generateCRC(8);
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 64


 2840              		.loc 1 714 0 is_stmt 1
 2841 01f0 0820     		mov	r0, #8
 2842 01f2 FFF7FEFF 		bl	generateCRC
 2843 01f6 031C     		mov	r3, r0
 2844 01f8 7B60     		str	r3, [r7, #4]
 715:.\Modbus.c    **** 
 716:.\Modbus.c    ****   response[6] = crc >> 8;
 2845              		.loc 1 716 0
 2846 01fa 7B68     		ldr	r3, [r7, #4]
 2847 01fc 1B0A     		lsr	r3, r3, #8
 2848 01fe DAB2     		uxtb	r2, r3
 2849 0200 164B     		ldr	r3, .L114+4
 2850 0202 9A71     		strb	r2, [r3, #6]
 717:.\Modbus.c    ****   response[7] = crc;
 2851              		.loc 1 717 0
 2852 0204 7B68     		ldr	r3, [r7, #4]
 2853 0206 DAB2     		uxtb	r2, r3
 2854 0208 144B     		ldr	r3, .L114+4
 2855 020a DA71     		strb	r2, [r3, #7]
 718:.\Modbus.c    **** 
 719:.\Modbus.c    ****   writeEnable_Write(1); // turn line round to write
 2856              		.loc 1 719 0
 2857 020c 0120     		mov	r0, #1
 2858 020e FFF7FEFF 		bl	writeEnable_Write
 720:.\Modbus.c    **** 
 721:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2859              		.loc 1 721 0
 2860 0212 3B1C     		mov	r3, r7
 2861 0214 2633     		add	r3, r3, #38
 2862 0216 0022     		mov	r2, #0
 2863 0218 1A70     		strb	r2, [r3]
 2864 021a 0EE0     		b	.L112
 2865              	.L113:
 722:.\Modbus.c    ****      ModbusUART_UartPutChar(response[i]);
 2866              		.loc 1 722 0 discriminator 2
 2867 021c 3B1C     		mov	r3, r7
 2868 021e 2633     		add	r3, r3, #38
 2869 0220 1B78     		ldrb	r3, [r3]
 2870 0222 0E4A     		ldr	r2, .L114+4
 2871 0224 D35C     		ldrb	r3, [r2, r3]
 2872 0226 181C     		mov	r0, r3
 2873 0228 FFF7FEFF 		bl	ModbusUART_SpiUartWriteTxData
 721:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2874              		.loc 1 721 0 discriminator 2
 2875 022c 3B1C     		mov	r3, r7
 2876 022e 2633     		add	r3, r3, #38
 2877 0230 1A78     		ldrb	r2, [r3]
 2878 0232 3B1C     		mov	r3, r7
 2879 0234 2633     		add	r3, r3, #38
 2880 0236 0132     		add	r2, r2, #1
 2881 0238 1A70     		strb	r2, [r3]
 2882              	.L112:
 721:.\Modbus.c    ****   for(i=0;i!=9;i++){
 2883              		.loc 1 721 0 is_stmt 0 discriminator 1
 2884 023a 3B1C     		mov	r3, r7
 2885 023c 2633     		add	r3, r3, #38
 2886 023e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 65


 2887 0240 092B     		cmp	r3, #9
 2888 0242 EBD1     		bne	.L113
 723:.\Modbus.c    ****   }
 724:.\Modbus.c    ****   responseFinished(10);
 2889              		.loc 1 724 0 is_stmt 1
 2890 0244 0A20     		mov	r0, #10
 2891 0246 FFF7FEFF 		bl	responseFinished
 725:.\Modbus.c    ****   i=0;  
 2892              		.loc 1 725 0
 2893 024a 3B1C     		mov	r3, r7
 2894 024c 2633     		add	r3, r3, #38
 2895 024e 0022     		mov	r2, #0
 2896 0250 1A70     		strb	r2, [r3]
 726:.\Modbus.c    **** }
 2897              		.loc 1 726 0
 2898 0252 BD46     		mov	sp, r7
 2899 0254 0AB0     		add	sp, sp, #40
 2900              		@ sp needed
 2901 0256 80BD     		pop	{r7, pc}
 2902              	.L115:
 2903              		.align	2
 2904              	.L114:
 2905 0258 00000000 		.word	received
 2906 025c 00000000 		.word	response
 2907 0260 00000000 		.word	coils
 2908              		.cfi_endproc
 2909              	.LFE43:
 2910              		.size	writeMultipleCoils, .-writeMultipleCoils
 2911              		.section	.text.generateCRC,"ax",%progbits
 2912              		.align	2
 2913              		.global	generateCRC
 2914              		.code	16
 2915              		.thumb_func
 2916              		.type	generateCRC, %function
 2917              	generateCRC:
 2918              	.LFB44:
 727:.\Modbus.c    **** 
 728:.\Modbus.c    **** unsigned int generateCRC(unsigned char messageLength)
 729:.\Modbus.c    **** {
 2919              		.loc 1 729 0
 2920              		.cfi_startproc
 2921 0000 80B5     		push	{r7, lr}
 2922              		.cfi_def_cfa_offset 8
 2923              		.cfi_offset 7, -8
 2924              		.cfi_offset 14, -4
 2925 0002 88B0     		sub	sp, sp, #32
 2926              		.cfi_def_cfa_offset 40
 2927 0004 00AF     		add	r7, sp, #0
 2928              		.cfi_def_cfa_register 7
 2929 0006 021C     		mov	r2, r0
 2930 0008 FB1D     		add	r3, r7, #7
 2931 000a 1A70     		strb	r2, [r3]
 730:.\Modbus.c    **** unsigned int crc = 0xFFFF;
 2932              		.loc 1 730 0
 2933 000c 244B     		ldr	r3, .L124
 2934 000e FB61     		str	r3, [r7, #28]
 731:.\Modbus.c    **** unsigned int crcHigh = 0;
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 66


 2935              		.loc 1 731 0
 2936 0010 0023     		mov	r3, #0
 2937 0012 3B61     		str	r3, [r7, #16]
 732:.\Modbus.c    **** unsigned int crcLow = 0;
 2938              		.loc 1 732 0
 2939 0014 0023     		mov	r3, #0
 2940 0016 FB60     		str	r3, [r7, #12]
 733:.\Modbus.c    **** int i,j = 0;
 2941              		.loc 1 733 0
 2942 0018 0023     		mov	r3, #0
 2943 001a 7B61     		str	r3, [r7, #20]
 734:.\Modbus.c    **** 
 735:.\Modbus.c    ****   for(i=0;i<messageLength-2;i++){
 2944              		.loc 1 735 0
 2945 001c 0023     		mov	r3, #0
 2946 001e BB61     		str	r3, [r7, #24]
 2947 0020 21E0     		b	.L117
 2948              	.L122:
 736:.\Modbus.c    ****     crc ^= response[i];
 2949              		.loc 1 736 0
 2950 0022 204A     		ldr	r2, .L124+4
 2951 0024 BB69     		ldr	r3, [r7, #24]
 2952 0026 D318     		add	r3, r2, r3
 2953 0028 1B78     		ldrb	r3, [r3]
 2954 002a FA69     		ldr	r2, [r7, #28]
 2955 002c 5340     		eor	r3, r2
 2956 002e FB61     		str	r3, [r7, #28]
 737:.\Modbus.c    ****     for(j=8; j!=0; j--){
 2957              		.loc 1 737 0
 2958 0030 0823     		mov	r3, #8
 2959 0032 7B61     		str	r3, [r7, #20]
 2960 0034 11E0     		b	.L118
 2961              	.L121:
 738:.\Modbus.c    ****       if((crc & 0x0001) != 0){
 2962              		.loc 1 738 0
 2963 0036 FA69     		ldr	r2, [r7, #28]
 2964 0038 0123     		mov	r3, #1
 2965 003a 1340     		and	r3, r2
 2966 003c 07D0     		beq	.L119
 739:.\Modbus.c    ****         crc >>= 1;
 2967              		.loc 1 739 0
 2968 003e FB69     		ldr	r3, [r7, #28]
 2969 0040 5B08     		lsr	r3, r3, #1
 2970 0042 FB61     		str	r3, [r7, #28]
 740:.\Modbus.c    ****         crc ^= 0xA001;
 2971              		.loc 1 740 0
 2972 0044 FB69     		ldr	r3, [r7, #28]
 2973 0046 184A     		ldr	r2, .L124+8
 2974 0048 5340     		eor	r3, r2
 2975 004a FB61     		str	r3, [r7, #28]
 2976 004c 02E0     		b	.L120
 2977              	.L119:
 741:.\Modbus.c    ****       }
 742:.\Modbus.c    ****       else{
 743:.\Modbus.c    ****         crc >>= 1;
 2978              		.loc 1 743 0
 2979 004e FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 67


 2980 0050 5B08     		lsr	r3, r3, #1
 2981 0052 FB61     		str	r3, [r7, #28]
 2982              	.L120:
 737:.\Modbus.c    ****     for(j=8; j!=0; j--){
 2983              		.loc 1 737 0
 2984 0054 7B69     		ldr	r3, [r7, #20]
 2985 0056 013B     		sub	r3, r3, #1
 2986 0058 7B61     		str	r3, [r7, #20]
 2987              	.L118:
 737:.\Modbus.c    ****     for(j=8; j!=0; j--){
 2988              		.loc 1 737 0 is_stmt 0 discriminator 1
 2989 005a 7B69     		ldr	r3, [r7, #20]
 2990 005c 002B     		cmp	r3, #0
 2991 005e EAD1     		bne	.L121
 735:.\Modbus.c    ****   for(i=0;i<messageLength-2;i++){
 2992              		.loc 1 735 0 is_stmt 1
 2993 0060 BB69     		ldr	r3, [r7, #24]
 2994 0062 0133     		add	r3, r3, #1
 2995 0064 BB61     		str	r3, [r7, #24]
 2996              	.L117:
 735:.\Modbus.c    ****   for(i=0;i<messageLength-2;i++){
 2997              		.loc 1 735 0 is_stmt 0 discriminator 1
 2998 0066 FB1D     		add	r3, r7, #7
 2999 0068 1B78     		ldrb	r3, [r3]
 3000 006a 9A1E     		sub	r2, r3, #2
 3001 006c BB69     		ldr	r3, [r7, #24]
 3002 006e 9A42     		cmp	r2, r3
 3003 0070 D7DC     		bgt	.L122
 744:.\Modbus.c    ****       }
 745:.\Modbus.c    ****     }
 746:.\Modbus.c    ****   }
 747:.\Modbus.c    **** //bytes are wrong way round so doing a swap here..
 748:.\Modbus.c    **** crcHigh = (crc & 0x00FF) <<8;
 3004              		.loc 1 748 0 is_stmt 1
 3005 0072 FB69     		ldr	r3, [r7, #28]
 3006 0074 1B02     		lsl	r3, r3, #8
 3007 0076 1B04     		lsl	r3, r3, #16
 3008 0078 1B0C     		lsr	r3, r3, #16
 3009 007a 3B61     		str	r3, [r7, #16]
 749:.\Modbus.c    **** crcLow = (crc & 0xFF00) >>8;
 3010              		.loc 1 749 0
 3011 007c FA69     		ldr	r2, [r7, #28]
 3012 007e FF23     		mov	r3, #255
 3013 0080 1B02     		lsl	r3, r3, #8
 3014 0082 1340     		and	r3, r2
 3015 0084 1B0A     		lsr	r3, r3, #8
 3016 0086 FB60     		str	r3, [r7, #12]
 750:.\Modbus.c    **** crcHigh |= crcLow;
 3017              		.loc 1 750 0
 3018 0088 3A69     		ldr	r2, [r7, #16]
 3019 008a FB68     		ldr	r3, [r7, #12]
 3020 008c 1343     		orr	r3, r2
 3021 008e 3B61     		str	r3, [r7, #16]
 751:.\Modbus.c    **** crc = crcHigh;
 3022              		.loc 1 751 0
 3023 0090 3B69     		ldr	r3, [r7, #16]
 3024 0092 FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 68


 752:.\Modbus.c    **** return crc;
 3025              		.loc 1 752 0
 3026 0094 FB69     		ldr	r3, [r7, #28]
 753:.\Modbus.c    **** }
 3027              		.loc 1 753 0
 3028 0096 181C     		mov	r0, r3
 3029 0098 BD46     		mov	sp, r7
 3030 009a 08B0     		add	sp, sp, #32
 3031              		@ sp needed
 3032 009c 80BD     		pop	{r7, pc}
 3033              	.L125:
 3034 009e C046     		.align	2
 3035              	.L124:
 3036 00a0 FFFF0000 		.word	65535
 3037 00a4 00000000 		.word	response
 3038 00a8 01A00000 		.word	40961
 3039              		.cfi_endproc
 3040              	.LFE44:
 3041              		.size	generateCRC, .-generateCRC
 3042              		.section	.text.checkCRC,"ax",%progbits
 3043              		.align	2
 3044              		.global	checkCRC
 3045              		.code	16
 3046              		.thumb_func
 3047              		.type	checkCRC, %function
 3048              	checkCRC:
 3049              	.LFB45:
 754:.\Modbus.c    **** 
 755:.\Modbus.c    **** unsigned char checkCRC(void)
 756:.\Modbus.c    **** {
 3050              		.loc 1 756 0
 3051              		.cfi_startproc
 3052 0000 80B5     		push	{r7, lr}
 3053              		.cfi_def_cfa_offset 8
 3054              		.cfi_offset 7, -8
 3055              		.cfi_offset 14, -4
 3056 0002 86B0     		sub	sp, sp, #24
 3057              		.cfi_def_cfa_offset 32
 3058 0004 00AF     		add	r7, sp, #0
 3059              		.cfi_def_cfa_register 7
 757:.\Modbus.c    ****   unsigned int crc = 0xFFFF;
 3060              		.loc 1 757 0
 3061 0006 2A4B     		ldr	r3, .L135
 3062 0008 7B61     		str	r3, [r7, #20]
 758:.\Modbus.c    ****   unsigned int crcHigh = 0;
 3063              		.loc 1 758 0
 3064 000a 0023     		mov	r3, #0
 3065 000c BB60     		str	r3, [r7, #8]
 759:.\Modbus.c    ****   unsigned int crcLow = 0;
 3066              		.loc 1 759 0
 3067 000e 0023     		mov	r3, #0
 3068 0010 7B60     		str	r3, [r7, #4]
 760:.\Modbus.c    ****   int i,j = 0;
 3069              		.loc 1 760 0
 3070 0012 0023     		mov	r3, #0
 3071 0014 FB60     		str	r3, [r7, #12]
 761:.\Modbus.c    **** 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 69


 762:.\Modbus.c    ****     for(i=0;i<messageLength-2;i++){
 3072              		.loc 1 762 0
 3073 0016 0023     		mov	r3, #0
 3074 0018 3B61     		str	r3, [r7, #16]
 3075 001a 21E0     		b	.L127
 3076              	.L132:
 763:.\Modbus.c    ****       crc ^= received[i];
 3077              		.loc 1 763 0
 3078 001c 254A     		ldr	r2, .L135+4
 3079 001e 3B69     		ldr	r3, [r7, #16]
 3080 0020 D318     		add	r3, r2, r3
 3081 0022 1B78     		ldrb	r3, [r3]
 3082 0024 7A69     		ldr	r2, [r7, #20]
 3083 0026 5340     		eor	r3, r2
 3084 0028 7B61     		str	r3, [r7, #20]
 764:.\Modbus.c    ****       for(j=8; j!=0; j--){
 3085              		.loc 1 764 0
 3086 002a 0823     		mov	r3, #8
 3087 002c FB60     		str	r3, [r7, #12]
 3088 002e 11E0     		b	.L128
 3089              	.L131:
 765:.\Modbus.c    ****         if((crc & 0x0001) != 0){
 3090              		.loc 1 765 0
 3091 0030 7A69     		ldr	r2, [r7, #20]
 3092 0032 0123     		mov	r3, #1
 3093 0034 1340     		and	r3, r2
 3094 0036 07D0     		beq	.L129
 766:.\Modbus.c    ****           crc >>= 1;
 3095              		.loc 1 766 0
 3096 0038 7B69     		ldr	r3, [r7, #20]
 3097 003a 5B08     		lsr	r3, r3, #1
 3098 003c 7B61     		str	r3, [r7, #20]
 767:.\Modbus.c    ****           crc ^= 0xA001;
 3099              		.loc 1 767 0
 3100 003e 7B69     		ldr	r3, [r7, #20]
 3101 0040 1D4A     		ldr	r2, .L135+8
 3102 0042 5340     		eor	r3, r2
 3103 0044 7B61     		str	r3, [r7, #20]
 3104 0046 02E0     		b	.L130
 3105              	.L129:
 768:.\Modbus.c    ****         }
 769:.\Modbus.c    ****         else{
 770:.\Modbus.c    ****           crc >>= 1;
 3106              		.loc 1 770 0
 3107 0048 7B69     		ldr	r3, [r7, #20]
 3108 004a 5B08     		lsr	r3, r3, #1
 3109 004c 7B61     		str	r3, [r7, #20]
 3110              	.L130:
 764:.\Modbus.c    ****       for(j=8; j!=0; j--){
 3111              		.loc 1 764 0
 3112 004e FB68     		ldr	r3, [r7, #12]
 3113 0050 013B     		sub	r3, r3, #1
 3114 0052 FB60     		str	r3, [r7, #12]
 3115              	.L128:
 764:.\Modbus.c    ****       for(j=8; j!=0; j--){
 3116              		.loc 1 764 0 is_stmt 0 discriminator 1
 3117 0054 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 70


 3118 0056 002B     		cmp	r3, #0
 3119 0058 EAD1     		bne	.L131
 762:.\Modbus.c    ****     for(i=0;i<messageLength-2;i++){
 3120              		.loc 1 762 0 is_stmt 1
 3121 005a 3B69     		ldr	r3, [r7, #16]
 3122 005c 0133     		add	r3, r3, #1
 3123 005e 3B61     		str	r3, [r7, #16]
 3124              	.L127:
 762:.\Modbus.c    ****     for(i=0;i<messageLength-2;i++){
 3125              		.loc 1 762 0 is_stmt 0 discriminator 1
 3126 0060 164B     		ldr	r3, .L135+12
 3127 0062 1B78     		ldrb	r3, [r3]
 3128 0064 DBB2     		uxtb	r3, r3
 3129 0066 9A1E     		sub	r2, r3, #2
 3130 0068 3B69     		ldr	r3, [r7, #16]
 3131 006a 9A42     		cmp	r2, r3
 3132 006c D6DC     		bgt	.L132
 771:.\Modbus.c    ****         }
 772:.\Modbus.c    ****       }
 773:.\Modbus.c    ****     }
 774:.\Modbus.c    ****   //bytes are wrong way round so doing a swap here..
 775:.\Modbus.c    ****   crcHigh = (crc & 0x00FF);
 3133              		.loc 1 775 0 is_stmt 1
 3134 006e 7A69     		ldr	r2, [r7, #20]
 3135 0070 FF23     		mov	r3, #255
 3136 0072 1340     		and	r3, r2
 3137 0074 BB60     		str	r3, [r7, #8]
 776:.\Modbus.c    ****   crcLow = (crc & 0xFF00) >>8;
 3138              		.loc 1 776 0
 3139 0076 7A69     		ldr	r2, [r7, #20]
 3140 0078 FF23     		mov	r3, #255
 3141 007a 1B02     		lsl	r3, r3, #8
 3142 007c 1340     		and	r3, r2
 3143 007e 1B0A     		lsr	r3, r3, #8
 3144 0080 7B60     		str	r3, [r7, #4]
 777:.\Modbus.c    ****   if((crcHigh == received[i])&&(crcLow == received[i+1]))
 3145              		.loc 1 777 0
 3146 0082 0C4A     		ldr	r2, .L135+4
 3147 0084 3B69     		ldr	r3, [r7, #16]
 3148 0086 D318     		add	r3, r2, r3
 3149 0088 1B78     		ldrb	r3, [r3]
 3150 008a 1A1C     		mov	r2, r3
 3151 008c BB68     		ldr	r3, [r7, #8]
 3152 008e 9A42     		cmp	r2, r3
 3153 0090 09D1     		bne	.L133
 3154              		.loc 1 777 0 is_stmt 0 discriminator 1
 3155 0092 3B69     		ldr	r3, [r7, #16]
 3156 0094 0133     		add	r3, r3, #1
 3157 0096 074A     		ldr	r2, .L135+4
 3158 0098 D35C     		ldrb	r3, [r2, r3]
 3159 009a 1A1C     		mov	r2, r3
 3160 009c 7B68     		ldr	r3, [r7, #4]
 3161 009e 9A42     		cmp	r2, r3
 3162 00a0 01D1     		bne	.L133
 778:.\Modbus.c    ****   {
 779:.\Modbus.c    ****     return 1;
 3163              		.loc 1 779 0 is_stmt 1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 71


 3164 00a2 0123     		mov	r3, #1
 3165 00a4 00E0     		b	.L134
 3166              	.L133:
 780:.\Modbus.c    ****   }
 781:.\Modbus.c    ****   else{
 782:.\Modbus.c    ****     return 0;
 3167              		.loc 1 782 0
 3168 00a6 0023     		mov	r3, #0
 3169              	.L134:
 783:.\Modbus.c    ****   }
 784:.\Modbus.c    **** 
 785:.\Modbus.c    **** 
 786:.\Modbus.c    **** }
 3170              		.loc 1 786 0
 3171 00a8 181C     		mov	r0, r3
 3172 00aa BD46     		mov	sp, r7
 3173 00ac 06B0     		add	sp, sp, #24
 3174              		@ sp needed
 3175 00ae 80BD     		pop	{r7, pc}
 3176              	.L136:
 3177              		.align	2
 3178              	.L135:
 3179 00b0 FFFF0000 		.word	65535
 3180 00b4 00000000 		.word	received
 3181 00b8 01A00000 		.word	40961
 3182 00bc 00000000 		.word	messageLength
 3183              		.cfi_endproc
 3184              	.LFE45:
 3185              		.size	checkCRC, .-checkCRC
 3186              		.section	.text.responseFinished,"ax",%progbits
 3187              		.align	2
 3188              		.global	responseFinished
 3189              		.code	16
 3190              		.thumb_func
 3191              		.type	responseFinished, %function
 3192              	responseFinished:
 3193              	.LFB46:
 787:.\Modbus.c    **** 
 788:.\Modbus.c    **** void responseFinished(int delay)
 789:.\Modbus.c    **** {
 3194              		.loc 1 789 0
 3195              		.cfi_startproc
 3196 0000 80B5     		push	{r7, lr}
 3197              		.cfi_def_cfa_offset 8
 3198              		.cfi_offset 7, -8
 3199              		.cfi_offset 14, -4
 3200 0002 82B0     		sub	sp, sp, #8
 3201              		.cfi_def_cfa_offset 16
 3202 0004 00AF     		add	r7, sp, #0
 3203              		.cfi_def_cfa_register 7
 3204 0006 7860     		str	r0, [r7, #4]
 790:.\Modbus.c    ****     //delay = 833*delay;
 791:.\Modbus.c    ****     //CyDelayUs(delay);
 792:.\Modbus.c    ****     //writeEnable_Write(0); //turn line back to normal
 793:.\Modbus.c    ****     //delay = delay;
 794:.\Modbus.c    ****     memset(&response[0], 0, sizeof(response)); //clear response
 3205              		.loc 1 794 0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 72


 3206 0008 0A4B     		ldr	r3, .L138
 3207 000a 181C     		mov	r0, r3
 3208 000c 0021     		mov	r1, #0
 3209 000e 7D22     		mov	r2, #125
 3210 0010 FFF7FEFF 		bl	memset
 795:.\Modbus.c    ****     turnLineAround = delay+11;
 3211              		.loc 1 795 0
 3212 0014 7B68     		ldr	r3, [r7, #4]
 3213 0016 DBB2     		uxtb	r3, r3
 3214 0018 0B33     		add	r3, r3, #11
 3215 001a DAB2     		uxtb	r2, r3
 3216 001c 064B     		ldr	r3, .L138+4
 3217 001e 1A70     		strb	r2, [r3]
 796:.\Modbus.c    ****     MessageTimer_Start(); //start timer to go off, 833uS * amount of bytes and turn line back aroun
 3218              		.loc 1 796 0
 3219 0020 FFF7FEFF 		bl	MessageTimer_Start
 797:.\Modbus.c    ****     //the timer shouldn't be needed but the UART seems to not be operating synchronously.
 798:.\Modbus.c    ****     EndOfMessage_StartEx(endOfMessage_isr); 
 3220              		.loc 1 798 0
 3221 0024 054B     		ldr	r3, .L138+8
 3222 0026 181C     		mov	r0, r3
 3223 0028 FFF7FEFF 		bl	EndOfMessage_StartEx
 799:.\Modbus.c    **** }...
 3224              		.loc 1 799 0
 3225 002c BD46     		mov	sp, r7
 3226 002e 02B0     		add	sp, sp, #8
 3227              		@ sp needed
 3228 0030 80BD     		pop	{r7, pc}
 3229              	.L139:
 3230 0032 C046     		.align	2
 3231              	.L138:
 3232 0034 00000000 		.word	response
 3233 0038 00000000 		.word	turnLineAround
 3234 003c 00000000 		.word	endOfMessage_isr
 3235              		.cfi_endproc
 3236              	.LFE46:
 3237              		.size	responseFinished, .-responseFinished
 3238              		.text
 3239              	.Letext0:
 3240              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 3241              		.section	.debug_info,"",%progbits
 3242              	.Ldebug_info0:
 3243 0000 BB070000 		.4byte	0x7bb
 3244 0004 0400     		.2byte	0x4
 3245 0006 00000000 		.4byte	.Ldebug_abbrev0
 3246 000a 04       		.byte	0x4
 3247 000b 01       		.uleb128 0x1
 3248 000c 59010000 		.4byte	.LASF80
 3249 0010 01       		.byte	0x1
 3250 0011 EA020000 		.4byte	.LASF81
 3251 0015 11000000 		.4byte	.LASF82
 3252 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3253 001d 00000000 		.4byte	0
 3254 0021 00000000 		.4byte	.Ldebug_line0
 3255 0025 02       		.uleb128 0x2
 3256 0026 01       		.byte	0x1
 3257 0027 06       		.byte	0x6
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 73


 3258 0028 A7020000 		.4byte	.LASF0
 3259 002c 02       		.uleb128 0x2
 3260 002d 01       		.byte	0x1
 3261 002e 08       		.byte	0x8
 3262 002f 99020000 		.4byte	.LASF1
 3263 0033 02       		.uleb128 0x2
 3264 0034 02       		.byte	0x2
 3265 0035 05       		.byte	0x5
 3266 0036 95000000 		.4byte	.LASF2
 3267 003a 02       		.uleb128 0x2
 3268 003b 02       		.byte	0x2
 3269 003c 07       		.byte	0x7
 3270 003d 01030000 		.4byte	.LASF3
 3271 0041 02       		.uleb128 0x2
 3272 0042 04       		.byte	0x4
 3273 0043 05       		.byte	0x5
 3274 0044 34020000 		.4byte	.LASF4
 3275 0048 02       		.uleb128 0x2
 3276 0049 04       		.byte	0x4
 3277 004a 07       		.byte	0x7
 3278 004b 7B030000 		.4byte	.LASF5
 3279 004f 02       		.uleb128 0x2
 3280 0050 08       		.byte	0x8
 3281 0051 05       		.byte	0x5
 3282 0052 F8010000 		.4byte	.LASF6
 3283 0056 02       		.uleb128 0x2
 3284 0057 08       		.byte	0x8
 3285 0058 07       		.byte	0x7
 3286 0059 B3020000 		.4byte	.LASF7
 3287 005d 03       		.uleb128 0x3
 3288 005e 04       		.byte	0x4
 3289 005f 05       		.byte	0x5
 3290 0060 696E7400 		.ascii	"int\000"
 3291 0064 02       		.uleb128 0x2
 3292 0065 04       		.byte	0x4
 3293 0066 07       		.byte	0x7
 3294 0067 DD020000 		.4byte	.LASF8
 3295 006b 04       		.uleb128 0x4
 3296 006c 23010000 		.4byte	.LASF9
 3297 0070 02       		.byte	0x2
 3298 0071 A1       		.byte	0xa1
 3299 0072 2C000000 		.4byte	0x2c
 3300 0076 04       		.uleb128 0x4
 3301 0077 74030000 		.4byte	.LASF10
 3302 007b 02       		.byte	0x2
 3303 007c A3       		.byte	0xa3
 3304 007d 48000000 		.4byte	0x48
 3305 0081 02       		.uleb128 0x2
 3306 0082 04       		.byte	0x4
 3307 0083 04       		.byte	0x4
 3308 0084 E1010000 		.4byte	.LASF11
 3309 0088 02       		.uleb128 0x2
 3310 0089 08       		.byte	0x8
 3311 008a 04       		.byte	0x4
 3312 008b 8D030000 		.4byte	.LASF12
 3313 008f 02       		.uleb128 0x2
 3314 0090 01       		.byte	0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 74


 3315 0091 08       		.byte	0x8
 3316 0092 37030000 		.4byte	.LASF13
 3317 0096 05       		.uleb128 0x5
 3318 0097 6B000000 		.4byte	0x6b
 3319 009b 02       		.uleb128 0x2
 3320 009c 04       		.byte	0x4
 3321 009d 07       		.byte	0x7
 3322 009e AE000000 		.4byte	.LASF14
 3323 00a2 06       		.uleb128 0x6
 3324 00a3 E0040000 		.4byte	.LASF15
 3325 00a7 01       		.byte	0x1
 3326 00a8 28       		.byte	0x28
 3327 00a9 00000000 		.4byte	.LFB33
 3328 00ad D8000000 		.4byte	.LFE33-.LFB33
 3329 00b1 01       		.uleb128 0x1
 3330 00b2 9C       		.byte	0x9c
 3331 00b3 06       		.uleb128 0x6
 3332 00b4 A0040000 		.4byte	.LASF16
 3333 00b8 01       		.byte	0x1
 3334 00b9 42       		.byte	0x42
 3335 00ba 00000000 		.4byte	.LFB34
 3336 00be FC000000 		.4byte	.LFE34-.LFB34
 3337 00c2 01       		.uleb128 0x1
 3338 00c3 9C       		.byte	0x9c
 3339 00c4 06       		.uleb128 0x6
 3340 00c5 3D020000 		.4byte	.LASF17
 3341 00c9 01       		.byte	0x1
 3342 00ca 72       		.byte	0x72
 3343 00cb 00000000 		.4byte	.LFB35
 3344 00cf 98000000 		.4byte	.LFE35-.LFB35
 3345 00d3 01       		.uleb128 0x1
 3346 00d4 9C       		.byte	0x9c
 3347 00d5 07       		.uleb128 0x7
 3348 00d6 D4020000 		.4byte	.LASF22
 3349 00da 01       		.byte	0x1
 3350 00db 96       		.byte	0x96
 3351 00dc 00000000 		.4byte	.LFB36
 3352 00e0 98020000 		.4byte	.LFE36-.LFB36
 3353 00e4 01       		.uleb128 0x1
 3354 00e5 9C       		.byte	0x9c
 3355 00e6 6F010000 		.4byte	0x16f
 3356 00ea 08       		.uleb128 0x8
 3357 00eb 47040000 		.4byte	.LASF18
 3358 00ef 01       		.byte	0x1
 3359 00f0 9B       		.byte	0x9b
 3360 00f1 64000000 		.4byte	0x64
 3361 00f5 02       		.uleb128 0x2
 3362 00f6 91       		.byte	0x91
 3363 00f7 64       		.sleb128 -28
 3364 00f8 08       		.uleb128 0x8
 3365 00f9 17010000 		.4byte	.LASF19
 3366 00fd 01       		.byte	0x1
 3367 00fe 9C       		.byte	0x9c
 3368 00ff 64000000 		.4byte	0x64
 3369 0103 02       		.uleb128 0x2
 3370 0104 91       		.byte	0x91
 3371 0105 60       		.sleb128 -32
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 75


 3372 0106 09       		.uleb128 0x9
 3373 0107 63726300 		.ascii	"crc\000"
 3374 010b 01       		.byte	0x1
 3375 010c 9D       		.byte	0x9d
 3376 010d 64000000 		.4byte	0x64
 3377 0111 02       		.uleb128 0x2
 3378 0112 91       		.byte	0x91
 3379 0113 5C       		.sleb128 -36
 3380 0114 08       		.uleb128 0x8
 3381 0115 2F040000 		.4byte	.LASF20
 3382 0119 01       		.byte	0x1
 3383 011a 9F       		.byte	0x9f
 3384 011b 2C000000 		.4byte	0x2c
 3385 011f 02       		.uleb128 0x2
 3386 0120 91       		.byte	0x91
 3387 0121 6F       		.sleb128 -17
 3388 0122 08       		.uleb128 0x8
 3389 0123 7C000000 		.4byte	.LASF21
 3390 0127 01       		.byte	0x1
 3391 0128 A0       		.byte	0xa0
 3392 0129 2C000000 		.4byte	0x2c
 3393 012d 02       		.uleb128 0x2
 3394 012e 91       		.byte	0x91
 3395 012f 5B       		.sleb128 -37
 3396 0130 09       		.uleb128 0x9
 3397 0131 6C736200 		.ascii	"lsb\000"
 3398 0135 01       		.byte	0x1
 3399 0136 A1       		.byte	0xa1
 3400 0137 2C000000 		.4byte	0x2c
 3401 013b 02       		.uleb128 0x2
 3402 013c 91       		.byte	0x91
 3403 013d 6E       		.sleb128 -18
 3404 013e 09       		.uleb128 0x9
 3405 013f 6900     		.ascii	"i\000"
 3406 0141 01       		.byte	0x1
 3407 0142 A2       		.byte	0xa2
 3408 0143 2C000000 		.4byte	0x2c
 3409 0147 02       		.uleb128 0x2
 3410 0148 91       		.byte	0x91
 3411 0149 6D       		.sleb128 -19
 3412 014a 09       		.uleb128 0x9
 3413 014b 6A00     		.ascii	"j\000"
 3414 014d 01       		.byte	0x1
 3415 014e A2       		.byte	0xa2
 3416 014f 2C000000 		.4byte	0x2c
 3417 0153 02       		.uleb128 0x2
 3418 0154 91       		.byte	0x91
 3419 0155 6C       		.sleb128 -20
 3420 0156 09       		.uleb128 0x9
 3421 0157 6B00     		.ascii	"k\000"
 3422 0159 01       		.byte	0x1
 3423 015a A2       		.byte	0xa2
 3424 015b 2C000000 		.4byte	0x2c
 3425 015f 02       		.uleb128 0x2
 3426 0160 91       		.byte	0x91
 3427 0161 6B       		.sleb128 -21
 3428 0162 09       		.uleb128 0x9
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 76


 3429 0163 6C00     		.ascii	"l\000"
 3430 0165 01       		.byte	0x1
 3431 0166 A2       		.byte	0xa2
 3432 0167 2C000000 		.4byte	0x2c
 3433 016b 02       		.uleb128 0x2
 3434 016c 91       		.byte	0x91
 3435 016d 6A       		.sleb128 -22
 3436 016e 00       		.byte	0
 3437 016f 07       		.uleb128 0x7
 3438 0170 15040000 		.4byte	.LASF23
 3439 0174 01       		.byte	0x1
 3440 0175 E5       		.byte	0xe5
 3441 0176 00000000 		.4byte	.LFB37
 3442 017a 98020000 		.4byte	.LFE37-.LFB37
 3443 017e 01       		.uleb128 0x1
 3444 017f 9C       		.byte	0x9c
 3445 0180 09020000 		.4byte	0x209
 3446 0184 08       		.uleb128 0x8
 3447 0185 47040000 		.4byte	.LASF18
 3448 0189 01       		.byte	0x1
 3449 018a EA       		.byte	0xea
 3450 018b 64000000 		.4byte	0x64
 3451 018f 02       		.uleb128 0x2
 3452 0190 91       		.byte	0x91
 3453 0191 64       		.sleb128 -28
 3454 0192 08       		.uleb128 0x8
 3455 0193 17010000 		.4byte	.LASF19
 3456 0197 01       		.byte	0x1
 3457 0198 EB       		.byte	0xeb
 3458 0199 64000000 		.4byte	0x64
 3459 019d 02       		.uleb128 0x2
 3460 019e 91       		.byte	0x91
 3461 019f 60       		.sleb128 -32
 3462 01a0 09       		.uleb128 0x9
 3463 01a1 63726300 		.ascii	"crc\000"
 3464 01a5 01       		.byte	0x1
 3465 01a6 EC       		.byte	0xec
 3466 01a7 64000000 		.4byte	0x64
 3467 01ab 02       		.uleb128 0x2
 3468 01ac 91       		.byte	0x91
 3469 01ad 5C       		.sleb128 -36
 3470 01ae 08       		.uleb128 0x8
 3471 01af 2F040000 		.4byte	.LASF20
 3472 01b3 01       		.byte	0x1
 3473 01b4 EE       		.byte	0xee
 3474 01b5 2C000000 		.4byte	0x2c
 3475 01b9 02       		.uleb128 0x2
 3476 01ba 91       		.byte	0x91
 3477 01bb 6F       		.sleb128 -17
 3478 01bc 08       		.uleb128 0x8
 3479 01bd 7C000000 		.4byte	.LASF21
 3480 01c1 01       		.byte	0x1
 3481 01c2 EF       		.byte	0xef
 3482 01c3 2C000000 		.4byte	0x2c
 3483 01c7 02       		.uleb128 0x2
 3484 01c8 91       		.byte	0x91
 3485 01c9 5B       		.sleb128 -37
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 77


 3486 01ca 09       		.uleb128 0x9
 3487 01cb 6C736200 		.ascii	"lsb\000"
 3488 01cf 01       		.byte	0x1
 3489 01d0 F0       		.byte	0xf0
 3490 01d1 2C000000 		.4byte	0x2c
 3491 01d5 02       		.uleb128 0x2
 3492 01d6 91       		.byte	0x91
 3493 01d7 6E       		.sleb128 -18
 3494 01d8 09       		.uleb128 0x9
 3495 01d9 6900     		.ascii	"i\000"
 3496 01db 01       		.byte	0x1
 3497 01dc F1       		.byte	0xf1
 3498 01dd 2C000000 		.4byte	0x2c
 3499 01e1 02       		.uleb128 0x2
 3500 01e2 91       		.byte	0x91
 3501 01e3 6D       		.sleb128 -19
 3502 01e4 09       		.uleb128 0x9
 3503 01e5 6A00     		.ascii	"j\000"
 3504 01e7 01       		.byte	0x1
 3505 01e8 F1       		.byte	0xf1
 3506 01e9 2C000000 		.4byte	0x2c
 3507 01ed 02       		.uleb128 0x2
 3508 01ee 91       		.byte	0x91
 3509 01ef 6C       		.sleb128 -20
 3510 01f0 09       		.uleb128 0x9
 3511 01f1 6B00     		.ascii	"k\000"
 3512 01f3 01       		.byte	0x1
 3513 01f4 F1       		.byte	0xf1
 3514 01f5 2C000000 		.4byte	0x2c
 3515 01f9 02       		.uleb128 0x2
 3516 01fa 91       		.byte	0x91
 3517 01fb 6B       		.sleb128 -21
 3518 01fc 09       		.uleb128 0x9
 3519 01fd 6C00     		.ascii	"l\000"
 3520 01ff 01       		.byte	0x1
 3521 0200 F1       		.byte	0xf1
 3522 0201 2C000000 		.4byte	0x2c
 3523 0205 02       		.uleb128 0x2
 3524 0206 91       		.byte	0x91
 3525 0207 6A       		.sleb128 -22
 3526 0208 00       		.byte	0
 3527 0209 0A       		.uleb128 0xa
 3528 020a 93040000 		.4byte	.LASF24
 3529 020e 01       		.byte	0x1
 3530 020f 3501     		.2byte	0x135
 3531 0211 00000000 		.4byte	.LFB38
 3532 0215 A8010000 		.4byte	.LFE38-.LFB38
 3533 0219 01       		.uleb128 0x1
 3534 021a 9C       		.byte	0x9c
 3535 021b 67020000 		.4byte	0x267
 3536 021f 0B       		.uleb128 0xb
 3537 0220 5E020000 		.4byte	.LASF25
 3538 0224 01       		.byte	0x1
 3539 0225 3701     		.2byte	0x137
 3540 0227 64000000 		.4byte	0x64
 3541 022b 02       		.uleb128 0x2
 3542 022c 91       		.byte	0x91
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 78


 3543 022d 6C       		.sleb128 -20
 3544 022e 0B       		.uleb128 0xb
 3545 022f 3C040000 		.4byte	.LASF26
 3546 0233 01       		.byte	0x1
 3547 0234 3801     		.2byte	0x138
 3548 0236 64000000 		.4byte	0x64
 3549 023a 02       		.uleb128 0x2
 3550 023b 91       		.byte	0x91
 3551 023c 68       		.sleb128 -24
 3552 023d 0C       		.uleb128 0xc
 3553 023e 6A00     		.ascii	"j\000"
 3554 0240 01       		.byte	0x1
 3555 0241 3901     		.2byte	0x139
 3556 0243 2C000000 		.4byte	0x2c
 3557 0247 02       		.uleb128 0x2
 3558 0248 91       		.byte	0x91
 3559 0249 77       		.sleb128 -9
 3560 024a 0C       		.uleb128 0xc
 3561 024b 63726300 		.ascii	"crc\000"
 3562 024f 01       		.byte	0x1
 3563 0250 3A01     		.2byte	0x13a
 3564 0252 64000000 		.4byte	0x64
 3565 0256 02       		.uleb128 0x2
 3566 0257 91       		.byte	0x91
 3567 0258 64       		.sleb128 -28
 3568 0259 0C       		.uleb128 0xc
 3569 025a 6900     		.ascii	"i\000"
 3570 025c 01       		.byte	0x1
 3571 025d 3B01     		.2byte	0x13b
 3572 025f 64000000 		.4byte	0x64
 3573 0263 02       		.uleb128 0x2
 3574 0264 91       		.byte	0x91
 3575 0265 70       		.sleb128 -16
 3576 0266 00       		.byte	0
 3577 0267 0A       		.uleb128 0xa
 3578 0268 D8040000 		.4byte	.LASF27
 3579 026c 01       		.byte	0x1
 3580 026d 6B01     		.2byte	0x16b
 3581 026f 00000000 		.4byte	.LFB39
 3582 0273 AC010000 		.4byte	.LFE39-.LFB39
 3583 0277 01       		.uleb128 0x1
 3584 0278 9C       		.byte	0x9c
 3585 0279 C5020000 		.4byte	0x2c5
 3586 027d 0B       		.uleb128 0xb
 3587 027e 5E020000 		.4byte	.LASF25
 3588 0282 01       		.byte	0x1
 3589 0283 6D01     		.2byte	0x16d
 3590 0285 64000000 		.4byte	0x64
 3591 0289 02       		.uleb128 0x2
 3592 028a 91       		.byte	0x91
 3593 028b 6C       		.sleb128 -20
 3594 028c 0B       		.uleb128 0xb
 3595 028d 3C040000 		.4byte	.LASF26
 3596 0291 01       		.byte	0x1
 3597 0292 6E01     		.2byte	0x16e
 3598 0294 64000000 		.4byte	0x64
 3599 0298 02       		.uleb128 0x2
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 79


 3600 0299 91       		.byte	0x91
 3601 029a 68       		.sleb128 -24
 3602 029b 0C       		.uleb128 0xc
 3603 029c 6A00     		.ascii	"j\000"
 3604 029e 01       		.byte	0x1
 3605 029f 6F01     		.2byte	0x16f
 3606 02a1 2C000000 		.4byte	0x2c
 3607 02a5 02       		.uleb128 0x2
 3608 02a6 91       		.byte	0x91
 3609 02a7 77       		.sleb128 -9
 3610 02a8 0C       		.uleb128 0xc
 3611 02a9 63726300 		.ascii	"crc\000"
 3612 02ad 01       		.byte	0x1
 3613 02ae 7001     		.2byte	0x170
 3614 02b0 64000000 		.4byte	0x64
 3615 02b4 02       		.uleb128 0x2
 3616 02b5 91       		.byte	0x91
 3617 02b6 64       		.sleb128 -28
 3618 02b7 0C       		.uleb128 0xc
 3619 02b8 6900     		.ascii	"i\000"
 3620 02ba 01       		.byte	0x1
 3621 02bb 7101     		.2byte	0x171
 3622 02bd 64000000 		.4byte	0x64
 3623 02c1 02       		.uleb128 0x2
 3624 02c2 91       		.byte	0x91
 3625 02c3 70       		.sleb128 -16
 3626 02c4 00       		.byte	0
 3627 02c5 0A       		.uleb128 0xa
 3628 02c6 8A040000 		.4byte	.LASF28
 3629 02ca 01       		.byte	0x1
 3630 02cb 9F01     		.2byte	0x19f
 3631 02cd 00000000 		.4byte	.LFB40
 3632 02d1 00010000 		.4byte	.LFE40-.LFB40
 3633 02d5 01       		.uleb128 0x1
 3634 02d6 9C       		.byte	0x9c
 3635 02d7 52030000 		.4byte	0x352
 3636 02db 0B       		.uleb128 0xb
 3637 02dc 37010000 		.4byte	.LASF29
 3638 02e0 01       		.byte	0x1
 3639 02e1 A401     		.2byte	0x1a4
 3640 02e3 64000000 		.4byte	0x64
 3641 02e7 02       		.uleb128 0x2
 3642 02e8 91       		.byte	0x91
 3643 02e9 70       		.sleb128 -16
 3644 02ea 0B       		.uleb128 0xb
 3645 02eb 25020000 		.4byte	.LASF30
 3646 02ef 01       		.byte	0x1
 3647 02f0 A501     		.2byte	0x1a5
 3648 02f2 64000000 		.4byte	0x64
 3649 02f6 02       		.uleb128 0x2
 3650 02f7 91       		.byte	0x91
 3651 02f8 6C       		.sleb128 -20
 3652 02f9 0B       		.uleb128 0xb
 3653 02fa 7B020000 		.4byte	.LASF31
 3654 02fe 01       		.byte	0x1
 3655 02ff A601     		.2byte	0x1a6
 3656 0301 64000000 		.4byte	0x64
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 80


 3657 0305 02       		.uleb128 0x2
 3658 0306 91       		.byte	0x91
 3659 0307 68       		.sleb128 -24
 3660 0308 0B       		.uleb128 0xb
 3661 0309 CB000000 		.4byte	.LASF32
 3662 030d 01       		.byte	0x1
 3663 030e A801     		.2byte	0x1a8
 3664 0310 64000000 		.4byte	0x64
 3665 0314 02       		.uleb128 0x2
 3666 0315 91       		.byte	0x91
 3667 0316 64       		.sleb128 -28
 3668 0317 0B       		.uleb128 0xb
 3669 0318 F4030000 		.4byte	.LASF33
 3670 031c 01       		.byte	0x1
 3671 031d A901     		.2byte	0x1a9
 3672 031f 64000000 		.4byte	0x64
 3673 0323 02       		.uleb128 0x2
 3674 0324 91       		.byte	0x91
 3675 0325 60       		.sleb128 -32
 3676 0326 0B       		.uleb128 0xb
 3677 0327 69020000 		.4byte	.LASF34
 3678 032b 01       		.byte	0x1
 3679 032c AA01     		.2byte	0x1aa
 3680 032e 64000000 		.4byte	0x64
 3681 0332 02       		.uleb128 0x2
 3682 0333 91       		.byte	0x91
 3683 0334 5C       		.sleb128 -36
 3684 0335 0C       		.uleb128 0xc
 3685 0336 63726300 		.ascii	"crc\000"
 3686 033a 01       		.byte	0x1
 3687 033b AC01     		.2byte	0x1ac
 3688 033d 64000000 		.4byte	0x64
 3689 0341 02       		.uleb128 0x2
 3690 0342 91       		.byte	0x91
 3691 0343 58       		.sleb128 -40
 3692 0344 0C       		.uleb128 0xc
 3693 0345 6900     		.ascii	"i\000"
 3694 0347 01       		.byte	0x1
 3695 0348 AD01     		.2byte	0x1ad
 3696 034a 64000000 		.4byte	0x64
 3697 034e 02       		.uleb128 0x2
 3698 034f 91       		.byte	0x91
 3699 0350 74       		.sleb128 -12
 3700 0351 00       		.byte	0
 3701 0352 0A       		.uleb128 0xa
 3702 0353 4C020000 		.4byte	.LASF35
 3703 0357 01       		.byte	0x1
 3704 0358 D801     		.2byte	0x1d8
 3705 035a 00000000 		.4byte	.LFB41
 3706 035e 84010000 		.4byte	.LFE41-.LFB41
 3707 0362 01       		.uleb128 0x1
 3708 0363 9C       		.byte	0x9c
 3709 0364 19040000 		.4byte	0x419
 3710 0368 0B       		.uleb128 0xb
 3711 0369 F5020000 		.4byte	.LASF36
 3712 036d 01       		.byte	0x1
 3713 036e DD01     		.2byte	0x1dd
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 81


 3714 0370 64000000 		.4byte	0x64
 3715 0374 02       		.uleb128 0x2
 3716 0375 91       		.byte	0x91
 3717 0376 6C       		.sleb128 -20
 3718 0377 0B       		.uleb128 0xb
 3719 0378 06020000 		.4byte	.LASF37
 3720 037c 01       		.byte	0x1
 3721 037d DE01     		.2byte	0x1de
 3722 037f 64000000 		.4byte	0x64
 3723 0383 02       		.uleb128 0x2
 3724 0384 91       		.byte	0x91
 3725 0385 68       		.sleb128 -24
 3726 0386 0B       		.uleb128 0xb
 3727 0387 08010000 		.4byte	.LASF38
 3728 038b 01       		.byte	0x1
 3729 038c DF01     		.2byte	0x1df
 3730 038e 64000000 		.4byte	0x64
 3731 0392 02       		.uleb128 0x2
 3732 0393 91       		.byte	0x91
 3733 0394 64       		.sleb128 -28
 3734 0395 0B       		.uleb128 0xb
 3735 0396 AB030000 		.4byte	.LASF39
 3736 039a 01       		.byte	0x1
 3737 039b E001     		.2byte	0x1e0
 3738 039d 64000000 		.4byte	0x64
 3739 03a1 02       		.uleb128 0x2
 3740 03a2 91       		.byte	0x91
 3741 03a3 60       		.sleb128 -32
 3742 03a4 0B       		.uleb128 0xb
 3743 03a5 64030000 		.4byte	.LASF40
 3744 03a9 01       		.byte	0x1
 3745 03aa E101     		.2byte	0x1e1
 3746 03ac 64000000 		.4byte	0x64
 3747 03b0 02       		.uleb128 0x2
 3748 03b1 91       		.byte	0x91
 3749 03b2 5C       		.sleb128 -36
 3750 03b3 0B       		.uleb128 0xb
 3751 03b4 6E040000 		.4byte	.LASF41
 3752 03b8 01       		.byte	0x1
 3753 03b9 E201     		.2byte	0x1e2
 3754 03bb 64000000 		.4byte	0x64
 3755 03bf 02       		.uleb128 0x2
 3756 03c0 91       		.byte	0x91
 3757 03c1 58       		.sleb128 -40
 3758 03c2 0B       		.uleb128 0xb
 3759 03c3 68000000 		.4byte	.LASF42
 3760 03c7 01       		.byte	0x1
 3761 03c8 E301     		.2byte	0x1e3
 3762 03ca 64000000 		.4byte	0x64
 3763 03ce 02       		.uleb128 0x2
 3764 03cf 91       		.byte	0x91
 3765 03d0 54       		.sleb128 -44
 3766 03d1 0B       		.uleb128 0xb
 3767 03d2 E9000000 		.4byte	.LASF43
 3768 03d6 01       		.byte	0x1
 3769 03d7 E401     		.2byte	0x1e4
 3770 03d9 64000000 		.4byte	0x64
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 82


 3771 03dd 02       		.uleb128 0x2
 3772 03de 91       		.byte	0x91
 3773 03df 50       		.sleb128 -48
 3774 03e0 0B       		.uleb128 0xb
 3775 03e1 D0030000 		.4byte	.LASF44
 3776 03e5 01       		.byte	0x1
 3777 03e6 E501     		.2byte	0x1e5
 3778 03e8 64000000 		.4byte	0x64
 3779 03ec 02       		.uleb128 0x2
 3780 03ed 91       		.byte	0x91
 3781 03ee 4C       		.sleb128 -52
 3782 03ef 0C       		.uleb128 0xc
 3783 03f0 6A00     		.ascii	"j\000"
 3784 03f2 01       		.byte	0x1
 3785 03f3 E901     		.2byte	0x1e9
 3786 03f5 2C000000 		.4byte	0x2c
 3787 03f9 02       		.uleb128 0x2
 3788 03fa 91       		.byte	0x91
 3789 03fb 77       		.sleb128 -9
 3790 03fc 0C       		.uleb128 0xc
 3791 03fd 63726300 		.ascii	"crc\000"
 3792 0401 01       		.byte	0x1
 3793 0402 EA01     		.2byte	0x1ea
 3794 0404 64000000 		.4byte	0x64
 3795 0408 02       		.uleb128 0x2
 3796 0409 91       		.byte	0x91
 3797 040a 48       		.sleb128 -56
 3798 040b 0C       		.uleb128 0xc
 3799 040c 6900     		.ascii	"i\000"
 3800 040e 01       		.byte	0x1
 3801 040f EB01     		.2byte	0x1eb
 3802 0411 64000000 		.4byte	0x64
 3803 0415 02       		.uleb128 0x2
 3804 0416 91       		.byte	0x91
 3805 0417 70       		.sleb128 -16
 3806 0418 00       		.byte	0
 3807 0419 0A       		.uleb128 0xa
 3808 041a CA020000 		.4byte	.LASF45
 3809 041e 01       		.byte	0x1
 3810 041f 3702     		.2byte	0x237
 3811 0421 00000000 		.4byte	.LFB42
 3812 0425 10010000 		.4byte	.LFE42-.LFB42
 3813 0429 01       		.uleb128 0x1
 3814 042a 9C       		.byte	0x9c
 3815 042b A6040000 		.4byte	0x4a6
 3816 042f 0B       		.uleb128 0xb
 3817 0430 29010000 		.4byte	.LASF46
 3818 0434 01       		.byte	0x1
 3819 0435 3C02     		.2byte	0x23c
 3820 0437 64000000 		.4byte	0x64
 3821 043b 02       		.uleb128 0x2
 3822 043c 91       		.byte	0x91
 3823 043d 70       		.sleb128 -16
 3824 043e 0B       		.uleb128 0xb
 3825 043f 16020000 		.4byte	.LASF47
 3826 0443 01       		.byte	0x1
 3827 0444 3D02     		.2byte	0x23d
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 83


 3828 0446 64000000 		.4byte	0x64
 3829 044a 02       		.uleb128 0x2
 3830 044b 91       		.byte	0x91
 3831 044c 6C       		.sleb128 -20
 3832 044d 0B       		.uleb128 0xb
 3833 044e 52040000 		.4byte	.LASF48
 3834 0452 01       		.byte	0x1
 3835 0453 3E02     		.2byte	0x23e
 3836 0455 64000000 		.4byte	0x64
 3837 0459 02       		.uleb128 0x2
 3838 045a 91       		.byte	0x91
 3839 045b 68       		.sleb128 -24
 3840 045c 0B       		.uleb128 0xb
 3841 045d BD000000 		.4byte	.LASF49
 3842 0461 01       		.byte	0x1
 3843 0462 4002     		.2byte	0x240
 3844 0464 64000000 		.4byte	0x64
 3845 0468 02       		.uleb128 0x2
 3846 0469 91       		.byte	0x91
 3847 046a 64       		.sleb128 -28
 3848 046b 0B       		.uleb128 0xb
 3849 046c 00000000 		.4byte	.LASF50
 3850 0470 01       		.byte	0x1
 3851 0471 4102     		.2byte	0x241
 3852 0473 64000000 		.4byte	0x64
 3853 0477 02       		.uleb128 0x2
 3854 0478 91       		.byte	0x91
 3855 0479 60       		.sleb128 -32
 3856 047a 0B       		.uleb128 0xb
 3857 047b 52030000 		.4byte	.LASF51
 3858 047f 01       		.byte	0x1
 3859 0480 4202     		.2byte	0x242
 3860 0482 64000000 		.4byte	0x64
 3861 0486 02       		.uleb128 0x2
 3862 0487 91       		.byte	0x91
 3863 0488 5C       		.sleb128 -36
 3864 0489 0C       		.uleb128 0xc
 3865 048a 6900     		.ascii	"i\000"
 3866 048c 01       		.byte	0x1
 3867 048d 4302     		.2byte	0x243
 3868 048f 5D000000 		.4byte	0x5d
 3869 0493 02       		.uleb128 0x2
 3870 0494 91       		.byte	0x91
 3871 0495 74       		.sleb128 -12
 3872 0496 0C       		.uleb128 0xc
 3873 0497 63726300 		.ascii	"crc\000"
 3874 049b 01       		.byte	0x1
 3875 049c 4402     		.2byte	0x244
 3876 049e 64000000 		.4byte	0x64
 3877 04a2 02       		.uleb128 0x2
 3878 04a3 91       		.byte	0x91
 3879 04a4 58       		.sleb128 -40
 3880 04a5 00       		.byte	0
 3881 04a6 0A       		.uleb128 0xa
 3882 04a7 86020000 		.4byte	.LASF52
 3883 04ab 01       		.byte	0x1
 3884 04ac 7402     		.2byte	0x274
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 84


 3885 04ae 00000000 		.4byte	.LFB43
 3886 04b2 64020000 		.4byte	.LFE43-.LFB43
 3887 04b6 01       		.uleb128 0x1
 3888 04b7 9C       		.byte	0x9c
 3889 04b8 87050000 		.4byte	0x587
 3890 04bc 0B       		.uleb128 0xb
 3891 04bd D5010000 		.4byte	.LASF53
 3892 04c1 01       		.byte	0x1
 3893 04c2 7902     		.2byte	0x279
 3894 04c4 64000000 		.4byte	0x64
 3895 04c8 02       		.uleb128 0x2
 3896 04c9 91       		.byte	0x91
 3897 04ca 6C       		.sleb128 -20
 3898 04cb 0B       		.uleb128 0xb
 3899 04cc 05040000 		.4byte	.LASF54
 3900 04d0 01       		.byte	0x1
 3901 04d1 7A02     		.2byte	0x27a
 3902 04d3 64000000 		.4byte	0x64
 3903 04d7 02       		.uleb128 0x2
 3904 04d8 91       		.byte	0x91
 3905 04d9 68       		.sleb128 -24
 3906 04da 0B       		.uleb128 0xb
 3907 04db F9000000 		.4byte	.LASF55
 3908 04df 01       		.byte	0x1
 3909 04e0 7B02     		.2byte	0x27b
 3910 04e2 64000000 		.4byte	0x64
 3911 04e6 02       		.uleb128 0x2
 3912 04e7 91       		.byte	0x91
 3913 04e8 64       		.sleb128 -28
 3914 04e9 0B       		.uleb128 0xb
 3915 04ea 7D040000 		.4byte	.LASF56
 3916 04ee 01       		.byte	0x1
 3917 04ef 7C02     		.2byte	0x27c
 3918 04f1 64000000 		.4byte	0x64
 3919 04f5 02       		.uleb128 0x2
 3920 04f6 91       		.byte	0x91
 3921 04f7 60       		.sleb128 -32
 3922 04f8 0B       		.uleb128 0xb
 3923 04f9 E7010000 		.4byte	.LASF57
 3924 04fd 01       		.byte	0x1
 3925 04fe 7D02     		.2byte	0x27d
 3926 0500 64000000 		.4byte	0x64
 3927 0504 02       		.uleb128 0x2
 3928 0505 91       		.byte	0x91
 3929 0506 5C       		.sleb128 -36
 3930 0507 0B       		.uleb128 0xb
 3931 0508 D9000000 		.4byte	.LASF58
 3932 050c 01       		.byte	0x1
 3933 050d 7E02     		.2byte	0x27e
 3934 050f 64000000 		.4byte	0x64
 3935 0513 02       		.uleb128 0x2
 3936 0514 91       		.byte	0x91
 3937 0515 58       		.sleb128 -40
 3938 0516 0C       		.uleb128 0xc
 3939 0517 63726300 		.ascii	"crc\000"
 3940 051b 01       		.byte	0x1
 3941 051c 8002     		.2byte	0x280
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 85


 3942 051e 64000000 		.4byte	0x64
 3943 0522 02       		.uleb128 0x2
 3944 0523 91       		.byte	0x91
 3945 0524 54       		.sleb128 -44
 3946 0525 0B       		.uleb128 0xb
 3947 0526 2F040000 		.4byte	.LASF20
 3948 052a 01       		.byte	0x1
 3949 052b 8202     		.2byte	0x282
 3950 052d 2C000000 		.4byte	0x2c
 3951 0531 02       		.uleb128 0x2
 3952 0532 91       		.byte	0x91
 3953 0533 77       		.sleb128 -9
 3954 0534 0B       		.uleb128 0xb
 3955 0535 7C000000 		.4byte	.LASF21
 3956 0539 01       		.byte	0x1
 3957 053a 8302     		.2byte	0x283
 3958 053c 2C000000 		.4byte	0x2c
 3959 0540 02       		.uleb128 0x2
 3960 0541 91       		.byte	0x91
 3961 0542 53       		.sleb128 -45
 3962 0543 0C       		.uleb128 0xc
 3963 0544 6900     		.ascii	"i\000"
 3964 0546 01       		.byte	0x1
 3965 0547 8502     		.2byte	0x285
 3966 0549 2C000000 		.4byte	0x2c
 3967 054d 02       		.uleb128 0x2
 3968 054e 91       		.byte	0x91
 3969 054f 76       		.sleb128 -10
 3970 0550 0C       		.uleb128 0xc
 3971 0551 6A00     		.ascii	"j\000"
 3972 0553 01       		.byte	0x1
 3973 0554 8502     		.2byte	0x285
 3974 0556 2C000000 		.4byte	0x2c
 3975 055a 02       		.uleb128 0x2
 3976 055b 91       		.byte	0x91
 3977 055c 75       		.sleb128 -11
 3978 055d 0C       		.uleb128 0xc
 3979 055e 6C00     		.ascii	"l\000"
 3980 0560 01       		.byte	0x1
 3981 0561 8502     		.2byte	0x285
 3982 0563 2C000000 		.4byte	0x2c
 3983 0567 02       		.uleb128 0x2
 3984 0568 91       		.byte	0x91
 3985 0569 74       		.sleb128 -12
 3986 056a 0B       		.uleb128 0xb
 3987 056b D0030000 		.4byte	.LASF44
 3988 056f 01       		.byte	0x1
 3989 0570 AB02     		.2byte	0x2ab
 3990 0572 2C000000 		.4byte	0x2c
 3991 0576 02       		.uleb128 0x2
 3992 0577 91       		.byte	0x91
 3993 0578 52       		.sleb128 -46
 3994 0579 0C       		.uleb128 0xc
 3995 057a 7100     		.ascii	"q\000"
 3996 057c 01       		.byte	0x1
 3997 057d AC02     		.2byte	0x2ac
 3998 057f 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 86


 3999 0583 02       		.uleb128 0x2
 4000 0584 91       		.byte	0x91
 4001 0585 73       		.sleb128 -13
 4002 0586 00       		.byte	0
 4003 0587 0D       		.uleb128 0xd
 4004 0588 23040000 		.4byte	.LASF61
 4005 058c 01       		.byte	0x1
 4006 058d D802     		.2byte	0x2d8
 4007 058f 64000000 		.4byte	0x64
 4008 0593 00000000 		.4byte	.LFB44
 4009 0597 AC000000 		.4byte	.LFE44-.LFB44
 4010 059b 01       		.uleb128 0x1
 4011 059c 9C       		.byte	0x9c
 4012 059d F8050000 		.4byte	0x5f8
 4013 05a1 0E       		.uleb128 0xe
 4014 05a2 9D030000 		.4byte	.LASF64
 4015 05a6 01       		.byte	0x1
 4016 05a7 D802     		.2byte	0x2d8
 4017 05a9 2C000000 		.4byte	0x2c
 4018 05ad 02       		.uleb128 0x2
 4019 05ae 91       		.byte	0x91
 4020 05af 5F       		.sleb128 -33
 4021 05b0 0C       		.uleb128 0xc
 4022 05b1 63726300 		.ascii	"crc\000"
 4023 05b5 01       		.byte	0x1
 4024 05b6 DA02     		.2byte	0x2da
 4025 05b8 64000000 		.4byte	0x64
 4026 05bc 02       		.uleb128 0x2
 4027 05bd 91       		.byte	0x91
 4028 05be 74       		.sleb128 -12
 4029 05bf 0B       		.uleb128 0xb
 4030 05c0 8D000000 		.4byte	.LASF59
 4031 05c4 01       		.byte	0x1
 4032 05c5 DB02     		.2byte	0x2db
 4033 05c7 64000000 		.4byte	0x64
 4034 05cb 02       		.uleb128 0x2
 4035 05cc 91       		.byte	0x91
 4036 05cd 68       		.sleb128 -24
 4037 05ce 0B       		.uleb128 0xb
 4038 05cf 86000000 		.4byte	.LASF60
 4039 05d3 01       		.byte	0x1
 4040 05d4 DC02     		.2byte	0x2dc
 4041 05d6 64000000 		.4byte	0x64
 4042 05da 02       		.uleb128 0x2
 4043 05db 91       		.byte	0x91
 4044 05dc 64       		.sleb128 -28
 4045 05dd 0C       		.uleb128 0xc
 4046 05de 6900     		.ascii	"i\000"
 4047 05e0 01       		.byte	0x1
 4048 05e1 DD02     		.2byte	0x2dd
 4049 05e3 5D000000 		.4byte	0x5d
 4050 05e7 02       		.uleb128 0x2
 4051 05e8 91       		.byte	0x91
 4052 05e9 70       		.sleb128 -16
 4053 05ea 0C       		.uleb128 0xc
 4054 05eb 6A00     		.ascii	"j\000"
 4055 05ed 01       		.byte	0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 87


 4056 05ee DD02     		.2byte	0x2dd
 4057 05f0 5D000000 		.4byte	0x5d
 4058 05f4 02       		.uleb128 0x2
 4059 05f5 91       		.byte	0x91
 4060 05f6 6C       		.sleb128 -20
 4061 05f7 00       		.byte	0
 4062 05f8 0D       		.uleb128 0xd
 4063 05f9 45010000 		.4byte	.LASF62
 4064 05fd 01       		.byte	0x1
 4065 05fe F302     		.2byte	0x2f3
 4066 0600 2C000000 		.4byte	0x2c
 4067 0604 00000000 		.4byte	.LFB45
 4068 0608 C0000000 		.4byte	.LFE45-.LFB45
 4069 060c 01       		.uleb128 0x1
 4070 060d 9C       		.byte	0x9c
 4071 060e 5A060000 		.4byte	0x65a
 4072 0612 0C       		.uleb128 0xc
 4073 0613 63726300 		.ascii	"crc\000"
 4074 0617 01       		.byte	0x1
 4075 0618 F502     		.2byte	0x2f5
 4076 061a 64000000 		.4byte	0x64
 4077 061e 02       		.uleb128 0x2
 4078 061f 91       		.byte	0x91
 4079 0620 74       		.sleb128 -12
 4080 0621 0B       		.uleb128 0xb
 4081 0622 8D000000 		.4byte	.LASF59
 4082 0626 01       		.byte	0x1
 4083 0627 F602     		.2byte	0x2f6
 4084 0629 64000000 		.4byte	0x64
 4085 062d 02       		.uleb128 0x2
 4086 062e 91       		.byte	0x91
 4087 062f 68       		.sleb128 -24
 4088 0630 0B       		.uleb128 0xb
 4089 0631 86000000 		.4byte	.LASF60
 4090 0635 01       		.byte	0x1
 4091 0636 F702     		.2byte	0x2f7
 4092 0638 64000000 		.4byte	0x64
 4093 063c 02       		.uleb128 0x2
 4094 063d 91       		.byte	0x91
 4095 063e 64       		.sleb128 -28
 4096 063f 0C       		.uleb128 0xc
 4097 0640 6900     		.ascii	"i\000"
 4098 0642 01       		.byte	0x1
 4099 0643 F802     		.2byte	0x2f8
 4100 0645 5D000000 		.4byte	0x5d
 4101 0649 02       		.uleb128 0x2
 4102 064a 91       		.byte	0x91
 4103 064b 70       		.sleb128 -16
 4104 064c 0C       		.uleb128 0xc
 4105 064d 6A00     		.ascii	"j\000"
 4106 064f 01       		.byte	0x1
 4107 0650 F802     		.2byte	0x2f8
 4108 0652 5D000000 		.4byte	0x5d
 4109 0656 02       		.uleb128 0x2
 4110 0657 91       		.byte	0x91
 4111 0658 6C       		.sleb128 -20
 4112 0659 00       		.byte	0
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 88


 4113 065a 0A       		.uleb128 0xa
 4114 065b B4040000 		.4byte	.LASF63
 4115 065f 01       		.byte	0x1
 4116 0660 1403     		.2byte	0x314
 4117 0662 00000000 		.4byte	.LFB46
 4118 0666 40000000 		.4byte	.LFE46-.LFB46
 4119 066a 01       		.uleb128 0x1
 4120 066b 9C       		.byte	0x9c
 4121 066c 80060000 		.4byte	0x680
 4122 0670 0E       		.uleb128 0xe
 4123 0671 B7000000 		.4byte	.LASF65
 4124 0675 01       		.byte	0x1
 4125 0676 1403     		.2byte	0x314
 4126 0678 5D000000 		.4byte	0x5d
 4127 067c 02       		.uleb128 0x2
 4128 067d 91       		.byte	0x91
 4129 067e 74       		.sleb128 -12
 4130 067f 00       		.byte	0
 4131 0680 0F       		.uleb128 0xf
 4132 0681 64000000 		.4byte	0x64
 4133 0685 90060000 		.4byte	0x690
 4134 0689 10       		.uleb128 0x10
 4135 068a 9B000000 		.4byte	0x9b
 4136 068e 31       		.byte	0x31
 4137 068f 00       		.byte	0
 4138 0690 11       		.uleb128 0x11
 4139 0691 4E010000 		.4byte	.LASF66
 4140 0695 01       		.byte	0x1
 4141 0696 15       		.byte	0x15
 4142 0697 80060000 		.4byte	0x680
 4143 069b 05       		.uleb128 0x5
 4144 069c 03       		.byte	0x3
 4145 069d 00000000 		.4byte	holdingReg
 4146 06a1 0F       		.uleb128 0xf
 4147 06a2 2C000000 		.4byte	0x2c
 4148 06a6 B1060000 		.4byte	0x6b1
 4149 06aa 10       		.uleb128 0x10
 4150 06ab 9B000000 		.4byte	0x9b
 4151 06af 31       		.byte	0x31
 4152 06b0 00       		.byte	0
 4153 06b1 11       		.uleb128 0x11
 4154 06b2 4C030000 		.4byte	.LASF67
 4155 06b6 01       		.byte	0x1
 4156 06b7 16       		.byte	0x16
 4157 06b8 A1060000 		.4byte	0x6a1
 4158 06bc 05       		.uleb128 0x5
 4159 06bd 03       		.byte	0x3
 4160 06be 00000000 		.4byte	coils
 4161 06c2 0F       		.uleb128 0xf
 4162 06c3 2C000000 		.4byte	0x2c
 4163 06c7 D2060000 		.4byte	0x6d2
 4164 06cb 10       		.uleb128 0x10
 4165 06cc 9B000000 		.4byte	0x9b
 4166 06d0 7C       		.byte	0x7c
 4167 06d1 00       		.byte	0
 4168 06d2 11       		.uleb128 0x11
 4169 06d3 C7030000 		.4byte	.LASF68
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 89


 4170 06d7 01       		.byte	0x1
 4171 06d8 17       		.byte	0x17
 4172 06d9 C2060000 		.4byte	0x6c2
 4173 06dd 05       		.uleb128 0x5
 4174 06de 03       		.byte	0x3
 4175 06df 00000000 		.4byte	received
 4176 06e3 11       		.uleb128 0x11
 4177 06e4 94030000 		.4byte	.LASF69
 4178 06e8 01       		.byte	0x1
 4179 06e9 18       		.byte	0x18
 4180 06ea C2060000 		.4byte	0x6c2
 4181 06ee 05       		.uleb128 0x5
 4182 06ef 03       		.byte	0x3
 4183 06f0 00000000 		.4byte	response
 4184 06f4 11       		.uleb128 0x11
 4185 06f5 E9030000 		.4byte	.LASF70
 4186 06f9 01       		.byte	0x1
 4187 06fa 1B       		.byte	0x1b
 4188 06fb 96000000 		.4byte	0x96
 4189 06ff 05       		.uleb128 0x5
 4190 0700 03       		.byte	0x3
 4191 0701 00000000 		.4byte	newMessage
 4192 0705 11       		.uleb128 0x11
 4193 0706 B7030000 		.4byte	.LASF71
 4194 070a 01       		.byte	0x1
 4195 070b 1C       		.byte	0x1c
 4196 070c 96000000 		.4byte	0x96
 4197 0710 05       		.uleb128 0x5
 4198 0711 03       		.byte	0x3
 4199 0712 00000000 		.4byte	middleOfMessage
 4200 0716 12       		.uleb128 0x12
 4201 0717 7A00     		.ascii	"z\000"
 4202 0719 01       		.byte	0x1
 4203 071a 1D       		.byte	0x1d
 4204 071b 96000000 		.4byte	0x96
 4205 071f 05       		.uleb128 0x5
 4206 0720 03       		.byte	0x3
 4207 0721 00000000 		.4byte	z
 4208 0725 11       		.uleb128 0x11
 4209 0726 1F030000 		.4byte	.LASF72
 4210 072a 01       		.byte	0x1
 4211 072b 1E       		.byte	0x1e
 4212 072c 96000000 		.4byte	0x96
 4213 0730 05       		.uleb128 0x5
 4214 0731 03       		.byte	0x3
 4215 0732 00000000 		.4byte	messageLengthNotChanged
 4216 0736 11       		.uleb128 0x11
 4217 0737 9D030000 		.4byte	.LASF64
 4218 073b 01       		.byte	0x1
 4219 073c 1F       		.byte	0x1f
 4220 073d 96000000 		.4byte	0x96
 4221 0741 05       		.uleb128 0x5
 4222 0742 03       		.byte	0x3
 4223 0743 00000000 		.4byte	messageLength
 4224 0747 11       		.uleb128 0x11
 4225 0748 5D040000 		.4byte	.LASF73
 4226 074c 01       		.byte	0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 90


 4227 074d 20       		.byte	0x20
 4228 074e 96000000 		.4byte	0x96
 4229 0752 05       		.uleb128 0x5
 4230 0753 03       		.byte	0x3
 4231 0754 00000000 		.4byte	oldMessageLength
 4232 0758 11       		.uleb128 0x11
 4233 0759 14030000 		.4byte	.LASF74
 4234 075d 01       		.byte	0x1
 4235 075e 21       		.byte	0x21
 4236 075f 96000000 		.4byte	0x96
 4237 0763 05       		.uleb128 0x5
 4238 0764 03       		.byte	0x3
 4239 0765 00000000 		.4byte	timerCount
 4240 0769 11       		.uleb128 0x11
 4241 076a C5040000 		.4byte	.LASF75
 4242 076e 01       		.byte	0x1
 4243 076f 22       		.byte	0x22
 4244 0770 96000000 		.4byte	0x96
 4245 0774 05       		.uleb128 0x5
 4246 0775 03       		.byte	0x3
 4247 0776 00000000 		.4byte	middleMessageCount
 4248 077a 11       		.uleb128 0x11
 4249 077b 3C030000 		.4byte	.LASF76
 4250 077f 01       		.byte	0x1
 4251 0780 23       		.byte	0x23
 4252 0781 96000000 		.4byte	0x96
 4253 0785 05       		.uleb128 0x5
 4254 0786 03       		.byte	0x3
 4255 0787 00000000 		.4byte	newMessageCount
 4256 078b 11       		.uleb128 0x11
 4257 078c 75000000 		.4byte	.LASF77
 4258 0790 01       		.byte	0x1
 4259 0791 24       		.byte	0x24
 4260 0792 96000000 		.4byte	0x96
 4261 0796 05       		.uleb128 0x5
 4262 0797 03       		.byte	0x3
 4263 0798 00000000 		.4byte	oldPin
 4264 079c 11       		.uleb128 0x11
 4265 079d DB030000 		.4byte	.LASF78
 4266 07a1 01       		.byte	0x1
 4267 07a2 25       		.byte	0x25
 4268 07a3 96000000 		.4byte	0x96
 4269 07a7 05       		.uleb128 0x5
 4270 07a8 03       		.byte	0x3
 4271 07a9 00000000 		.4byte	modbusMessage
 4272 07ad 11       		.uleb128 0x11
 4273 07ae 9F000000 		.4byte	.LASF79
 4274 07b2 01       		.byte	0x1
 4275 07b3 26       		.byte	0x26
 4276 07b4 96000000 		.4byte	0x96
 4277 07b8 05       		.uleb128 0x5
 4278 07b9 03       		.byte	0x3
 4279 07ba 00000000 		.4byte	turnLineAround
 4280 07be 00       		.byte	0
 4281              		.section	.debug_abbrev,"",%progbits
 4282              	.Ldebug_abbrev0:
 4283 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 91


 4284 0001 11       		.uleb128 0x11
 4285 0002 01       		.byte	0x1
 4286 0003 25       		.uleb128 0x25
 4287 0004 0E       		.uleb128 0xe
 4288 0005 13       		.uleb128 0x13
 4289 0006 0B       		.uleb128 0xb
 4290 0007 03       		.uleb128 0x3
 4291 0008 0E       		.uleb128 0xe
 4292 0009 1B       		.uleb128 0x1b
 4293 000a 0E       		.uleb128 0xe
 4294 000b 55       		.uleb128 0x55
 4295 000c 17       		.uleb128 0x17
 4296 000d 11       		.uleb128 0x11
 4297 000e 01       		.uleb128 0x1
 4298 000f 10       		.uleb128 0x10
 4299 0010 17       		.uleb128 0x17
 4300 0011 00       		.byte	0
 4301 0012 00       		.byte	0
 4302 0013 02       		.uleb128 0x2
 4303 0014 24       		.uleb128 0x24
 4304 0015 00       		.byte	0
 4305 0016 0B       		.uleb128 0xb
 4306 0017 0B       		.uleb128 0xb
 4307 0018 3E       		.uleb128 0x3e
 4308 0019 0B       		.uleb128 0xb
 4309 001a 03       		.uleb128 0x3
 4310 001b 0E       		.uleb128 0xe
 4311 001c 00       		.byte	0
 4312 001d 00       		.byte	0
 4313 001e 03       		.uleb128 0x3
 4314 001f 24       		.uleb128 0x24
 4315 0020 00       		.byte	0
 4316 0021 0B       		.uleb128 0xb
 4317 0022 0B       		.uleb128 0xb
 4318 0023 3E       		.uleb128 0x3e
 4319 0024 0B       		.uleb128 0xb
 4320 0025 03       		.uleb128 0x3
 4321 0026 08       		.uleb128 0x8
 4322 0027 00       		.byte	0
 4323 0028 00       		.byte	0
 4324 0029 04       		.uleb128 0x4
 4325 002a 16       		.uleb128 0x16
 4326 002b 00       		.byte	0
 4327 002c 03       		.uleb128 0x3
 4328 002d 0E       		.uleb128 0xe
 4329 002e 3A       		.uleb128 0x3a
 4330 002f 0B       		.uleb128 0xb
 4331 0030 3B       		.uleb128 0x3b
 4332 0031 0B       		.uleb128 0xb
 4333 0032 49       		.uleb128 0x49
 4334 0033 13       		.uleb128 0x13
 4335 0034 00       		.byte	0
 4336 0035 00       		.byte	0
 4337 0036 05       		.uleb128 0x5
 4338 0037 35       		.uleb128 0x35
 4339 0038 00       		.byte	0
 4340 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 92


 4341 003a 13       		.uleb128 0x13
 4342 003b 00       		.byte	0
 4343 003c 00       		.byte	0
 4344 003d 06       		.uleb128 0x6
 4345 003e 2E       		.uleb128 0x2e
 4346 003f 00       		.byte	0
 4347 0040 3F       		.uleb128 0x3f
 4348 0041 19       		.uleb128 0x19
 4349 0042 03       		.uleb128 0x3
 4350 0043 0E       		.uleb128 0xe
 4351 0044 3A       		.uleb128 0x3a
 4352 0045 0B       		.uleb128 0xb
 4353 0046 3B       		.uleb128 0x3b
 4354 0047 0B       		.uleb128 0xb
 4355 0048 27       		.uleb128 0x27
 4356 0049 19       		.uleb128 0x19
 4357 004a 11       		.uleb128 0x11
 4358 004b 01       		.uleb128 0x1
 4359 004c 12       		.uleb128 0x12
 4360 004d 06       		.uleb128 0x6
 4361 004e 40       		.uleb128 0x40
 4362 004f 18       		.uleb128 0x18
 4363 0050 9642     		.uleb128 0x2116
 4364 0052 19       		.uleb128 0x19
 4365 0053 00       		.byte	0
 4366 0054 00       		.byte	0
 4367 0055 07       		.uleb128 0x7
 4368 0056 2E       		.uleb128 0x2e
 4369 0057 01       		.byte	0x1
 4370 0058 3F       		.uleb128 0x3f
 4371 0059 19       		.uleb128 0x19
 4372 005a 03       		.uleb128 0x3
 4373 005b 0E       		.uleb128 0xe
 4374 005c 3A       		.uleb128 0x3a
 4375 005d 0B       		.uleb128 0xb
 4376 005e 3B       		.uleb128 0x3b
 4377 005f 0B       		.uleb128 0xb
 4378 0060 27       		.uleb128 0x27
 4379 0061 19       		.uleb128 0x19
 4380 0062 11       		.uleb128 0x11
 4381 0063 01       		.uleb128 0x1
 4382 0064 12       		.uleb128 0x12
 4383 0065 06       		.uleb128 0x6
 4384 0066 40       		.uleb128 0x40
 4385 0067 18       		.uleb128 0x18
 4386 0068 9642     		.uleb128 0x2116
 4387 006a 19       		.uleb128 0x19
 4388 006b 01       		.uleb128 0x1
 4389 006c 13       		.uleb128 0x13
 4390 006d 00       		.byte	0
 4391 006e 00       		.byte	0
 4392 006f 08       		.uleb128 0x8
 4393 0070 34       		.uleb128 0x34
 4394 0071 00       		.byte	0
 4395 0072 03       		.uleb128 0x3
 4396 0073 0E       		.uleb128 0xe
 4397 0074 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 93


 4398 0075 0B       		.uleb128 0xb
 4399 0076 3B       		.uleb128 0x3b
 4400 0077 0B       		.uleb128 0xb
 4401 0078 49       		.uleb128 0x49
 4402 0079 13       		.uleb128 0x13
 4403 007a 02       		.uleb128 0x2
 4404 007b 18       		.uleb128 0x18
 4405 007c 00       		.byte	0
 4406 007d 00       		.byte	0
 4407 007e 09       		.uleb128 0x9
 4408 007f 34       		.uleb128 0x34
 4409 0080 00       		.byte	0
 4410 0081 03       		.uleb128 0x3
 4411 0082 08       		.uleb128 0x8
 4412 0083 3A       		.uleb128 0x3a
 4413 0084 0B       		.uleb128 0xb
 4414 0085 3B       		.uleb128 0x3b
 4415 0086 0B       		.uleb128 0xb
 4416 0087 49       		.uleb128 0x49
 4417 0088 13       		.uleb128 0x13
 4418 0089 02       		.uleb128 0x2
 4419 008a 18       		.uleb128 0x18
 4420 008b 00       		.byte	0
 4421 008c 00       		.byte	0
 4422 008d 0A       		.uleb128 0xa
 4423 008e 2E       		.uleb128 0x2e
 4424 008f 01       		.byte	0x1
 4425 0090 3F       		.uleb128 0x3f
 4426 0091 19       		.uleb128 0x19
 4427 0092 03       		.uleb128 0x3
 4428 0093 0E       		.uleb128 0xe
 4429 0094 3A       		.uleb128 0x3a
 4430 0095 0B       		.uleb128 0xb
 4431 0096 3B       		.uleb128 0x3b
 4432 0097 05       		.uleb128 0x5
 4433 0098 27       		.uleb128 0x27
 4434 0099 19       		.uleb128 0x19
 4435 009a 11       		.uleb128 0x11
 4436 009b 01       		.uleb128 0x1
 4437 009c 12       		.uleb128 0x12
 4438 009d 06       		.uleb128 0x6
 4439 009e 40       		.uleb128 0x40
 4440 009f 18       		.uleb128 0x18
 4441 00a0 9642     		.uleb128 0x2116
 4442 00a2 19       		.uleb128 0x19
 4443 00a3 01       		.uleb128 0x1
 4444 00a4 13       		.uleb128 0x13
 4445 00a5 00       		.byte	0
 4446 00a6 00       		.byte	0
 4447 00a7 0B       		.uleb128 0xb
 4448 00a8 34       		.uleb128 0x34
 4449 00a9 00       		.byte	0
 4450 00aa 03       		.uleb128 0x3
 4451 00ab 0E       		.uleb128 0xe
 4452 00ac 3A       		.uleb128 0x3a
 4453 00ad 0B       		.uleb128 0xb
 4454 00ae 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 94


 4455 00af 05       		.uleb128 0x5
 4456 00b0 49       		.uleb128 0x49
 4457 00b1 13       		.uleb128 0x13
 4458 00b2 02       		.uleb128 0x2
 4459 00b3 18       		.uleb128 0x18
 4460 00b4 00       		.byte	0
 4461 00b5 00       		.byte	0
 4462 00b6 0C       		.uleb128 0xc
 4463 00b7 34       		.uleb128 0x34
 4464 00b8 00       		.byte	0
 4465 00b9 03       		.uleb128 0x3
 4466 00ba 08       		.uleb128 0x8
 4467 00bb 3A       		.uleb128 0x3a
 4468 00bc 0B       		.uleb128 0xb
 4469 00bd 3B       		.uleb128 0x3b
 4470 00be 05       		.uleb128 0x5
 4471 00bf 49       		.uleb128 0x49
 4472 00c0 13       		.uleb128 0x13
 4473 00c1 02       		.uleb128 0x2
 4474 00c2 18       		.uleb128 0x18
 4475 00c3 00       		.byte	0
 4476 00c4 00       		.byte	0
 4477 00c5 0D       		.uleb128 0xd
 4478 00c6 2E       		.uleb128 0x2e
 4479 00c7 01       		.byte	0x1
 4480 00c8 3F       		.uleb128 0x3f
 4481 00c9 19       		.uleb128 0x19
 4482 00ca 03       		.uleb128 0x3
 4483 00cb 0E       		.uleb128 0xe
 4484 00cc 3A       		.uleb128 0x3a
 4485 00cd 0B       		.uleb128 0xb
 4486 00ce 3B       		.uleb128 0x3b
 4487 00cf 05       		.uleb128 0x5
 4488 00d0 27       		.uleb128 0x27
 4489 00d1 19       		.uleb128 0x19
 4490 00d2 49       		.uleb128 0x49
 4491 00d3 13       		.uleb128 0x13
 4492 00d4 11       		.uleb128 0x11
 4493 00d5 01       		.uleb128 0x1
 4494 00d6 12       		.uleb128 0x12
 4495 00d7 06       		.uleb128 0x6
 4496 00d8 40       		.uleb128 0x40
 4497 00d9 18       		.uleb128 0x18
 4498 00da 9742     		.uleb128 0x2117
 4499 00dc 19       		.uleb128 0x19
 4500 00dd 01       		.uleb128 0x1
 4501 00de 13       		.uleb128 0x13
 4502 00df 00       		.byte	0
 4503 00e0 00       		.byte	0
 4504 00e1 0E       		.uleb128 0xe
 4505 00e2 05       		.uleb128 0x5
 4506 00e3 00       		.byte	0
 4507 00e4 03       		.uleb128 0x3
 4508 00e5 0E       		.uleb128 0xe
 4509 00e6 3A       		.uleb128 0x3a
 4510 00e7 0B       		.uleb128 0xb
 4511 00e8 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 95


 4512 00e9 05       		.uleb128 0x5
 4513 00ea 49       		.uleb128 0x49
 4514 00eb 13       		.uleb128 0x13
 4515 00ec 02       		.uleb128 0x2
 4516 00ed 18       		.uleb128 0x18
 4517 00ee 00       		.byte	0
 4518 00ef 00       		.byte	0
 4519 00f0 0F       		.uleb128 0xf
 4520 00f1 01       		.uleb128 0x1
 4521 00f2 01       		.byte	0x1
 4522 00f3 49       		.uleb128 0x49
 4523 00f4 13       		.uleb128 0x13
 4524 00f5 01       		.uleb128 0x1
 4525 00f6 13       		.uleb128 0x13
 4526 00f7 00       		.byte	0
 4527 00f8 00       		.byte	0
 4528 00f9 10       		.uleb128 0x10
 4529 00fa 21       		.uleb128 0x21
 4530 00fb 00       		.byte	0
 4531 00fc 49       		.uleb128 0x49
 4532 00fd 13       		.uleb128 0x13
 4533 00fe 2F       		.uleb128 0x2f
 4534 00ff 0B       		.uleb128 0xb
 4535 0100 00       		.byte	0
 4536 0101 00       		.byte	0
 4537 0102 11       		.uleb128 0x11
 4538 0103 34       		.uleb128 0x34
 4539 0104 00       		.byte	0
 4540 0105 03       		.uleb128 0x3
 4541 0106 0E       		.uleb128 0xe
 4542 0107 3A       		.uleb128 0x3a
 4543 0108 0B       		.uleb128 0xb
 4544 0109 3B       		.uleb128 0x3b
 4545 010a 0B       		.uleb128 0xb
 4546 010b 49       		.uleb128 0x49
 4547 010c 13       		.uleb128 0x13
 4548 010d 3F       		.uleb128 0x3f
 4549 010e 19       		.uleb128 0x19
 4550 010f 02       		.uleb128 0x2
 4551 0110 18       		.uleb128 0x18
 4552 0111 00       		.byte	0
 4553 0112 00       		.byte	0
 4554 0113 12       		.uleb128 0x12
 4555 0114 34       		.uleb128 0x34
 4556 0115 00       		.byte	0
 4557 0116 03       		.uleb128 0x3
 4558 0117 08       		.uleb128 0x8
 4559 0118 3A       		.uleb128 0x3a
 4560 0119 0B       		.uleb128 0xb
 4561 011a 3B       		.uleb128 0x3b
 4562 011b 0B       		.uleb128 0xb
 4563 011c 49       		.uleb128 0x49
 4564 011d 13       		.uleb128 0x13
 4565 011e 3F       		.uleb128 0x3f
 4566 011f 19       		.uleb128 0x19
 4567 0120 02       		.uleb128 0x2
 4568 0121 18       		.uleb128 0x18
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 96


 4569 0122 00       		.byte	0
 4570 0123 00       		.byte	0
 4571 0124 00       		.byte	0
 4572              		.section	.debug_aranges,"",%progbits
 4573 0000 84000000 		.4byte	0x84
 4574 0004 0200     		.2byte	0x2
 4575 0006 00000000 		.4byte	.Ldebug_info0
 4576 000a 04       		.byte	0x4
 4577 000b 00       		.byte	0
 4578 000c 0000     		.2byte	0
 4579 000e 0000     		.2byte	0
 4580 0010 00000000 		.4byte	.LFB33
 4581 0014 D8000000 		.4byte	.LFE33-.LFB33
 4582 0018 00000000 		.4byte	.LFB34
 4583 001c FC000000 		.4byte	.LFE34-.LFB34
 4584 0020 00000000 		.4byte	.LFB35
 4585 0024 98000000 		.4byte	.LFE35-.LFB35
 4586 0028 00000000 		.4byte	.LFB36
 4587 002c 98020000 		.4byte	.LFE36-.LFB36
 4588 0030 00000000 		.4byte	.LFB37
 4589 0034 98020000 		.4byte	.LFE37-.LFB37
 4590 0038 00000000 		.4byte	.LFB38
 4591 003c A8010000 		.4byte	.LFE38-.LFB38
 4592 0040 00000000 		.4byte	.LFB39
 4593 0044 AC010000 		.4byte	.LFE39-.LFB39
 4594 0048 00000000 		.4byte	.LFB40
 4595 004c 00010000 		.4byte	.LFE40-.LFB40
 4596 0050 00000000 		.4byte	.LFB41
 4597 0054 84010000 		.4byte	.LFE41-.LFB41
 4598 0058 00000000 		.4byte	.LFB42
 4599 005c 10010000 		.4byte	.LFE42-.LFB42
 4600 0060 00000000 		.4byte	.LFB43
 4601 0064 64020000 		.4byte	.LFE43-.LFB43
 4602 0068 00000000 		.4byte	.LFB44
 4603 006c AC000000 		.4byte	.LFE44-.LFB44
 4604 0070 00000000 		.4byte	.LFB45
 4605 0074 C0000000 		.4byte	.LFE45-.LFB45
 4606 0078 00000000 		.4byte	.LFB46
 4607 007c 40000000 		.4byte	.LFE46-.LFB46
 4608 0080 00000000 		.4byte	0
 4609 0084 00000000 		.4byte	0
 4610              		.section	.debug_ranges,"",%progbits
 4611              	.Ldebug_ranges0:
 4612 0000 00000000 		.4byte	.LFB33
 4613 0004 D8000000 		.4byte	.LFE33
 4614 0008 00000000 		.4byte	.LFB34
 4615 000c FC000000 		.4byte	.LFE34
 4616 0010 00000000 		.4byte	.LFB35
 4617 0014 98000000 		.4byte	.LFE35
 4618 0018 00000000 		.4byte	.LFB36
 4619 001c 98020000 		.4byte	.LFE36
 4620 0020 00000000 		.4byte	.LFB37
 4621 0024 98020000 		.4byte	.LFE37
 4622 0028 00000000 		.4byte	.LFB38
 4623 002c A8010000 		.4byte	.LFE38
 4624 0030 00000000 		.4byte	.LFB39
 4625 0034 AC010000 		.4byte	.LFE39
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 97


 4626 0038 00000000 		.4byte	.LFB40
 4627 003c 00010000 		.4byte	.LFE40
 4628 0040 00000000 		.4byte	.LFB41
 4629 0044 84010000 		.4byte	.LFE41
 4630 0048 00000000 		.4byte	.LFB42
 4631 004c 10010000 		.4byte	.LFE42
 4632 0050 00000000 		.4byte	.LFB43
 4633 0054 64020000 		.4byte	.LFE43
 4634 0058 00000000 		.4byte	.LFB44
 4635 005c AC000000 		.4byte	.LFE44
 4636 0060 00000000 		.4byte	.LFB45
 4637 0064 C0000000 		.4byte	.LFE45
 4638 0068 00000000 		.4byte	.LFB46
 4639 006c 40000000 		.4byte	.LFE46
 4640 0070 00000000 		.4byte	0
 4641 0074 00000000 		.4byte	0
 4642              		.section	.debug_line,"",%progbits
 4643              	.Ldebug_line0:
 4644 0000 3F040000 		.section	.debug_str,"MS",%progbits,1
 4644      02004700 
 4644      00000201 
 4644      FB0E0D00 
 4644      01010101 
 4645              	.LASF50:
 4646 0000 77635F76 		.ascii	"wc_valToWriteLow\000"
 4646      616C546F 
 4646      57726974 
 4646      654C6F77 
 4646      00
 4647              	.LASF82:
 4648 0011 433A5C55 		.ascii	"C:\\Users\\Sam\\OneDrive\\Project\\Software\\PSoC S"
 4648      73657273 
 4648      5C53616D 
 4648      5C4F6E65 
 4648      44726976 
 4649 003e 6F667477 		.ascii	"oftware\\PSoC 4 Pioneer Modbus Slave.cydsn\000"
 4649      6172655C 
 4649      50536F43 
 4649      20342050 
 4649      696F6E65 
 4650              	.LASF42:
 4651 0068 776D725F 		.ascii	"wmr_numBytes\000"
 4651      6E756D42 
 4651      79746573 
 4651      00
 4652              	.LASF77:
 4653 0075 6F6C6450 		.ascii	"oldPin\000"
 4653      696E00
 4654              	.LASF21:
 4655 007c 72656D61 		.ascii	"remainder\000"
 4655      696E6465 
 4655      7200
 4656              	.LASF60:
 4657 0086 6372634C 		.ascii	"crcLow\000"
 4657      6F7700
 4658              	.LASF59:
 4659 008d 63726348 		.ascii	"crcHigh\000"
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 98


 4659      69676800 
 4660              	.LASF2:
 4661 0095 73686F72 		.ascii	"short int\000"
 4661      7420696E 
 4661      7400
 4662              	.LASF79:
 4663 009f 7475726E 		.ascii	"turnLineAround\000"
 4663      4C696E65 
 4663      41726F75 
 4663      6E6400
 4664              	.LASF14:
 4665 00ae 73697A65 		.ascii	"sizetype\000"
 4665      74797065 
 4665      00
 4666              	.LASF65:
 4667 00b7 64656C61 		.ascii	"delay\000"
 4667      7900
 4668              	.LASF49:
 4669 00bd 77635F76 		.ascii	"wc_valToWrite\000"
 4669      616C546F 
 4669      57726974 
 4669      6500
 4670              	.LASF32:
 4671 00cb 77725F76 		.ascii	"wr_valToWrite\000"
 4671      616C546F 
 4671      57726974 
 4671      6500
 4672              	.LASF58:
 4673 00d9 776D635F 		.ascii	"wmc_numCoilsLow\000"
 4673      6E756D43 
 4673      6F696C73 
 4673      4C6F7700 
 4674              	.LASF43:
 4675 00e9 776D725F 		.ascii	"wmr_numBytesTST\000"
 4675      6E756D42 
 4675      79746573 
 4675      54535400 
 4676              	.LASF55:
 4677 00f9 776D635F 		.ascii	"wmc_AddressLow\000"
 4677      41646472 
 4677      6573734C 
 4677      6F7700
 4678              	.LASF38:
 4679 0108 776D725F 		.ascii	"wmr_AddressLow\000"
 4679      41646472 
 4679      6573734C 
 4679      6F7700
 4680              	.LASF19:
 4681 0117 72635F6E 		.ascii	"rc_numCoils\000"
 4681      756D436F 
 4681      696C7300 
 4682              	.LASF9:
 4683 0123 75696E74 		.ascii	"uint8\000"
 4683      3800
 4684              	.LASF46:
 4685 0129 77635F41 		.ascii	"wc_AddressLow\000"
 4685      64647265 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 99


 4685      73734C6F 
 4685      7700
 4686              	.LASF29:
 4687 0137 77725F41 		.ascii	"wr_AddressLow\000"
 4687      64647265 
 4687      73734C6F 
 4687      7700
 4688              	.LASF62:
 4689 0145 63686563 		.ascii	"checkCRC\000"
 4689      6B435243 
 4689      00
 4690              	.LASF66:
 4691 014e 686F6C64 		.ascii	"holdingReg\000"
 4691      696E6752 
 4691      656700
 4692              	.LASF80:
 4693 0159 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4693      4320342E 
 4693      382E3420 
 4693      32303134 
 4693      30353236 
 4694 018c 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4694      20726576 
 4694      6973696F 
 4694      6E203231 
 4694      31333538 
 4695 01bf 30202D66 		.ascii	"0 -ffunction-sections\000"
 4695      66756E63 
 4695      74696F6E 
 4695      2D736563 
 4695      74696F6E 
 4696              	.LASF53:
 4697 01d5 776D635F 		.ascii	"wmc_Address\000"
 4697      41646472 
 4697      65737300 
 4698              	.LASF11:
 4699 01e1 666C6F61 		.ascii	"float\000"
 4699      7400
 4700              	.LASF57:
 4701 01e7 776D635F 		.ascii	"wmc_numCoilsHigh\000"
 4701      6E756D43 
 4701      6F696C73 
 4701      48696768 
 4701      00
 4702              	.LASF6:
 4703 01f8 6C6F6E67 		.ascii	"long long int\000"
 4703      206C6F6E 
 4703      6720696E 
 4703      7400
 4704              	.LASF37:
 4705 0206 776D725F 		.ascii	"wmr_AddressHigh\000"
 4705      41646472 
 4705      65737348 
 4705      69676800 
 4706              	.LASF47:
 4707 0216 77635F41 		.ascii	"wc_AddressHigh\000"
 4707      64647265 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 100


 4707      73734869 
 4707      676800
 4708              	.LASF30:
 4709 0225 77725F41 		.ascii	"wr_AddressHigh\000"
 4709      64647265 
 4709      73734869 
 4709      676800
 4710              	.LASF4:
 4711 0234 6C6F6E67 		.ascii	"long int\000"
 4711      20696E74 
 4711      00
 4712              	.LASF17:
 4713 023d 70726F63 		.ascii	"processMessage\000"
 4713      6573734D 
 4713      65737361 
 4713      676500
 4714              	.LASF35:
 4715 024c 77726974 		.ascii	"writeMultipleRegs\000"
 4715      654D756C 
 4715      7469706C 
 4715      65526567 
 4715      7300
 4716              	.LASF25:
 4717 025e 72725F41 		.ascii	"rr_Address\000"
 4717      64647265 
 4717      737300
 4718              	.LASF34:
 4719 0269 77725F76 		.ascii	"wr_valToWriteHigh\000"
 4719      616C546F 
 4719      57726974 
 4719      65486967 
 4719      6800
 4720              	.LASF31:
 4721 027b 77725F41 		.ascii	"wr_Address\000"
 4721      64647265 
 4721      737300
 4722              	.LASF52:
 4723 0286 77726974 		.ascii	"writeMultipleCoils\000"
 4723      654D756C 
 4723      7469706C 
 4723      65436F69 
 4723      6C7300
 4724              	.LASF1:
 4725 0299 756E7369 		.ascii	"unsigned char\000"
 4725      676E6564 
 4725      20636861 
 4725      7200
 4726              	.LASF0:
 4727 02a7 7369676E 		.ascii	"signed char\000"
 4727      65642063 
 4727      68617200 
 4728              	.LASF7:
 4729 02b3 6C6F6E67 		.ascii	"long long unsigned int\000"
 4729      206C6F6E 
 4729      6720756E 
 4729      7369676E 
 4729      65642069 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 101


 4730              	.LASF45:
 4731 02ca 77726974 		.ascii	"writeCoil\000"
 4731      65436F69 
 4731      6C00
 4732              	.LASF22:
 4733 02d4 72656164 		.ascii	"readCoil\000"
 4733      436F696C 
 4733      00
 4734              	.LASF8:
 4735 02dd 756E7369 		.ascii	"unsigned int\000"
 4735      676E6564 
 4735      20696E74 
 4735      00
 4736              	.LASF81:
 4737 02ea 2E5C4D6F 		.ascii	".\\Modbus.c\000"
 4737      64627573 
 4737      2E6300
 4738              	.LASF36:
 4739 02f5 776D725F 		.ascii	"wmr_Address\000"
 4739      41646472 
 4739      65737300 
 4740              	.LASF3:
 4741 0301 73686F72 		.ascii	"short unsigned int\000"
 4741      7420756E 
 4741      7369676E 
 4741      65642069 
 4741      6E7400
 4742              	.LASF74:
 4743 0314 74696D65 		.ascii	"timerCount\000"
 4743      72436F75 
 4743      6E7400
 4744              	.LASF72:
 4745 031f 6D657373 		.ascii	"messageLengthNotChanged\000"
 4745      6167654C 
 4745      656E6774 
 4745      684E6F74 
 4745      4368616E 
 4746              	.LASF13:
 4747 0337 63686172 		.ascii	"char\000"
 4747      00
 4748              	.LASF76:
 4749 033c 6E65774D 		.ascii	"newMessageCount\000"
 4749      65737361 
 4749      6765436F 
 4749      756E7400 
 4750              	.LASF67:
 4751 034c 636F696C 		.ascii	"coils\000"
 4751      7300
 4752              	.LASF51:
 4753 0352 77635F76 		.ascii	"wc_valToWriteHigh\000"
 4753      616C546F 
 4753      57726974 
 4753      65486967 
 4753      6800
 4754              	.LASF40:
 4755 0364 776D725F 		.ascii	"wmr_numRegsHigh\000"
 4755      6E756D52 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 102


 4755      65677348 
 4755      69676800 
 4756              	.LASF10:
 4757 0374 75696E74 		.ascii	"uint32\000"
 4757      333200
 4758              	.LASF5:
 4759 037b 6C6F6E67 		.ascii	"long unsigned int\000"
 4759      20756E73 
 4759      69676E65 
 4759      6420696E 
 4759      7400
 4760              	.LASF12:
 4761 038d 646F7562 		.ascii	"double\000"
 4761      6C6500
 4762              	.LASF69:
 4763 0394 72657370 		.ascii	"response\000"
 4763      6F6E7365 
 4763      00
 4764              	.LASF64:
 4765 039d 6D657373 		.ascii	"messageLength\000"
 4765      6167654C 
 4765      656E6774 
 4765      6800
 4766              	.LASF39:
 4767 03ab 776D725F 		.ascii	"wmr_numRegs\000"
 4767      6E756D52 
 4767      65677300 
 4768              	.LASF71:
 4769 03b7 6D696464 		.ascii	"middleOfMessage\000"
 4769      6C654F66 
 4769      4D657373 
 4769      61676500 
 4770              	.LASF68:
 4771 03c7 72656365 		.ascii	"received\000"
 4771      69766564 
 4771      00
 4772              	.LASF44:
 4773 03d0 76616C54 		.ascii	"valToWrite\000"
 4773      6F577269 
 4773      746500
 4774              	.LASF78:
 4775 03db 6D6F6462 		.ascii	"modbusMessage\000"
 4775      75734D65 
 4775      73736167 
 4775      6500
 4776              	.LASF70:
 4777 03e9 6E65774D 		.ascii	"newMessage\000"
 4777      65737361 
 4777      676500
 4778              	.LASF33:
 4779 03f4 77725F76 		.ascii	"wr_valToWriteLow\000"
 4779      616C546F 
 4779      57726974 
 4779      654C6F77 
 4779      00
 4780              	.LASF54:
 4781 0405 776D635F 		.ascii	"wmc_AddressHigh\000"
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 103


 4781      41646472 
 4781      65737348 
 4781      69676800 
 4782              	.LASF23:
 4783 0415 72656164 		.ascii	"readInputCoil\000"
 4783      496E7075 
 4783      74436F69 
 4783      6C00
 4784              	.LASF61:
 4785 0423 67656E65 		.ascii	"generateCRC\000"
 4785      72617465 
 4785      43524300 
 4786              	.LASF20:
 4787 042f 686F774D 		.ascii	"howManyBytes\000"
 4787      616E7942 
 4787      79746573 
 4787      00
 4788              	.LASF26:
 4789 043c 72725F6E 		.ascii	"rr_numRegs\000"
 4789      756D5265 
 4789      677300
 4790              	.LASF18:
 4791 0447 72635F41 		.ascii	"rc_Address\000"
 4791      64647265 
 4791      737300
 4792              	.LASF48:
 4793 0452 77635F41 		.ascii	"wc_Address\000"
 4793      64647265 
 4793      737300
 4794              	.LASF73:
 4795 045d 6F6C644D 		.ascii	"oldMessageLength\000"
 4795      65737361 
 4795      67654C65 
 4795      6E677468 
 4795      00
 4796              	.LASF41:
 4797 046e 776D725F 		.ascii	"wmr_numRegsLow\000"
 4797      6E756D52 
 4797      6567734C 
 4797      6F7700
 4798              	.LASF56:
 4799 047d 776D635F 		.ascii	"wmc_numCoils\000"
 4799      6E756D43 
 4799      6F696C73 
 4799      00
 4800              	.LASF28:
 4801 048a 77726974 		.ascii	"writeReg\000"
 4801      65526567 
 4801      00
 4802              	.LASF24:
 4803 0493 72656164 		.ascii	"readInputReg\000"
 4803      496E7075 
 4803      74526567 
 4803      00
 4804              	.LASF16:
 4805 04a0 63686563 		.ascii	"checkIfEndOfMessage\000"
 4805      6B496645 
ARM GAS  C:\Users\Sam\AppData\Local\Temp\ccz5mxRN.s 			page 104


 4805      6E644F66 
 4805      4D657373 
 4805      61676500 
 4806              	.LASF63:
 4807 04b4 72657370 		.ascii	"responseFinished\000"
 4807      6F6E7365 
 4807      46696E69 
 4807      73686564 
 4807      00
 4808              	.LASF75:
 4809 04c5 6D696464 		.ascii	"middleMessageCount\000"
 4809      6C654D65 
 4809      73736167 
 4809      65436F75 
 4809      6E7400
 4810              	.LASF27:
 4811 04d8 72656164 		.ascii	"readReg\000"
 4811      52656700 
 4812              	.LASF15:
 4813 04e0 6465636F 		.ascii	"decodeMessage\000"
 4813      64654D65 
 4813      73736167 
 4813      6500
 4814              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
